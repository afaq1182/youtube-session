var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.466,1,2.584]],["body/controllers/AppController.html",[0,1.91,1,3.367,2,1.367,3,0.153,4,0.134,5,0.134,6,2.968,7,0.214,8,0.919,9,4.146,10,1.382,11,3.367,12,4.146,13,3.452,14,1.805,15,0.019,16,3.452,17,3.452,18,3.319,19,0.485,20,3.452,21,1.114,22,0.767,23,1.114,24,4.329,25,1.059,26,1.422,27,3.452,28,3.452,29,3.452,30,1.12,31,2.968,32,4.421,33,2.968,34,3.149,35,3.452,36,0.329,37,2.061,38,2.219,39,2.41,40,2.219,41,0.449,42,3.319,43,2.968,44,2.968,45,1.806,46,2.968,47,3.452,48,2.219,49,3.452,50,2.968,51,0.153,52,0.157,53,1.367,54,2.968,55,2.648,56,3.452,57,3.452,58,3.452,59,1.114,60,2.968,61,4.146,62,2.968,63,3.452,64,4.824,65,3.452,66,3.881,67,3.452,68,3.452,69,2.968,70,2.968,71,3.452,72,4.146,73,3.452,74,1.367,75,3.452,76,1.606,77,3.452,78,3.452,79,3.452,80,2.968,81,3.452,82,0.012,83,0.012]],["title/modules/AppModule.html",[84,1.262,85,2.584]],["body/modules/AppModule.html",[1,3.881,2,1.91,3,0.153,4,0.134,5,0.134,15,0.019,36,0.367,41,0.449,42,3.916,43,2.968,51,0.153,52,0.157,76,1.606,82,0.012,83,0.012,84,1.644,85,5.205,86,1.606,87,2.243,88,2.968,89,2.968,90,2.968,91,4.071,92,4.071,93,4.218,94,4.218,95,4.218,96,4.218,97,2.524,98,1.806,99,3.452,100,2.69,101,2.69,102,3.367,103,3.452,104,3.452,105,3.452,106,1.925,107,1.606,108,2.648,109,3.452,110,3.452,111,3.452,112,3.452,113,3.452,114,3.452,115,2.968,116,2.648,117,2.648,118,2.219,119,4.824,120,2.968,121,3.452,122,3.452,123,3.452,124,2.968,125,3.452,126,3.452]],["title/injectables/AppService.html",[42,2.21,127,0.636]],["body/injectables/AppService.html",[3,0.23,4,0.201,5,0.201,7,0.321,8,1.199,9,6.057,15,0.018,19,0.453,25,0.989,26,1.856,36,0.26,41,0.675,42,3.757,51,0.23,52,0.236,59,1.039,82,0.015,83,0.015,127,1.082,128,1.952,129,4.459,130,5.188,131,5.188,132,5.188]],["title/controllers/AuthController.html",[0,1.466,133,2.584]],["body/controllers/AuthController.html",[0,1.207,2,1.207,3,0.135,4,0.118,5,0.118,7,0.189,8,0.841,10,1.484,11,3.081,12,3.795,14,1.847,15,0.019,19,0.496,21,1.14,22,0.785,23,1.14,24,4.275,25,1.084,30,1.205,31,2.62,32,3.972,33,2.62,34,3.159,36,0.316,37,1.819,40,1.959,41,0.397,48,2.838,50,2.62,51,0.135,52,0.139,53,1.207,59,1.14,61,2.62,62,2.62,66,3.623,69,2.62,70,2.62,76,1.417,80,2.62,82,0.011,83,0.011,102,2.127,118,1.959,133,3.081,134,2.62,135,1.959,136,3.048,137,4.414,138,3.386,139,3.048,140,3.048,141,3.048,142,2.338,143,3.887,144,4.414,145,3.048,146,0.356,147,2.338,148,3.048,149,3.048,150,3.048,151,1.819,152,3.048,153,3.048,154,2.127,155,2.62,156,1.819,157,2.338,158,2.338,159,1.819,160,1.039,161,2.894,162,3.048,163,3.048,164,2.338,165,3.048,166,1.76,167,3.048,168,3.048,169,3.048,170,3.048,171,4.461,172,3.048,173,4.414,174,3.048,175,3.048,176,3.048,177,3.048,178,3.048,179,3.048,180,1.091,181,2.635,182,3.048]],["title/modules/AuthModule.html",[84,1.262,91,2.38]],["body/modules/AuthModule.html",[2,2.073,3,0.173,4,0.151,5,0.151,15,0.019,36,0.359,39,2.715,41,0.506,51,0.173,52,0.177,76,1.809,82,0.013,83,0.013,84,1.784,86,1.809,87,2.434,91,4.783,97,2.739,98,2.035,100,2.919,101,2.919,106,2.169,107,1.809,133,4.13,156,2.322,161,3.793,183,3.343,184,3.343,185,3.343,186,3.993,187,4.373,188,4.373,189,3.889,190,3.889,191,3.343,192,3.343,193,3.889,194,3.889,195,3.889,196,3.125,197,2.5,198,2.983,199,3.889,200,2.169,201,3.343]],["title/injectables/AuthService.html",[127,0.636,161,2.064]],["body/injectables/AuthService.html",[3,0.152,4,0.133,5,0.133,7,0.212,8,0.913,10,1.466,11,3.343,15,0.019,19,0.523,21,1.201,22,0.827,23,1.201,25,1.054,26,1.929,30,1.112,36,0.3,41,0.445,51,0.152,52,0.155,53,1.353,59,1.108,74,1.353,82,0.012,83,0.012,127,0.823,128,1.286,138,3.674,142,3.674,143,3.883,146,0.484,147,3.674,159,2.04,160,1.165,161,2.671,166,1.711,180,1.715,186,3.341,191,2.938,196,4.008,197,2.197,198,2.622,202,2.938,203,4.79,204,1.683,205,3.418,206,3.418,207,4.79,208,3.418,209,3.418,210,4.79,211,3.341,212,3.418,213,1.905,214,3.343,215,2.197,216,2.385,217,2.506,218,3.418,219,2.938,220,2.938,221,2.938,222,4.79,223,1.286,224,2.938,225,2.938,226,3.418,227,3.418,228,3.418]],["title/guards/AuthenticatedGuard.html",[34,1.937,229,2.584]],["body/guards/AuthenticatedGuard.html",[3,0.208,4,0.182,5,0.182,7,0.29,8,1.126,10,1.363,15,0.018,19,0.409,21,0.939,22,0.647,23,0.939,25,0.893,30,1.087,34,3.092,36,0.235,38,3.011,41,0.61,51,0.208,52,0.213,59,0.939,74,1.855,82,0.014,83,0.014,127,1.016,146,0.378,180,1.677,223,1.763,230,3.27,231,4.027,232,4.745,233,4.125,234,4.745,235,4.684,236,3.27,237,2.796,238,2.796,239,3.27,240,3.593,241,3.593,242,3.593,243,3.593,244,3.593,245,4.684]],["title/classes/CheckOutDTO.html",[52,0.168,246,2.21]],["body/classes/CheckOutDTO.html",[3,0.185,4,0.162,5,0.162,7,0.258,14,2.194,15,0.018,19,0.59,36,0.275,51,0.185,52,0.278,82,0.013,83,0.013,146,0.545,246,3.27,247,1.171,248,4.459,249,3.58,250,2.062,251,5.263,252,5.263,253,4.273,254,4.273,255,4.273,256,2.06,257,6.757,258,4.165,259,4.165,260,5.425,261,4.165,262,4.165,263,4.165,264,2.322,265,2.322,266,4.165,267,2.677]],["title/classes/Dish.html",[52,0.168,268,1.722]],["body/classes/Dish.html",[3,0.164,4,0.143,5,0.143,7,0.228,14,2.226,15,0.018,19,0.598,22,0.795,26,1.826,36,0.253,51,0.164,52,0.168,82,0.012,83,0.012,146,0.553,247,1.037,250,1.9,256,2.014,268,2.348,269,3.17,270,1.807,271,3.21,272,1.543,273,4.949,274,3.734,275,4.949,276,4.949,277,4.949,278,3.21,279,3.688,280,3.949,281,3.688,282,2.574,283,1.929,284,2.815,285,2.829,286,3.688,287,3.246,288,3.701,289,3.688,290,3.688,291,3.688,292,3.688,293,2.815,294,3.688,295,2.574,296,3.014,297,1.388,298,3.688,299,3.688,300,2.574,301,3.688,302,2.056]],["title/injectables/DishAlreadyExists.html",[127,0.636,303,2.584]],["body/injectables/DishAlreadyExists.html",[3,0.193,4,0.169,5,0.169,7,0.27,8,1.074,10,1.317,15,0.018,19,0.492,21,1.13,22,0.778,23,1.13,25,0.829,30,1.01,36,0.313,41,0.567,51,0.193,52,0.198,53,1.724,59,0.872,74,1.724,82,0.014,83,0.014,127,0.969,128,1.638,146,0.455,160,1.483,204,2.144,223,1.638,237,2.598,238,2.598,264,3.144,268,2.024,303,3.936,304,3.741,305,3.741,306,4.191,307,4.353,308,4.325,309,3.461,310,4.353,311,3.625,312,4.325,313,2.798,314,3.339,315,1.483,316,4.353,317,4.353,318,4.353,319,4.353,320,4.353,321,3.038]],["title/controllers/DishController.html",[0,1.466,322,2.584]],["body/controllers/DishController.html",[0,0.902,2,0.902,3,0.101,4,0.088,5,0.228,7,0.141,8,0.676,10,1.505,14,1.912,15,0.019,19,0.514,21,1.13,22,0.778,23,1.13,24,3.626,25,1.122,30,1.367,32,3.937,34,1.855,36,0.327,37,1.36,40,1.464,41,0.297,44,1.958,45,2.951,46,1.958,51,0.101,52,0.104,53,0.902,59,1.18,66,3.717,82,0.009,83,0.009,135,1.464,146,0.455,151,1.36,154,1.59,160,0.776,166,1.822,180,0.815,256,1.86,268,1.059,272,1.578,303,1.59,309,3.346,313,1.464,322,2.475,323,1.958,324,2.72,325,2.72,326,3.546,327,2.72,328,2.72,329,3.77,330,2.72,331,1.747,332,5.64,333,2.278,334,2.278,335,1.747,336,2.278,337,2.278,338,2.278,339,3.743,340,2.278,341,2.278,342,2.278,343,3.546,344,2.278,345,1.747,346,2.278,347,2.278,348,3.546,349,2.278,350,1.747,351,3.546,352,2.278,353,1.958,354,1.59,355,3.77,356,1.59,357,1.59,358,2.278,359,2.278,360,1.747,361,1.59,362,2.278,363,1.747,364,4.354,365,2.278,366,1.59,367,2.278,368,1.59,369,1.747,370,1.958,371,2.278,372,2.599,373,1.958,374,2.278,375,2.278,376,3.546,377,3.546,378,3.546,379,3.546,380,3.546,381,2.278,382,2.278,383,2.278,384,2.278,385,2.278,386,1.958,387,3.546,388,2.278,389,2.278,390,2.278,391,2.278,392,2.278,393,2.278,394,1.958,395,2.278,396,2.278,397,2.278,398,2.278,399,2.278,400,2.278,401,2.278,402,2.278,403,2.278,404,1.464,405,1.958,406,2.278,407,2.278,408,2.278,409,2.278,410,2.278]],["title/classes/DishDTO.html",[52,0.168,309,1.937]],["body/classes/DishDTO.html",[3,0.196,4,0.171,5,0.171,7,0.273,15,0.018,19,0.615,22,0.869,26,1.96,36,0.221,41,0.574,51,0.196,52,0.2,82,0.014,83,0.014,146,0.569,247,1.24,250,2.14,256,2.042,272,1.687,273,5.409,275,5.409,276,5.409,277,5.409,309,2.975,313,4.608,354,3.078,355,3.382,411,2.834,412,4.409,413,3.79,414,3.79,415,3.078,416,3.79,417,3.79]],["title/modules/DishModule.html",[84,1.262,92,2.38]],["body/modules/DishModule.html",[2,2.266,3,0.198,4,0.173,5,0.173,15,0.019,36,0.354,41,0.58,51,0.198,52,0.202,76,2.071,82,0.014,83,0.014,84,1.95,86,2.071,87,2.661,92,4.541,97,2.993,98,2.33,100,3.19,101,2.483,106,2.483,107,2.071,306,2.658,315,1.518,322,4.413,360,3.416,361,3.108,372,4.217,373,3.828,418,3.828,419,3.828,420,4.453,421,4.453,422,3.828,423,4.453,424,4.453,425,4.453,426,4.453,427,4.453,428,4.453,429,4.453,430,4.453]],["title/injectables/DishNameValidationPipe.html",[127,0.636,368,2.584]],["body/injectables/DishNameValidationPipe.html",[3,0.192,4,0.168,5,0.168,7,0.268,8,1.07,10,1.313,15,0.019,19,0.377,21,0.867,22,0.597,23,0.867,25,0.824,30,1.004,36,0.281,41,0.563,51,0.192,52,0.197,59,0.867,74,2.469,82,0.014,83,0.014,127,0.965,128,1.628,146,0.349,160,1.474,223,2.346,237,2.581,238,2.581,264,3.131,268,2.011,272,1.159,283,2.263,308,4.307,309,3.453,311,3.61,312,4.307,313,2.78,368,3.919,369,4.307,431,3.317,432,3.718,433,4.325,434,4.325,435,4.325,436,4.325,437,4.325,438,4.325,439,4.325,440,4.325,441,4.325,442,4.325,443,4.325,444,4.325,445,4.325,446,4.325]],["title/classes/DishRepository.html",[52,0.168,306,2.21]],["body/classes/DishRepository.html",[3,0.102,4,0.089,5,0.089,7,0.143,8,0.681,10,1.527,15,0.019,19,0.533,21,1.184,22,0.866,23,1.184,25,1.164,26,1.67,30,1.418,36,0.284,41,0.3,51,0.102,52,0.105,59,1.224,74,1.735,82,0.009,83,0.009,117,1.765,118,3.44,146,0.477,160,0.784,166,1.984,180,2.028,181,2.133,223,1.86,247,0.647,256,1.865,268,2.749,270,1.28,272,1.584,297,0.866,306,2.133,309,3.355,314,4.813,315,1.494,324,2.742,325,2.742,327,2.742,328,2.742,329,3.79,330,2.742,331,2.742,335,2.742,345,2.742,350,2.742,363,1.765,386,1.978,394,3.072,404,1.479,447,1.479,448,3.574,449,3.072,450,2.301,451,2.301,452,3.574,453,2.301,454,3.072,455,2.301,456,2.301,457,3.072,458,2.301,459,2.301,460,2.301,461,1.479,462,2.301,463,1.978,464,2.742,465,2.301,466,2.301,467,2.301,468,3.574,469,3.574,470,3.574,471,3.574,472,3.574,473,3.574,474,3.574,475,3.574,476,3.574,477,4.383,478,2.495,479,2.301,480,2.301,481,2.301,482,2.301,483,3.574,484,2.301,485,2.301,486,2.301,487,2.301,488,2.301,489,2.301,490,2.301,491,2.301,492,2.742,493,2.301,494,2.742,495,2.301,496,2.301,497,1.606,498,2.301,499,2.301]],["title/injectables/DishService.html",[127,0.636,372,2.21]],["body/injectables/DishService.html",[3,0.131,4,0.114,5,0.114,7,0.182,8,0.82,10,1.557,15,0.019,19,0.575,21,1.287,22,0.887,23,1.287,25,1.224,26,1.5,30,1.491,36,0.28,41,0.383,51,0.131,52,0.134,59,1.287,82,0.01,83,0.01,107,1.368,118,3.269,127,0.74,128,1.107,146,0.518,160,1.003,166,1.987,204,1.449,216,2.053,256,1.968,272,1.5,305,2.529,306,3.712,309,3.515,315,1.003,324,3.3,325,3.3,327,3.3,328,3.3,329,4.292,330,3.3,331,3.3,335,3.3,345,3.3,350,3.3,372,2.568,422,2.529,449,3.698,454,3.698,457,3.698,463,2.529,500,2.529,501,2.942,502,2.942,503,2.942,504,2.942,505,2.942,506,2.942,507,2.942,508,2.942,509,2.529,510,2.942,511,2.942,512,2.942,513,2.942,514,2.942,515,2.942,516,2.942,517,2.942]],["title/classes/Expense.html",[52,0.168,518,2.21]],["body/classes/Expense.html",[3,0.147,4,0.129,5,0.129,7,0.205,14,2.162,15,0.018,19,0.581,22,0.751,26,2.006,36,0.296,51,0.147,52,0.213,82,0.011,83,0.011,146,0.566,247,0.932,250,1.765,256,1.663,264,1.849,265,1.849,270,1.679,271,3.034,272,1.458,278,3.034,280,3.479,282,2.315,283,2.454,284,2.615,287,3.802,288,4.011,293,2.615,295,2.315,296,1.98,297,1.248,300,2.315,302,2.615,518,3.248,519,2.851,520,3.248,521,3.297,522,3.798,523,5.441,524,3.317,525,3.317,526,4.031,527,5.084,528,4.128,529,3.317,530,3.317,531,3.317,532,3.317,533,4.69,534,5.914,535,3.317,536,2.799,537,2.799,538,2.544,539,4.031,540,3.598,541,3.802,542,3.274,543,3.274,544,2.544,545,2.544,546,2.544,547,2.544,548,3.317]],["title/controllers/ExpenseController.html",[0,1.466,549,2.584]],["body/controllers/ExpenseController.html",[0,1.172,2,1.172,3,0.131,4,0.115,5,0.115,7,0.183,8,0.824,10,1.513,14,1.938,15,0.019,19,0.521,21,1.196,22,0.824,23,1.196,25,1.138,30,1.386,34,1.549,36,0.312,37,1.767,40,1.903,41,0.385,45,3.367,51,0.131,52,0.135,53,1.172,55,2.271,59,1.196,66,3.563,82,0.01,83,0.01,102,2.067,135,1.903,146,0.482,151,1.767,154,2.067,157,2.271,160,1.009,164,2.271,166,1.847,256,1.752,272,1.505,353,2.545,354,2.067,355,3.316,356,2.067,357,2.067,370,2.545,518,1.767,549,3.017,550,2.545,551,3.316,552,3.316,553,3.316,554,3.316,555,3.316,556,2.271,557,4.033,558,2.961,559,2.961,560,2.271,561,2.961,562,2.961,563,2.271,564,2.961,565,2.961,566,2.271,567,4.323,568,2.961,569,2.271,570,4.323,571,2.961,572,1.767,573,2.067,574,2.271,575,3.047,576,2.961,577,2.961,578,2.961,579,2.545,580,4.323,581,2.961,582,2.961,583,2.961,584,2.961,585,2.961,586,2.961,587,2.271,588,2.961,589,2.961,590,2.961,591,2.961,592,2.961]],["title/classes/ExpenseDTO.html",[52,0.168,557,2.064]],["body/classes/ExpenseDTO.html",[3,0.196,4,0.172,5,0.172,7,0.274,15,0.018,19,0.615,22,0.87,26,1.963,36,0.222,51,0.196,52,0.201,82,0.014,83,0.014,146,0.569,247,1.244,250,2.144,256,1.871,272,1.689,288,4.052,297,1.665,411,2.844,413,3.803,414,3.803,415,3.088,416,3.803,417,3.803,520,3.762,521,3.514,557,3.177,572,4.282,593,5.418,594,5.284,595,3.803]],["title/modules/ExpenseModule.html",[84,1.262,93,2.38]],["body/modules/ExpenseModule.html",[2,2.29,3,0.201,4,0.176,5,0.176,15,0.019,36,0.356,41,0.589,51,0.201,52,0.206,76,2.106,82,0.014,83,0.014,84,1.971,86,2.106,87,2.69,93,4.561,97,3.025,98,2.369,100,3.224,101,2.524,106,2.524,107,2.106,315,1.543,537,3.804,538,3.473,549,4.448,575,4.235,596,3.892,597,3.892,598,4.528,599,4.528,600,4.528,601,3.452,602,2.91,603,3.16,604,4.528]],["title/classes/ExpenseRepository.html",[52,0.168,601,2.21]],["body/classes/ExpenseRepository.html",[3,0.105,4,0.091,5,0.091,7,0.146,8,0.694,10,1.512,15,0.019,19,0.52,21,1.195,22,0.921,23,1.195,25,1.136,30,1.384,36,0.287,41,0.307,51,0.105,52,0.107,59,1.195,74,1.442,82,0.009,83,0.009,146,0.462,160,0.803,166,1.955,180,2.135,181,2.174,223,1.675,247,0.663,256,1.777,270,1.304,272,1.342,297,0.887,315,1.517,404,1.515,447,1.515,461,1.515,464,1.808,492,2.793,494,2.793,497,1.645,518,3.414,520,2.988,521,2.481,536,2.174,537,2.656,538,1.808,541,3.218,544,1.808,545,2.793,546,2.793,547,2.793,551,2.793,552,2.793,553,2.793,554,2.793,555,2.793,556,2.793,557,3.881,560,2.793,563,2.793,566,2.793,569,2.793,572,1.407,593,4.303,594,2.793,601,2.174,602,3.959,603,1.645,605,3.642,606,3.642,607,2.357,608,2.357,609,3.642,610,2.357,611,3.642,612,2.357,613,2.357,614,2.357,615,2.026,616,2.357,617,2.026,618,2.357,619,3.642,620,2.357,621,3.642,622,3.642,623,3.642,624,4.45,625,3.642,626,2.357,627,2.357,628,2.357,629,2.357,630,2.357,631,2.357,632,2.357,633,2.357,634,2.357,635,2.357,636,2.357,637,2.357,638,2.793,639,2.357,640,2.357,641,2.357]],["title/injectables/ExpenseService.html",[127,0.636,575,2.21]],["body/injectables/ExpenseService.html",[3,0.149,4,0.13,5,0.13,7,0.208,8,0.902,10,1.543,15,0.019,19,0.567,21,1.303,22,0.898,23,1.303,25,1.195,30,1.455,36,0.275,41,0.437,51,0.149,52,0.153,53,1.33,59,1.256,82,0.011,83,0.011,127,0.813,128,1.264,146,0.525,160,1.144,166,1.939,204,1.654,256,1.828,272,1.268,315,1.144,551,3.629,552,3.629,553,3.629,554,3.629,555,3.629,556,3.629,557,4.033,560,3.629,563,3.629,566,3.629,569,3.629,572,2.004,575,2.824,601,3.882,602,2.159,642,2.887,643,2.887,644,3.358,645,3.358,646,3.358,647,3.358,648,3.358,649,3.358,650,3.358,651,3.358,652,3.358,653,3.358,654,3.358]],["title/classes/ExpenseType.html",[52,0.168,537,2.21]],["body/classes/ExpenseType.html",[3,0.188,4,0.165,5,0.165,7,0.263,14,2.006,15,0.018,19,0.539,22,0.853,26,1.635,36,0.31,51,0.188,52,0.193,82,0.013,83,0.013,146,0.529,247,1.193,250,2.087,256,1.842,270,1.985,271,3.445,272,1.656,278,3.445,280,3.445,283,2.22,284,3.092,285,3.255,293,3.092,296,3.31,297,1.597,302,2.366,518,4.162,537,3.31,603,4.573,655,3.648,656,3.255,657,4.243,658,4.243,659,4.243,660,4.243,661,2.962,662,4.243,663,3.255,664,4.243]],["title/injectables/ExpenseValidationPipe.html",[127,0.636,573,2.584]],["body/injectables/ExpenseValidationPipe.html",[3,0.175,4,0.153,5,0.153,7,0.244,8,1.005,10,1.253,15,0.019,19,0.46,21,1.057,22,0.728,23,1.057,25,0.75,30,0.913,36,0.319,41,0.512,51,0.175,52,0.179,59,0.788,74,1.558,82,0.013,83,0.013,107,1.83,127,0.907,128,1.481,146,0.426,160,1.341,166,1.217,180,1.889,204,1.938,216,2.746,223,1.481,237,2.349,238,2.349,264,2.941,308,4.047,311,3.391,312,4.047,315,1.341,431,3.018,432,3.382,509,3.382,521,2.194,557,3.546,572,2.349,573,3.682,574,4.565,601,4.075,602,2.529,643,3.382,665,3.935,666,3.935,667,3.935,668,3.935,669,5.276,670,3.935,671,3.935,672,3.935,673,5.276,674,3.935,675,3.935,676,3.935,677,3.935,678,3.935,679,3.018,680,3.935,681,3.935]],["title/classes/Helper.html",[52,0.168,366,2.584]],["body/classes/Helper.html",[3,0.166,4,0.145,5,0.275,7,0.231,8,0.969,15,0.019,19,0.444,21,1.019,22,0.702,23,1.019,24,3.27,25,0.969,51,0.166,52,0.17,59,0.747,82,0.012,83,0.012,116,5.154,146,0.411,180,2.073,247,1.048,366,3.551,679,3.902,682,3.205,683,5.087,684,5.087,685,5.087,686,6.719,687,3.729,688,5.087,689,3.729,690,3.205,691,3.729,692,3.729,693,3.729,694,3.729,695,5.79,696,3.729,697,5.087,698,6.22,699,5.087,700,6.22,701,5.087,702,3.729,703,5.087,704,2.602,705,5.087,706,3.729,707,3.729,708,3.729,709,3.729,710,3.729,711,3.729,712,3.729,713,3.729,714,3.729,715,3.729]],["title/classes/Inventory.html",[52,0.168,274,2.064]],["body/classes/Inventory.html",[3,0.171,4,0.149,5,0.149,7,0.238,14,2.201,15,0.019,19,0.592,22,0.812,26,1.999,36,0.26,51,0.171,52,0.175,82,0.013,83,0.013,146,0.547,247,1.081,250,1.955,256,1.771,268,3.279,270,1.86,271,3.28,272,1.577,274,2.896,278,3.28,280,3.865,283,2.012,284,2.896,287,3.339,288,3.781,293,2.896,296,2.295,297,1.447,302,2.896,520,3.511,521,3.28,656,2.95,661,2.684,663,2.95,716,3.305,717,4.106,718,3.845,719,3.845,720,3.845,721,3.845,722,3.845,723,3.845,724,3.845,725,3.845]],["title/controllers/InventoryController.html",[0,1.466,726,2.584]],["body/controllers/InventoryController.html",[0,1.549,2,1.549,3,0.174,4,0.152,5,0.152,7,0.242,8,1.001,10,1.55,14,2.059,15,0.019,19,0.553,21,0.784,22,0.54,23,0.784,25,1.209,30,0.908,36,0.297,37,2.335,41,0.509,51,0.174,52,0.178,53,1.549,59,0.784,82,0.013,83,0.013,135,2.515,146,0.316,151,2.335,166,1.21,274,2.181,357,2.73,579,4.517,587,4.031,726,3.668,727,3.363,728,6.344,729,6.344,730,6.344,731,4.031,732,3.912,733,5.255,734,3.912,735,5.255,736,3.912,737,3.001,738,4.068,739,3.912,740,3.001,741,3.542,742,3.912,743,3.912,744,3.912,745,3.912]],["title/classes/InventoryDTO.html",[52,0.168,738,2.21]],["body/classes/InventoryDTO.html",[3,0.195,4,0.17,5,0.17,7,0.272,14,2.156,15,0.018,19,0.6,22,0.867,26,2.076,36,0.22,51,0.195,52,0.258,82,0.014,83,0.014,146,0.555,247,1.236,250,2.135,256,1.867,260,4.82,267,2.825,272,1.684,520,3.751,521,3.503,717,4.386,738,3.387,746,3.778,747,4.395,748,6.157,749,4.395,750,4.395,751,4.395,752,4.395]],["title/modules/InventoryModule.html",[84,1.262,94,2.38]],["body/modules/InventoryModule.html",[2,2.335,3,0.207,4,0.181,5,0.181,15,0.019,36,0.351,41,0.608,51,0.207,52,0.212,76,2.171,82,0.014,83,0.014,84,2.01,86,2.171,87,2.742,94,4.597,97,3.085,98,2.442,100,3.288,101,2.603,106,2.603,107,2.171,315,1.591,726,4.512,741,4.269,753,4.013,754,4.013,755,4.668,756,4.668,757,4.668,758,2.442,759,3.001,760,4.668]],["title/classes/InventoryRepository.html",[52,0.168,758,1.937]],["body/classes/InventoryRepository.html",[3,0.104,4,0.091,5,0.091,7,0.275,8,0.691,10,1.525,15,0.019,19,0.519,21,1.144,22,0.849,23,1.144,25,1.134,30,1.253,36,0.271,41,0.305,51,0.104,52,0.107,59,1.082,74,0.928,82,0.009,83,0.009,146,0.52,166,1.902,180,2.201,181,2.165,223,1.365,247,0.659,256,1.812,268,2.768,270,1.298,272,1.53,274,3.01,297,0.882,315,1.512,447,1.507,461,1.507,464,1.799,478,3.984,492,1.799,494,1.799,520,2.979,521,1.307,638,1.799,717,1.637,731,2.782,737,2.782,738,3.917,740,1.799,758,1.897,759,3.952,761,3.627,762,3.627,763,3.627,764,3.627,765,4.992,766,3.627,767,3.627,768,2.345,769,3.627,770,2.345,771,3.627,772,3.829,773,2.345,774,4.435,775,2.345,776,3.627,777,2.345,778,2.345,779,3.627,780,2.345,781,2.016,782,2.345,783,2.345,784,2.345,785,3.627,786,2.345,787,3.627,788,2.345,789,3.627,790,3.627,791,2.345,792,2.345,793,2.345,794,2.345,795,2.345,796,2.345,797,3.627,798,3.627,799,3.118,800,3.627,801,3.627,802,3.627,803,3.627,804,3.627,805,3.118,806,3.627,807,3.627,808,3.627,809,2.345,810,2.345]],["title/injectables/InventoryService.html",[127,0.636,741,2.21]],["body/injectables/InventoryService.html",[3,0.201,4,0.176,5,0.176,7,0.28,8,1.102,10,1.342,15,0.018,19,0.505,21,1.159,22,0.798,23,1.159,25,0.863,30,1.051,36,0.319,41,0.589,51,0.201,52,0.206,53,1.793,59,0.907,82,0.014,83,0.014,127,0.994,128,1.704,146,0.467,166,1.401,204,2.23,315,1.543,731,4.436,737,4.436,738,4.141,740,3.473,741,3.452,758,3.712,759,2.91,811,3.892,812,3.892,813,4.528,814,4.528,815,4.528]],["title/guards/IsAdmin.html",[45,1.937,229,2.584]],["body/guards/IsAdmin.html",[3,0.2,4,0.175,5,0.175,7,0.28,8,1.1,10,1.34,15,0.018,19,0.394,21,0.904,22,0.623,23,0.904,25,0.86,30,1.047,36,0.226,38,3.71,41,0.587,45,3.019,51,0.2,52,0.205,59,0.904,74,2.285,82,0.014,83,0.014,127,0.992,146,0.364,180,1.615,200,3.218,215,2.901,223,2.172,230,3.15,232,4.681,233,4.028,234,4.681,236,3.15,237,2.693,238,2.693,239,3.15,240,3.461,241,3.461,242,3.461,243,3.461,244,3.461,816,3.879,817,4.512,818,4.512,819,3.879,820,3.879]],["title/injectables/LocalAuthGuard.html",[48,2.38,127,0.636]],["body/injectables/LocalAuthGuard.html",[3,0.204,4,0.179,5,0.179,7,0.285,8,1.114,10,1.352,15,0.018,19,0.402,21,0.923,22,0.636,23,0.923,25,0.877,30,1.069,36,0.293,38,2.96,41,0.599,48,3.758,51,0.204,52,0.209,59,0.923,82,0.014,83,0.014,127,1.005,128,1.733,146,0.372,155,3.958,156,2.748,158,4.484,166,1.808,180,2.093,232,4.08,233,4.08,234,4.716,236,3.214,239,3.214,270,1.648,497,4.08,821,3.958,822,4.605,823,4.605,824,4.605,825,3.214,826,4.605,827,4.605]],["title/injectables/LocalStrategy.html",[127,0.636,187,2.38]],["body/injectables/LocalStrategy.html",[3,0.178,4,0.156,5,0.156,7,0.249,8,1.019,10,1.266,15,0.018,19,0.467,21,1.072,22,0.738,23,1.072,25,0.765,26,2.025,36,0.335,41,0.523,51,0.178,52,0.183,53,1.59,59,0.805,74,1.59,82,0.013,83,0.013,127,0.919,128,1.512,143,3.353,146,0.432,151,2.397,156,2.397,159,2.397,160,1.369,161,3.829,166,1.243,171,3.452,180,1.915,187,3.438,192,3.452,204,1.978,211,3.723,213,3.353,214,3.733,215,2.582,217,2.798,223,1.512,270,1.438,638,3.081,828,3.452,829,5.349,830,4.017,831,4.017,832,5.349,833,4.017,834,4.017,835,4.017,836,3.452,837,3.452,838,4.017,839,4.017,840,4.017,841,4.017]],["title/classes/Order.html",[52,0.168,842,2.064]],["body/classes/Order.html",[3,0.125,4,0.109,5,0.109,7,0.174,14,2.251,15,0.019,19,0.605,26,1.613,36,0.293,51,0.125,52,0.189,82,0.01,83,0.01,146,0.56,200,2.318,217,2.862,247,0.789,250,1.564,253,3.455,254,3.455,255,3.455,256,2.017,264,1.565,265,1.565,270,1.488,271,2.76,272,1.327,278,2.76,280,3.529,282,1.96,283,2.175,284,3.051,285,3.188,287,4.403,288,3.517,293,2.318,295,1.96,296,2.954,297,1.056,300,1.96,302,2.318,522,3.455,526,2.413,527,4.703,528,2.901,536,2.481,539,2.413,540,2.153,541,1.805,542,1.96,543,1.96,656,2.153,661,1.96,663,2.153,704,2.901,825,3.819,842,2.76,843,2.413,844,3.797,845,4.254,846,4.95,847,4.95,848,3.651,849,3.797,850,2.807,851,2.807,852,2.807,853,4.157,854,2.807,855,2.807,856,2.807,857,2.807,858,2.807,859,2.807,860,2.807,861,4.157,862,2.807,863,3.051,864,2.807,865,2.153,866,2.413,867,2.153,868,2.807,869,2.413,870,2.807]],["title/controllers/OrderController.html",[0,1.466,871,2.584]],["body/controllers/OrderController.html",[0,1.116,2,1.116,3,0.125,4,0.109,5,0.109,7,0.175,8,0.794,10,1.529,14,1.988,15,0.019,19,0.534,21,1.172,22,0.808,23,1.172,24,3.761,25,1.167,30,1.422,32,1.968,34,1.475,36,0.307,37,1.683,40,1.812,41,0.367,51,0.125,52,0.128,53,1.116,55,2.162,59,1.227,82,0.01,83,0.01,102,1.968,135,1.812,146,0.472,151,1.683,154,1.968,157,2.162,160,0.961,164,2.162,166,1.895,246,3.656,248,1.812,321,2.91,354,1.968,356,1.968,357,1.968,587,3.198,842,1.572,871,2.91,872,2.423,873,3.198,874,3.198,875,3.198,876,3.198,877,4.205,878,2.162,879,2.819,880,2.819,881,2.162,882,4.392,883,4.169,884,2.819,885,2.162,886,4.169,887,2.819,888,2.162,889,4.169,890,2.819,891,2.162,892,2.819,893,4.169,894,2.819,895,2.819,896,2.162,897,1.812,898,2.962,899,2.819,900,2.819,901,2.819,902,2.423,903,2.819,904,2.819,905,2.819,906,2.819,907,2.819,908,2.819,909,2.819,910,2.819,911,2.819,912,2.819,913,2.819,914,2.819,915,2.819,916,2.819,917,2.819,918,2.819,919,2.819,920,2.819,921,2.819,922,2.819]],["title/classes/OrderDTO.html",[52,0.168,882,2.21]],["body/classes/OrderDTO.html",[3,0.143,4,0.125,5,0.125,7,0.2,14,2.191,15,0.018,19,0.621,26,1.355,36,0.268,51,0.143,52,0.243,82,0.011,83,0.011,146,0.584,247,0.906,250,1.729,253,3.737,254,3.737,255,3.737,256,2.078,260,5.586,264,1.797,265,1.797,267,2.071,272,1.654,411,2.071,415,2.249,478,3.737,522,3.737,536,2.742,540,2.472,541,2.071,542,2.249,543,2.249,594,3.524,595,2.77,772,3.524,844,4.107,845,4.603,849,4.107,882,2.742,897,4.617,923,5.355,924,4.603,925,4.603,926,3.222,927,3.222,928,3.222,929,3.222,930,3.222,931,3.222,932,3.222,933,3.222,934,3.222,935,3.222,936,2.77,937,4.594,938,3.222]],["title/classes/OrderDetails.html",[52,0.168,848,2.21]],["body/classes/OrderDetails.html",[3,0.177,4,0.154,5,0.154,7,0.247,14,2.161,15,0.018,19,0.581,36,0.266,51,0.177,52,0.181,82,0.013,83,0.013,146,0.537,247,1.119,250,2.001,256,1.998,270,1.903,271,3.338,272,1.605,278,3.338,280,3.899,282,2.779,283,2.083,284,2.965,293,2.965,295,2.779,297,1.498,300,2.779,302,2.965,339,5.146,842,3.562,848,3.174,939,4.781,940,3.422,941,5.987,942,5.146,943,5.492,944,3.981,945,3.981,946,3.981,947,3.981,948,3.981,949,3.422,950,3.422]],["title/modules/OrderModule.html",[84,1.262,95,2.38]],["body/modules/OrderModule.html",[2,2.219,3,0.191,4,0.167,5,0.167,15,0.019,36,0.357,41,0.561,51,0.191,52,0.196,76,2.005,82,0.014,83,0.014,84,1.91,86,2.005,87,2.606,95,4.647,97,2.931,98,2.255,100,3.124,101,3.124,106,2.404,107,2.005,315,1.91,758,3.73,759,2.771,848,3.345,867,3.307,871,4.345,898,4.078,939,3.009,951,3.706,952,3.706,953,3.706,954,4.311,955,2.771,956,3.009,957,4.311,958,4.311,959,4.311,960,4.311]],["title/classes/OrderRepository.html",[52,0.168,955,2.38]],["body/classes/OrderRepository.html",[3,0.076,4,0.066,5,0.066,7,0.307,8,0.537,10,1.412,15,0.019,19,0.478,21,0.994,22,0.685,23,0.994,25,1,30,1.218,36,0.293,51,0.076,52,0.078,53,0.677,59,1.051,60,1.47,82,0.007,83,0.007,146,0.4,160,0.583,166,1.988,180,2.301,181,2.488,200,0.954,204,0.842,217,1.474,223,1.569,246,2.961,247,0.481,248,1.099,251,3.09,252,3.583,253,2.509,254,3.218,255,2.509,268,0.795,270,1.009,272,0.755,274,0.954,297,0.644,315,1.421,321,1.967,404,2.68,447,1.099,461,1.099,478,2.909,497,1.967,522,3.218,536,1.682,541,3.855,542,2.509,543,1.194,544,2.162,545,2.757,546,3.536,547,3.536,615,1.47,617,1.47,704,1.194,758,2.595,781,1.47,799,3.963,805,3.09,812,1.47,842,2.925,844,1.312,848,2.488,849,2.162,863,1.571,867,1.312,869,1.47,873,2.162,874,2.162,875,2.162,876,2.162,877,2.757,878,2.162,881,2.162,882,4.002,885,2.162,888,2.162,891,1.312,896,1.312,897,1.099,924,2.422,925,2.422,939,1.194,942,1.47,955,1.812,956,3.965,961,4.168,962,1.71,963,1.71,964,1.71,965,1.71,966,1.71,967,1.71,968,1.71,969,1.71,970,1.71,971,1.47,972,1.71,973,1.71,974,1.71,975,1.71,976,3.594,977,3.583,978,1.71,979,2.818,980,1.71,981,1.71,982,1.71,983,4.61,984,1.71,985,1.71,986,2.818,987,1.71,988,1.71,989,3.594,990,4.168,991,3.594,992,1.71,993,1.71,994,1.71,995,1.71,996,1.71,997,1.71,998,1.71,999,1.71,1000,1.71,1001,1.71,1002,1.71,1003,1.71,1004,1.71,1005,1.71,1006,1.71,1007,1.71,1008,1.71,1009,1.71,1010,1.71,1011,1.71,1012,2.818,1013,1.71,1014,1.71,1015,1.71,1016,1.71,1017,1.71,1018,1.71,1019,1.71,1020,2.818,1021,1.71,1022,2.818,1023,1.71,1024,1.71,1025,1.71,1026,3.594,1027,1.71,1028,1.71,1029,1.71,1030,1.71,1031,1.71,1032,1.71,1033,1.71,1034,1.71,1035,1.71,1036,1.71,1037,1.71,1038,1.71]],["title/injectables/OrderService.html",[127,0.636,898,2.21]],["body/injectables/OrderService.html",[3,0.141,4,0.123,5,0.123,7,0.197,8,0.867,10,1.554,15,0.019,19,0.574,21,1.28,22,0.881,23,1.28,25,1.217,30,1.482,36,0.291,41,0.414,51,0.141,52,0.144,53,1.258,59,1.28,82,0.011,83,0.011,127,0.782,128,1.195,146,0.515,160,1.083,166,1.975,204,1.565,246,3.664,248,2.042,315,1.083,321,3.174,873,3.489,874,3.489,875,3.489,876,3.489,877,4.449,878,3.489,881,3.489,882,4.385,885,3.489,888,3.489,891,3.489,896,2.437,897,2.042,898,2.715,955,4.105,956,2.217,1039,2.731,1040,3.177,1041,3.177,1042,3.177,1043,3.177,1044,3.177,1045,3.177,1046,3.177,1047,3.177,1048,3.177,1049,3.177,1050,3.177,1051,3.177,1052,3.177,1053,3.177]],["title/injectables/SessionSerializer.html",[127,0.636,188,2.38]],["body/injectables/SessionSerializer.html",[3,0.184,4,0.161,5,0.161,7,0.256,8,1.04,10,1.458,15,0.019,19,0.476,21,1.093,22,0.753,23,1.093,25,1.04,26,1.609,36,0.273,41,0.539,51,0.184,52,0.188,72,5.578,82,0.013,83,0.013,127,0.938,128,1.558,146,0.44,156,2.471,188,3.508,214,3.809,217,3.193,270,1.953,690,5.578,1054,3.558,1055,6.104,1056,5.457,1057,5.457,1058,5.457,1059,6.925,1060,4.139,1061,4.139,1062,6.104,1063,4.69,1064,5.457,1065,4.139,1066,4.139,1067,5.457,1068,5.457]],["title/classes/UserDTO.html",[52,0.168,143,2.064]],["body/classes/UserDTO.html",[3,0.212,4,0.185,5,0.185,7,0.295,14,1.94,15,0.018,19,0.521,26,2.017,36,0.299,51,0.212,52,0.297,82,0.014,83,0.014,143,3.331,146,0.482,159,3.895,211,3.639,213,3.639,247,1.34,250,2.248,265,2.658,267,3.064,411,3.064,415,3.327,748,5.61,865,3.657,936,4.098,1069,5.975,1070,6.526]],["title/classes/UserRepository.html",[52,0.168,196,2.21]],["body/classes/UserRepository.html",[3,0.158,4,0.138,5,0.138,7,0.221,8,0.939,10,1.395,11,3.441,15,0.019,19,0.43,21,0.988,22,0.68,23,0.988,25,0.939,30,1.144,36,0.332,41,0.464,51,0.158,52,0.162,59,0.988,74,1.952,82,0.012,83,0.012,138,3.781,142,3.781,143,4.008,146,0.398,147,3.781,159,2.126,160,1.214,166,1.887,180,2.024,181,2.126,196,2.942,197,3.634,211,1.986,213,3.152,215,2.289,217,2.957,219,3.061,220,4.237,221,3.061,223,2.127,224,4.237,225,4.237,247,1.001,270,1.765,297,1.34,315,1.927,356,3.946,361,2.486,404,2.289,461,2.289,863,2.748,971,3.061,1071,3.061,1072,3.562,1073,3.562,1074,4.237,1075,3.562,1076,3.562,1077,3.562,1078,3.562,1079,3.562,1080,3.061,1081,3.562,1082,3.562]],["title/classes/Users.html",[52,0.168,863,2.064]],["body/classes/Users.html",[3,0.166,4,0.145,5,0.145,7,0.231,14,2.181,15,0.018,18,3.456,19,0.586,26,1.834,36,0.29,45,3.029,51,0.166,52,0.231,82,0.012,83,0.012,146,0.542,211,3.228,213,3.228,247,1.048,250,1.914,256,1.43,265,2.079,270,1.821,271,3.228,272,1.552,278,3.228,280,3.468,283,1.951,284,2.836,287,3.998,293,2.836,296,2.226,297,1.403,302,2.836,661,2.602,825,4.342,842,3.468,863,2.836,865,4.771,866,3.205,943,5.347,949,3.205,950,3.205,1083,3.205,1084,3.729,1085,5.087,1086,3.729,1087,3.729,1088,3.729,1089,3.729,1090,3.729,1091,3.729,1092,3.729,1093,3.729,1094,3.729,1095,5.087]],["title/modules/UsersModule.html",[84,1.262,96,2.38]],["body/modules/UsersModule.html",[3,0.206,4,0.18,5,0.18,15,0.018,36,0.339,41,0.604,51,0.206,52,0.211,76,2.156,82,0.014,83,0.014,84,2.001,86,2.156,87,2.73,96,4.661,97,3.071,98,2.425,100,3.273,101,2.585,106,2.585,107,2.156,186,4.207,196,2.767,197,2.98,198,3.556,201,3.985,1096,3.985,1097,3.985,1098,4.636,1099,4.636,1100,5.871,1101,4.636]],["title/injectables/UsersService.html",[127,0.636,186,2.064]],["body/injectables/UsersService.html",[3,0.16,4,0.14,5,0.14,7,0.224,8,0.948,10,1.199,15,0.019,18,3.841,19,0.434,21,0.723,22,0.918,23,0.723,25,0.688,26,1.962,30,0.838,36,0.181,41,0.47,45,3.367,51,0.221,52,0.164,54,4.893,59,0.723,82,0.012,83,0.012,127,0.855,128,1.358,146,0.459,186,2.774,200,3.421,211,3.588,213,3.801,214,2.519,216,3.973,217,2.978,250,1.872,256,1.015,272,1.725,311,2.32,528,2.519,679,3.816,704,4.282,825,3.472,863,3.174,1080,3.102,1102,2.768,1103,4.975,1104,4.975,1105,3.609,1106,4.975,1107,4.975,1108,4.975,1109,4.975,1110,4.975,1111,4.975,1112,4.975,1113,3.609,1114,3.609]],["title/coverage.html",[1115,3.883]],["body/coverage.html",[0,2.354,1,1.816,5,0.101,6,2.237,15,0.019,18,1.553,34,1.361,42,1.553,45,1.361,48,1.673,52,0.328,82,0.01,83,0.01,84,0.887,108,1.996,127,1.186,129,2.237,133,1.816,134,2.237,143,1.451,146,0.21,158,1.996,159,1.553,161,1.451,186,1.451,187,1.673,188,1.673,196,1.553,197,1.673,202,2.237,223,0.979,229,3.302,231,2.237,246,1.553,248,1.673,249,2.237,268,1.21,269,2.237,274,1.451,303,1.816,304,2.237,306,1.553,309,1.361,313,1.673,314,1.996,322,1.816,323,2.237,366,1.816,368,1.816,369,1.996,372,1.553,411,3.387,431,3.012,447,3.387,500,2.237,518,1.553,519,2.237,537,1.553,549,1.816,550,2.237,557,1.451,572,1.553,573,1.816,574,1.996,575,1.553,601,1.553,602,1.673,603,1.816,642,2.237,655,2.237,682,2.237,716,2.237,726,1.816,727,2.237,738,1.553,741,1.553,746,2.237,758,1.361,759,1.673,811,2.237,816,2.237,821,2.237,828,2.237,842,1.451,843,2.237,848,1.553,863,1.451,871,1.816,872,2.237,882,1.553,897,1.673,898,1.553,939,1.816,940,2.237,955,1.673,956,1.816,977,6.576,1039,2.237,1054,2.237,1063,2.237,1071,2.237,1083,2.237,1102,1.996,1115,1.996,1116,2.602,1117,2.602,1118,2.602,1119,3.927,1120,4.73,1121,5.946,1122,5.269,1123,5.946,1124,3.927,1125,6.503,1126,5.946,1127,2.237,1128,4.73,1129,2.237,1130,4.73,1131,5.269,1132,3.628,1133,2.237,1134,2.237,1135,2.602,1136,2.602]],["title/dependencies.html",[87,2.072,1137,3.087]],["body/dependencies.html",[15,0.019,39,4.024,41,0.481,52,0.23,82,0.012,83,0.012,87,1.72,107,1.72,115,3.179,116,2.837,118,2.377,120,3.179,156,2.207,265,2.062,267,2.377,297,1.392,360,2.837,361,4.024,363,2.837,405,3.179,536,2.207,836,4.348,837,4.348,902,3.179,1074,3.179,1138,3.698,1139,3.698,1140,5.766,1141,3.698,1142,3.698,1143,3.698,1144,3.698,1145,3.698,1146,3.698,1147,3.698,1148,3.698,1149,5.058,1150,3.698,1151,3.698,1152,3.698,1153,3.698,1154,3.698,1155,3.698,1156,3.698,1157,3.698,1158,3.698,1159,5.058,1160,4.348,1161,3.698,1162,3.698,1163,3.698,1164,3.698,1165,3.698,1166,3.698,1167,3.698,1168,3.698,1169,3.698,1170,5.766,1171,3.698,1172,3.698,1173,5.058,1174,3.698,1175,3.698,1176,3.698,1177,3.698,1178,3.698,1179,3.698,1180,3.698,1181,3.698,1182,3.698,1183,3.698,1184,3.698,1185,3.698,1186,3.698,1187,3.698,1188,3.698,1189,3.698,1190,3.698,1191,3.698,1192,3.698,1193,3.698,1194,3.698,1195,3.698,1196,3.698,1197,3.698,1198,3.698,1199,3.698,1200,3.698]],["title/miscellaneous/functions.html",[1201,1.843,1202,3.83]],["body/miscellaneous/functions.html",[7,0.358,15,0.016,82,0.016,83,0.016,1132,4.439,1133,6.1,1201,3.454,1202,4.974,1203,4.974]],["title/index.html",[7,0.191,1204,3.087,1205,3.087]],["body/index.html",[4,0.165,15,0.018,82,0.013,83,0.013,117,3.265,315,1.451,717,2.971,1115,3.265,1206,4.257,1207,4.257,1208,5.557,1209,4.257,1210,4.257,1211,4.257,1212,4.257,1213,4.257,1214,4.257,1215,4.257,1216,6.188,1217,4.257,1218,4.257,1219,4.257,1220,7.109,1221,4.257,1222,4.257,1223,4.257,1224,6.979,1225,4.257,1226,4.257,1227,5.557,1228,4.257,1229,4.257,1230,4.257,1231,5.557,1232,5.557,1233,4.257,1234,4.257,1235,4.257,1236,5.557,1237,5.557,1238,4.257,1239,4.257,1240,4.257,1241,4.257,1242,4.257,1243,3.659,1244,4.257,1245,4.257,1246,4.257,1247,4.257,1248,4.257,1249,4.257,1250,4.257,1251,4.257,1252,4.257,1253,4.257,1254,4.257,1255,4.257,1256,4.257,1257,4.257,1258,4.257,1259,4.257,1260,4.257]],["title/guards/isStaff.html",[18,2.21,229,2.584]],["body/guards/isStaff.html",[3,0.2,4,0.175,5,0.175,7,0.28,8,1.1,10,1.34,15,0.018,18,3.445,19,0.394,21,0.904,22,0.623,23,0.904,25,0.86,30,1.047,36,0.226,38,3.71,41,0.587,51,0.2,52,0.205,59,0.904,74,2.285,82,0.014,83,0.014,127,0.992,146,0.364,180,1.615,200,3.218,215,2.901,223,2.172,230,3.15,232,4.681,233,4.028,234,4.681,236,3.15,237,2.693,238,2.693,239,3.15,240,3.461,241,3.461,242,3.461,243,3.461,244,3.461,819,3.879,820,3.879,1127,3.879,1261,4.512,1262,4.512]],["title/modules.html",[86,2.354]],["body/modules.html",[15,0.015,82,0.015,83,0.015,85,3.607,86,2.403,91,3.322,92,3.322,93,3.322,94,3.322,95,3.322,96,3.322,1243,6.379,1263,7.421,1264,7.421,1265,7.421]],["title/overview.html",[1266,4.352]],["body/overview.html",[2,1.441,15,0.018,42,3.412,76,1.692,82,0.012,83,0.012,85,5.196,86,1.692,87,2.326,88,3.127,89,3.127,90,3.127,91,4.71,92,4.149,93,4.149,94,4.149,95,4.392,96,4.287,97,2.617,98,1.903,128,1.369,161,3.187,183,3.127,184,3.127,185,3.127,186,3.937,187,3.675,188,3.675,230,2.539,247,1.023,372,3.412,418,3.127,419,3.127,575,3.412,596,3.127,597,3.127,741,3.412,753,3.127,754,3.127,758,2.991,898,3.412,951,3.127,952,3.127,953,3.127,1096,3.127,1097,3.127,1266,3.127,1267,3.638,1268,3.638,1269,3.638,1270,3.638,1271,3.127]],["title/miscellaneous/typealiases.html",[1201,1.843,1272,4.455]],["body/miscellaneous/typealiases.html",[7,0.355,15,0.016,82,0.016,83,0.016,146,0.539,217,3.497,772,4.401,1102,4.401,1201,3.425,1273,5.738,1274,5.738]],["title/miscellaneous/variables.html",[1201,1.843,1275,3.83]],["body/miscellaneous/variables.html",[7,0.292,15,0.018,39,3.292,82,0.014,83,0.014,84,2.023,108,4.553,124,5.102,146,0.524,200,3.8,211,2.63,213,2.63,311,3.815,528,4.143,1129,4.055,1132,3.618,1134,5.102,1160,4.055,1201,2.816,1203,5.102,1271,4.055,1275,4.055,1276,4.717,1277,4.717,1278,4.717,1279,4.717,1280,4.717,1281,4.717,1282,4.717,1283,4.717,1284,4.717,1285,4.717,1286,4.717,1287,4.717,1288,5.936,1289,4.717,1290,4.717,1291,4.717,1292,4.717,1293,4.717,1294,4.717,1295,4.717]]],"invertedIndex":[["",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticatedGuard.html":{},"classes/CheckOutDTO.html":{},"classes/Dish.html":{},"injectables/DishAlreadyExists.html":{},"controllers/DishController.html":{},"classes/DishDTO.html":{},"modules/DishModule.html":{},"injectables/DishNameValidationPipe.html":{},"classes/DishRepository.html":{},"injectables/DishService.html":{},"classes/Expense.html":{},"controllers/ExpenseController.html":{},"classes/ExpenseDTO.html":{},"modules/ExpenseModule.html":{},"classes/ExpenseRepository.html":{},"injectables/ExpenseService.html":{},"classes/ExpenseType.html":{},"injectables/ExpenseValidationPipe.html":{},"classes/Helper.html":{},"classes/Inventory.html":{},"controllers/InventoryController.html":{},"classes/InventoryDTO.html":{},"modules/InventoryModule.html":{},"classes/InventoryRepository.html":{},"injectables/InventoryService.html":{},"guards/IsAdmin.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"classes/OrderDTO.html":{},"classes/OrderDetails.html":{},"modules/OrderModule.html":{},"classes/OrderRepository.html":{},"injectables/OrderService.html":{},"injectables/SessionSerializer.html":{},"classes/UserDTO.html":{},"classes/UserRepository.html":{},"classes/Users.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"guards/isStaff.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":977,"title":{},"body":{"classes/OrderRepository.html":{},"coverage.html":{}}}],["0.0.1",{"_index":1178,"title":{},"body":{"dependencies.html":{}}}],["0.0.2",{"_index":1163,"title":{},"body":{"dependencies.html":{}}}],["0.1.13",{"_index":1188,"title":{},"body":{"dependencies.html":{}}}],["0.12.7",{"_index":1185,"title":{},"body":{"dependencies.html":{}}}],["0.13.1",{"_index":1167,"title":{},"body":{"dependencies.html":{}}}],["0.2.40",{"_index":1200,"title":{},"body":{"dependencies.html":{}}}],["0.4.0",{"_index":1166,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":1183,"title":{},"body":{"dependencies.html":{}}}],["0.4.2",{"_index":1139,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1131,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1124,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1126,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1125,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1119,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1120,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1122,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1123,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1121,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1128,"title":{},"body":{"coverage.html":{}}}],["01",{"_index":534,"title":{},"body":{"classes/Expense.html":{}}}],["1",{"_index":679,"title":{},"body":{"injectables/ExpenseValidationPipe.html":{},"classes/Helper.html":{},"injectables/UsersService.html":{}}}],["1.0.0",{"_index":1184,"title":{},"body":{"dependencies.html":{}}}],["1.0.34",{"_index":1155,"title":{},"body":{"dependencies.html":{}}}],["1.11.0",{"_index":1169,"title":{},"body":{"dependencies.html":{}}}],["1.17.2",{"_index":1177,"title":{},"body":{"dependencies.html":{}}}],["1.17.4",{"_index":1151,"title":{},"body":{"dependencies.html":{}}}],["13",{"_index":1269,"title":{},"body":{"overview.html":{}}}],["19",{"_index":1270,"title":{},"body":{"overview.html":{}}}],["1e9",{"_index":694,"title":{},"body":{"classes/Helper.html":{}}}],["2",{"_index":1109,"title":{},"body":{"injectables/UsersService.html":{}}}],["2.0.11",{"_index":1157,"title":{},"body":{"dependencies.html":{}}}],["2.2.2",{"_index":1144,"title":{},"body":{"dependencies.html":{}}}],["2.29.1",{"_index":1180,"title":{},"body":{"dependencies.html":{}}}],["2.3.2",{"_index":1182,"title":{},"body":{"dependencies.html":{}}}],["2021",{"_index":533,"title":{},"body":{"classes/Expense.html":{}}}],["26.0.24",{"_index":1153,"title":{},"body":{"dependencies.html":{}}}],["3",{"_index":1271,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["3.0.2",{"_index":1190,"title":{},"body":{"dependencies.html":{}}}],["3.10.1",{"_index":1199,"title":{},"body":{"dependencies.html":{}}}],["3.4.0",{"_index":1176,"title":{},"body":{"dependencies.html":{}}}],["3306",{"_index":1284,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4.1.0",{"_index":1165,"title":{},"body":{"dependencies.html":{}}}],["4.1.6",{"_index":1197,"title":{},"body":{"dependencies.html":{}}}],["4.17.13",{"_index":1150,"title":{},"body":{"dependencies.html":{}}}],["5.0.0",{"_index":1148,"title":{},"body":{"dependencies.html":{}}}],["5.0.1",{"_index":1158,"title":{},"body":{"dependencies.html":{}}}],["5.1.4",{"_index":1145,"title":{},"body":{"dependencies.html":{}}}],["5000000",{"_index":430,"title":{},"body":{"modules/DishModule.html":{}}}],["6",{"_index":1268,"title":{},"body":{"overview.html":{}}}],["6.1.3",{"_index":1194,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":1267,"title":{},"body":{"overview.html":{}}}],["7.30.0",{"_index":1171,"title":{},"body":{"dependencies.html":{}}}],["7.4.0",{"_index":1192,"title":{},"body":{"dependencies.html":{}}}],["7.4.4",{"_index":1161,"title":{},"body":{"dependencies.html":{}}}],["8.0.1",{"_index":1143,"title":{},"body":{"dependencies.html":{}}}],["8.0.2",{"_index":1146,"title":{},"body":{"dependencies.html":{}}}],["8.2.0",{"_index":1140,"title":{},"body":{"dependencies.html":{}}}],["8.3.0",{"_index":1174,"title":{},"body":{"dependencies.html":{}}}],["__dirname+'uploads",{"_index":427,"title":{},"body":{"modules/DishModule.html":{}}}],["acc",{"_index":799,"title":{},"body":{"classes/InventoryRepository.html":{},"classes/OrderRepository.html":{}}}],["acc.id",{"_index":996,"title":{},"body":{"classes/OrderRepository.html":{}}}],["acc.inventoryfactor",{"_index":804,"title":{},"body":{"classes/InventoryRepository.html":{}}}],["acc.inventoryitem",{"_index":800,"title":{},"body":{"classes/InventoryRepository.html":{}}}],["acc.price",{"_index":1022,"title":{},"body":{"classes/OrderRepository.html":{}}}],["afaq",{"_index":1106,"title":{},"body":{"injectables/UsersService.html":{}}}],["afaqpassword",{"_index":1108,"title":{},"body":{"injectables/UsersService.html":{}}}],["aliases",{"_index":1273,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allowed",{"_index":709,"title":{},"body":{"classes/Helper.html":{}}}],["already",{"_index":319,"title":{},"body":{"injectables/DishAlreadyExists.html":{}}}],["alsoafaq",{"_index":1107,"title":{},"body":{"injectables/UsersService.html":{}}}],["alsotabish",{"_index":1111,"title":{},"body":{"injectables/UsersService.html":{}}}],["amazing",{"_index":1244,"title":{},"body":{"index.html":{}}}],["amount",{"_index":520,"title":{},"body":{"classes/Expense.html":{},"classes/ExpenseDTO.html":{},"classes/ExpenseRepository.html":{},"classes/Inventory.html":{},"classes/InventoryDTO.html":{},"classes/InventoryRepository.html":{}}}],["apiacceptedresponse",{"_index":900,"title":{},"body":{"controllers/OrderController.html":{}}}],["apiresponse",{"_index":901,"title":{},"body":{"controllers/OrderController.html":{}}}],["app",{"_index":1222,"title":{},"body":{"index.html":{}}}],["app.service",{"_index":43,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["app_interceptor",{"_index":119,"title":{},"body":{"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":1214,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":85,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":42,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["async",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticatedGuard.html":{},"injectables/DishAlreadyExists.html":{},"controllers/DishController.html":{},"injectables/DishNameValidationPipe.html":{},"classes/DishRepository.html":{},"injectables/DishService.html":{},"controllers/ExpenseController.html":{},"classes/ExpenseRepository.html":{},"injectables/ExpenseService.html":{},"injectables/ExpenseValidationPipe.html":{},"controllers/InventoryController.html":{},"classes/InventoryRepository.html":{},"injectables/InventoryService.html":{},"guards/IsAdmin.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/OrderController.html":{},"classes/OrderRepository.html":{},"injectables/OrderService.html":{},"injectables/SessionSerializer.html":{},"classes/UserRepository.html":{},"injectables/UsersService.html":{},"guards/isStaff.html":{}}}],["auth",{"_index":136,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.guard",{"_index":50,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{}}}],["auth.guard.ts",{"_index":821,"title":{},"body":{"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["auth.guard.ts:7",{"_index":822,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["auth/local.strategy",{"_index":193,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth/session.serializer",{"_index":194,"title":{},"body":{"modules/AuthModule.html":{}}}],["authcontroller",{"_index":133,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authenticatedguard",{"_index":34,"title":{"guards/AuthenticatedGuard.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"guards/AuthenticatedGuard.html":{},"controllers/DishController.html":{},"controllers/ExpenseController.html":{},"controllers/OrderController.html":{},"coverage.html":{}}}],["authenticatedguard())@useguards(new",{"_index":17,"title":{},"body":{"controllers/AppController.html":{}}}],["authguard",{"_index":155,"title":{},"body":{"controllers/AuthController.html":{},"injectables/LocalAuthGuard.html":{}}}],["authguard('local",{"_index":823,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["authmodule",{"_index":91,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["authmodule,dishmodule",{"_index":121,"title":{},"body":{"modules/AppModule.html":{}}}],["author",{"_index":1253,"title":{},"body":{"index.html":{}}}],["authorized",{"_index":820,"title":{},"body":{"guards/IsAdmin.html":{},"guards/isStaff.html":{}}}],["authservice",{"_index":161,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["autoloadentities",{"_index":1291,"title":{},"body":{"miscellaneous/variables.html":{}}}],["await",{"_index":166,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/DishController.html":{},"classes/DishRepository.html":{},"injectables/DishService.html":{},"controllers/ExpenseController.html":{},"classes/ExpenseRepository.html":{},"injectables/ExpenseService.html":{},"injectables/ExpenseValidationPipe.html":{},"controllers/InventoryController.html":{},"classes/InventoryRepository.html":{},"injectables/InventoryService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/OrderController.html":{},"classes/OrderRepository.html":{},"injectables/OrderService.html":{},"classes/UserRepository.html":{}}}],["backers",{"_index":1245,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":237,"title":{},"body":{"guards/AuthenticatedGuard.html":{},"injectables/DishAlreadyExists.html":{},"injectables/DishNameValidationPipe.html":{},"injectables/ExpenseValidationPipe.html":{},"guards/IsAdmin.html":{},"guards/isStaff.html":{}}}],["badrequestexception('invalid",{"_index":680,"title":{},"body":{"injectables/ExpenseValidationPipe.html":{}}}],["badrequestexception('name",{"_index":441,"title":{},"body":{"injectables/DishNameValidationPipe.html":{}}}],["badrequestexception('please",{"_index":436,"title":{},"body":{"injectables/DishNameValidationPipe.html":{}}}],["badrequestexception('price",{"_index":445,"title":{},"body":{"injectables/DishNameValidationPipe.html":{}}}],["badrequestexception('this",{"_index":318,"title":{},"body":{"injectables/DishAlreadyExists.html":{}}}],["badrequestexception('you",{"_index":241,"title":{},"body":{"guards/AuthenticatedGuard.html":{},"guards/IsAdmin.html":{},"guards/isStaff.html":{}}}],["baseentity",{"_index":271,"title":{},"body":{"classes/Dish.html":{},"classes/Expense.html":{},"classes/ExpenseType.html":{},"classes/Inventory.html":{},"classes/Order.html":{},"classes/OrderDetails.html":{},"classes/Users.html":{}}}],["bcrypt",{"_index":1074,"title":{},"body":{"classes/UserRepository.html":{},"dependencies.html":{}}}],["bcrypt.compare(password,user.password",{"_index":1077,"title":{},"body":{"classes/UserRepository.html":{}}}],["bcrypt.hash(password,10",{"_index":1081,"title":{},"body":{"classes/UserRepository.html":{}}}],["better",{"_index":1159,"title":{},"body":{"dependencies.html":{}}}],["bill",{"_index":844,"title":{},"body":{"classes/Order.html":{},"classes/OrderDTO.html":{},"classes/OrderRepository.html":{}}}],["bill_payed",{"_index":845,"title":{},"body":{"classes/Order.html":{},"classes/OrderDTO.html":{}}}],["billid",{"_index":251,"title":{},"body":{"classes/CheckOutDTO.html":{},"classes/OrderRepository.html":{}}}],["billpayed",{"_index":252,"title":{},"body":{"classes/CheckOutDTO.html":{},"classes/OrderRepository.html":{}}}],["body",{"_index":151,"title":{},"body":{"controllers/AuthController.html":{},"controllers/DishController.html":{},"controllers/ExpenseController.html":{},"controllers/InventoryController.html":{},"injectables/LocalStrategy.html":{},"controllers/OrderController.html":{}}}],["boolean",{"_index":825,"title":{},"body":{"injectables/LocalAuthGuard.html":{},"classes/Order.html":{},"classes/Users.html":{},"injectables/UsersService.html":{}}}],["bootstrap",{"_index":1133,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["browse",{"_index":1265,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1263,"title":{},"body":{"modules.html":{}}}],["building",{"_index":1209,"title":{},"body":{"index.html":{}}}],["bull",{"_index":1164,"title":{},"body":{"dependencies.html":{}}}],["bulletproof",{"_index":79,"title":{},"body":{"controllers/AppController.html":{}}}],["c:\\\\users\\\\afaq\\\\documents\\\\youtube",{"_index":714,"title":{},"body":{"classes/Helper.html":{}}}],["callback",{"_index":78,"title":{},"body":{"controllers/AppController.html":{}}}],["canactivate",{"_index":232,"title":{},"body":{"guards/AuthenticatedGuard.html":{},"guards/IsAdmin.html":{},"injectables/LocalAuthGuard.html":{},"guards/isStaff.html":{}}}],["canactivate(context",{"_index":233,"title":{},"body":{"guards/AuthenticatedGuard.html":{},"guards/IsAdmin.html":{},"injectables/LocalAuthGuard.html":{},"guards/isStaff.html":{}}}],["cascade",{"_index":302,"title":{},"body":{"classes/Dish.html":{},"classes/Expense.html":{},"classes/ExpenseType.html":{},"classes/Inventory.html":{},"classes/Order.html":{},"classes/OrderDetails.html":{},"classes/Users.html":{}}}],["cascade'})@joincolumn",{"_index":285,"title":{},"body":{"classes/Dish.html":{},"classes/ExpenseType.html":{},"classes/Order.html":{}}}],["catch(err",{"_index":494,"title":{},"body":{"classes/DishRepository.html":{},"classes/ExpenseRepository.html":{},"classes/InventoryRepository.html":{}}}],["category",{"_index":521,"title":{},"body":{"classes/Expense.html":{},"classes/ExpenseDTO.html":{},"classes/ExpenseRepository.html":{},"injectables/ExpenseValidationPipe.html":{},"classes/Inventory.html":{},"classes/InventoryDTO.html":{},"classes/InventoryRepository.html":{}}}],["category.id",{"_index":548,"title":{},"body":{"classes/Expense.html":{}}}],["categoryid",{"_index":593,"title":{},"body":{"classes/ExpenseDTO.html":{},"classes/ExpenseRepository.html":{}}}],["cb",{"_index":686,"title":{},"body":{"classes/Helper.html":{}}}],["cb(new",{"_index":705,"title":{},"body":{"classes/Helper.html":{}}}],["cb(null",{"_index":700,"title":{},"body":{"classes/Helper.html":{}}}],["checkcategory",{"_index":675,"title":{},"body":{"injectables/ExpenseValidationPipe.html":{}}}],["checkcategory+1",{"_index":681,"title":{},"body":{"injectables/ExpenseValidationPipe.html":{}}}],["checkdish",{"_index":1020,"title":{},"body":{"classes/OrderRepository.html":{}}}],["checkedout",{"_index":846,"title":{},"body":{"classes/Order.html":{}}}],["checkedoutat",{"_index":847,"title":{},"body":{"classes/Order.html":{}}}],["checkout",{"_index":873,"title":{},"body":{"controllers/OrderController.html":{},"classes/OrderRepository.html":{},"injectables/OrderService.html":{}}}],["checkout(@body",{"_index":913,"title":{},"body":{"controllers/OrderController.html":{}}}],["checkout(checkoutdto",{"_index":878,"title":{},"body":{"controllers/OrderController.html":{},"classes/OrderRepository.html":{},"injectables/OrderService.html":{}}}],["checkoutat",{"_index":923,"title":{},"body":{"classes/OrderDTO.html":{}}}],["checkoutdto",{"_index":246,"title":{"classes/CheckOutDTO.html":{}},"body":{"classes/CheckOutDTO.html":{},"controllers/OrderController.html":{},"classes/OrderRepository.html":{},"injectables/OrderService.html":{},"coverage.html":{}}}],["checkuser",{"_index":137,"title":{},"body":{"controllers/AuthController.html":{}}}],["checkuser(@req",{"_index":176,"title":{},"body":{"controllers/AuthController.html":{}}}],["checkuser(req",{"_index":139,"title":{},"body":{"controllers/AuthController.html":{}}}],["class",{"_index":52,"title":{"classes/CheckOutDTO.html":{},"classes/Dish.html":{},"classes/DishDTO.html":{},"classes/DishRepository.html":{},"classes/Expense.html":{},"classes/ExpenseDTO.html":{},"classes/ExpenseRepository.html":{},"classes/ExpenseType.html":{},"classes/Helper.html":{},"classes/Inventory.html":{},"classes/InventoryDTO.html":{},"classes/InventoryRepository.html":{},"classes/Order.html":{},"classes/OrderDTO.html":{},"classes/OrderDetails.html":{},"classes/OrderRepository.html":{},"classes/UserDTO.html":{},"classes/UserRepository.html":{},"classes/Users.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticatedGuard.html":{},"classes/CheckOutDTO.html":{},"classes/Dish.html":{},"injectables/DishAlreadyExists.html":{},"controllers/DishController.html":{},"classes/DishDTO.html":{},"modules/DishModule.html":{},"injectables/DishNameValidationPipe.html":{},"classes/DishRepository.html":{},"injectables/DishService.html":{},"classes/Expense.html":{},"controllers/ExpenseController.html":{},"classes/ExpenseDTO.html":{},"modules/ExpenseModule.html":{},"classes/ExpenseRepository.html":{},"injectables/ExpenseService.html":{},"classes/ExpenseType.html":{},"injectables/ExpenseValidationPipe.html":{},"classes/Helper.html":{},"classes/Inventory.html":{},"controllers/InventoryController.html":{},"classes/InventoryDTO.html":{},"modules/InventoryModule.html":{},"classes/InventoryRepository.html":{},"injectables/InventoryService.html":{},"guards/IsAdmin.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"classes/OrderDTO.html":{},"classes/OrderDetails.html":{},"modules/OrderModule.html":{},"classes/OrderRepository.html":{},"injectables/OrderService.html":{},"injectables/SessionSerializer.html":{},"classes/UserDTO.html":{},"classes/UserRepository.html":{},"classes/Users.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"guards/isStaff.html":{}}}],["classes",{"_index":247,"title":{},"body":{"classes/CheckOutDTO.html":{},"classes/Dish.html":{},"classes/DishDTO.html":{},"classes/DishRepository.html":{},"classes/Expense.html":{},"classes/ExpenseDTO.html":{},"classes/ExpenseRepository.html":{},"classes/ExpenseType.html":{},"classes/Helper.html":{},"classes/Inventory.html":{},"classes/InventoryDTO.html":{},"classes/InventoryRepository.html":{},"classes/Order.html":{},"classes/OrderDTO.html":{},"classes/OrderDetails.html":{},"classes/OrderRepository.html":{},"classes/UserDTO.html":{},"classes/UserRepository.html":{},"classes/Users.html":{},"overview.html":{}}}],["classserializerinterceptor",{"_index":102,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"controllers/ExpenseController.html":{},"controllers/OrderController.html":{}}}],["cluster_appmodule",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":89,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":90,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":183,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":184,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":185,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_dishmodule",{"_index":418,"title":{},"body":{"modules/DishModule.html":{},"overview.html":{}}}],["cluster_dishmodule_providers",{"_index":419,"title":{},"body":{"modules/DishModule.html":{},"overview.html":{}}}],["cluster_expensemodule",{"_index":596,"title":{},"body":{"modules/ExpenseModule.html":{},"overview.html":{}}}],["cluster_expensemodule_providers",{"_index":597,"title":{},"body":{"modules/ExpenseModule.html":{},"overview.html":{}}}],["cluster_inventorymodule",{"_index":753,"title":{},"body":{"modules/InventoryModule.html":{},"overview.html":{}}}],["cluster_inventorymodule_providers",{"_index":754,"title":{},"body":{"modules/InventoryModule.html":{},"overview.html":{}}}],["cluster_ordermodule",{"_index":951,"title":{},"body":{"modules/OrderModule.html":{},"overview.html":{}}}],["cluster_ordermodule_imports",{"_index":952,"title":{},"body":{"modules/OrderModule.html":{},"overview.html":{}}}],["cluster_ordermodule_providers",{"_index":953,"title":{},"body":{"modules/OrderModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":1096,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":1097,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":1098,"title":{},"body":{"modules/UsersModule.html":{}}}],["column",{"_index":280,"title":{},"body":{"classes/Dish.html":{},"classes/Expense.html":{},"classes/ExpenseType.html":{},"classes/Inventory.html":{},"classes/Order.html":{},"classes/OrderDetails.html":{},"classes/Users.html":{}}}],["column()@exclude",{"_index":1090,"title":{},"body":{"classes/Users.html":{}}}],["column({type",{"_index":287,"title":{},"body":{"classes/Dish.html":{},"classes/Expense.html":{},"classes/Inventory.html":{},"classes/Order.html":{},"classes/Users.html":{}}}],["config",{"_index":1172,"title":{},"body":{"dependencies.html":{}}}],["config/typeorm.config",{"_index":109,"title":{},"body":{"modules/AppModule.html":{}}}],["console.log('created",{"_index":1011,"title":{},"body":{"classes/OrderRepository.html":{}}}],["console.log('now",{"_index":1014,"title":{},"body":{"classes/OrderRepository.html":{}}}],["console.log(acc",{"_index":1025,"title":{},"body":{"classes/OrderRepository.html":{}}}],["console.log(createdat",{"_index":1009,"title":{},"body":{"classes/OrderRepository.html":{}}}],["console.log(createdat.tostring",{"_index":1016,"title":{},"body":{"classes/OrderRepository.html":{}}}],["console.log(date",{"_index":625,"title":{},"body":{"classes/ExpenseRepository.html":{}}}],["console.log(dishdto",{"_index":394,"title":{},"body":{"controllers/DishController.html":{},"classes/DishRepository.html":{}}}],["console.log(file",{"_index":385,"title":{},"body":{"controllers/DishController.html":{}}}],["console.log(index",{"_index":1033,"title":{},"body":{"classes/OrderRepository.html":{}}}],["console.log(orderdto",{"_index":921,"title":{},"body":{"controllers/OrderController.html":{}}}],["console.log(path",{"_index":491,"title":{},"body":{"classes/DishRepository.html":{}}}],["console.log(req.body.dishid",{"_index":402,"title":{},"body":{"controllers/DishController.html":{}}}],["console.log(request.user",{"_index":826,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["console.log(result",{"_index":498,"title":{},"body":{"classes/DishRepository.html":{}}}],["console.log(userdto",{"_index":226,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(value",{"_index":433,"title":{},"body":{"injectables/DishNameValidationPipe.html":{}}}],["console.log(value.category",{"_index":667,"title":{},"body":{"injectables/ExpenseValidationPipe.html":{}}}],["const",{"_index":180,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticatedGuard.html":{},"controllers/DishController.html":{},"classes/DishRepository.html":{},"classes/ExpenseRepository.html":{},"injectables/ExpenseValidationPipe.html":{},"classes/Helper.html":{},"classes/InventoryRepository.html":{},"guards/IsAdmin.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/OrderRepository.html":{},"classes/UserRepository.html":{},"guards/isStaff.html":{}}}],["constructor",{"_index":204,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DishAlreadyExists.html":{},"injectables/DishService.html":{},"injectables/ExpenseService.html":{},"injectables/ExpenseValidationPipe.html":{},"injectables/InventoryService.html":{},"injectables/LocalStrategy.html":{},"classes/OrderRepository.html":{},"injectables/OrderService.html":{}}}],["constructor(@injectrepository(dishrepository",{"_index":510,"title":{},"body":{"injectables/DishService.html":{}}}],["constructor(@injectrepository(expenserepository",{"_index":666,"title":{},"body":{"injectables/ExpenseValidationPipe.html":{}}}],["constructor(authservice",{"_index":830,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["constructor(dishrepository",{"_index":305,"title":{},"body":{"injectables/DishAlreadyExists.html":{},"injectables/DishService.html":{}}}],["constructor(expenserepository",{"_index":643,"title":{},"body":{"injectables/ExpenseService.html":{},"injectables/ExpenseValidationPipe.html":{}}}],["constructor(inventoryrepository",{"_index":812,"title":{},"body":{"injectables/InventoryService.html":{},"classes/OrderRepository.html":{}}}],["constructor(orderrepository",{"_index":1040,"title":{},"body":{"injectables/OrderService.html":{}}}],["constructor(private",{"_index":53,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/DishAlreadyExists.html":{},"controllers/DishController.html":{},"controllers/ExpenseController.html":{},"injectables/ExpenseService.html":{},"controllers/InventoryController.html":{},"injectables/InventoryService.html":{},"injectables/LocalStrategy.html":{},"controllers/OrderController.html":{},"classes/OrderRepository.html":{},"injectables/OrderService.html":{}}}],["constructor(userservice",{"_index":205,"title":{},"body":{"injectables/AuthService.html":{}}}],["context",{"_index":236,"title":{},"body":{"guards/AuthenticatedGuard.html":{},"guards/IsAdmin.html":{},"injectables/LocalAuthGuard.html":{},"guards/isStaff.html":{}}}],["context.switchtohttp().getrequest",{"_index":239,"title":{},"body":{"guards/AuthenticatedGuard.html":{},"guards/IsAdmin.html":{},"injectables/LocalAuthGuard.html":{},"guards/isStaff.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/DishController.html":{},"controllers/ExpenseController.html":{},"controllers/InventoryController.html":{},"controllers/OrderController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/DishController.html":{},"controllers/ExpenseController.html":{},"controllers/InventoryController.html":{},"controllers/OrderController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":163,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('dish",{"_index":374,"title":{},"body":{"controllers/DishController.html":{}}}],["controller('expense",{"_index":578,"title":{},"body":{"controllers/ExpenseController.html":{}}}],["controller('inventory",{"_index":743,"title":{},"body":{"controllers/InventoryController.html":{}}}],["controller('order",{"_index":903,"title":{},"body":{"controllers/OrderController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/DishController.html":{},"modules/DishModule.html":{},"controllers/ExpenseController.html":{},"modules/ExpenseModule.html":{},"controllers/InventoryController.html":{},"modules/InventoryModule.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"overview.html":{}}}],["controllers/app.controller",{"_index":103,"title":{},"body":{"modules/AppModule.html":{}}}],["controllers/auth.controller",{"_index":195,"title":{},"body":{"modules/AuthModule.html":{}}}],["controllers/dish.controller",{"_index":421,"title":{},"body":{"modules/DishModule.html":{}}}],["controllers/expense.controller",{"_index":600,"title":{},"body":{"modules/ExpenseModule.html":{}}}],["controllers/inventory.controller",{"_index":757,"title":{},"body":{"modules/InventoryModule.html":{}}}],["controllers/order.controller",{"_index":957,"title":{},"body":{"modules/OrderModule.html":{}}}],["coverage",{"_index":1115,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":728,"title":{},"body":{"controllers/InventoryController.html":{}}}],["created",{"_index":1000,"title":{},"body":{"classes/OrderRepository.html":{}}}],["createdat",{"_index":522,"title":{},"body":{"classes/Expense.html":{},"classes/Order.html":{},"classes/OrderDTO.html":{},"classes/OrderRepository.html":{}}}],["createdish",{"_index":324,"title":{},"body":{"controllers/DishController.html":{},"classes/DishRepository.html":{},"injectables/DishService.html":{}}}],["createdish(@body",{"_index":383,"title":{},"body":{"controllers/DishController.html":{}}}],["createdish(dishdto",{"_index":331,"title":{},"body":{"controllers/DishController.html":{},"classes/DishRepository.html":{},"injectables/DishService.html":{}}}],["createexpense",{"_index":551,"title":{},"body":{"controllers/ExpenseController.html":{},"classes/ExpenseRepository.html":{},"injectables/ExpenseService.html":{}}}],["createexpense(@body",{"_index":581,"title":{},"body":{"controllers/ExpenseController.html":{}}}],["createexpense(expensedto",{"_index":556,"title":{},"body":{"controllers/ExpenseController.html":{},"classes/ExpenseRepository.html":{},"injectables/ExpenseService.html":{}}}],["createitem",{"_index":761,"title":{},"body":{"classes/InventoryRepository.html":{}}}],["createitem(inventorydto",{"_index":767,"title":{},"body":{"classes/InventoryRepository.html":{}}}],["createorder",{"_index":874,"title":{},"body":{"controllers/OrderController.html":{},"classes/OrderRepository.html":{},"injectables/OrderService.html":{}}}],["createorder(@body",{"_index":904,"title":{},"body":{"controllers/OrderController.html":{}}}],["createorder(orderdto",{"_index":881,"title":{},"body":{"controllers/OrderController.html":{},"classes/OrderRepository.html":{},"injectables/OrderService.html":{}}}],["createreadstream",{"_index":465,"title":{},"body":{"classes/DishRepository.html":{}}}],["createreadstream(result.imagepath",{"_index":499,"title":{},"body":{"classes/DishRepository.html":{}}}],["createuser",{"_index":138,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/UserRepository.html":{}}}],["createuser(@body",{"_index":165,"title":{},"body":{"controllers/AuthController.html":{}}}],["createuser(userdto",{"_index":142,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/UserRepository.html":{}}}],["credentials",{"_index":225,"title":{},"body":{"injectables/AuthService.html":{},"classes/UserRepository.html":{}}}],["csurf",{"_index":1168,"title":{},"body":{"dependencies.html":{}}}],["custom_charges",{"_index":253,"title":{},"body":{"classes/CheckOutDTO.html":{},"classes/Order.html":{},"classes/OrderDTO.html":{},"classes/OrderRepository.html":{}}}],["customfilename",{"_index":683,"title":{},"body":{"classes/Helper.html":{}}}],["customfilename(req",{"_index":685,"title":{},"body":{"classes/Helper.html":{}}}],["database",{"_index":1286,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date",{"_index":594,"title":{},"body":{"classes/ExpenseDTO.html":{},"classes/ExpenseRepository.html":{},"classes/OrderDTO.html":{}}}],["date.now",{"_index":692,"title":{},"body":{"classes/Helper.html":{}}}],["datestrings",{"_index":1293,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dd",{"_index":545,"title":{},"body":{"classes/Expense.html":{},"classes/ExpenseRepository.html":{},"classes/OrderRepository.html":{}}}],["decorators",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/CheckOutDTO.html":{},"classes/Dish.html":{},"controllers/DishController.html":{},"classes/Expense.html":{},"controllers/ExpenseController.html":{},"classes/ExpenseType.html":{},"classes/Inventory.html":{},"controllers/InventoryController.html":{},"classes/InventoryDTO.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"classes/OrderDTO.html":{},"classes/OrderDetails.html":{},"classes/UserDTO.html":{},"classes/Users.html":{}}}],["default",{"_index":528,"title":{},"body":{"classes/Expense.html":{},"classes/Order.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticatedGuard.html":{},"classes/CheckOutDTO.html":{},"classes/Dish.html":{},"injectables/DishAlreadyExists.html":{},"controllers/DishController.html":{},"classes/DishDTO.html":{},"injectables/DishNameValidationPipe.html":{},"classes/DishRepository.html":{},"injectables/DishService.html":{},"classes/Expense.html":{},"controllers/ExpenseController.html":{},"classes/ExpenseDTO.html":{},"classes/ExpenseRepository.html":{},"injectables/ExpenseService.html":{},"classes/ExpenseType.html":{},"injectables/ExpenseValidationPipe.html":{},"classes/Helper.html":{},"classes/Inventory.html":{},"controllers/InventoryController.html":{},"classes/InventoryDTO.html":{},"classes/InventoryRepository.html":{},"injectables/InventoryService.html":{},"guards/IsAdmin.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"classes/OrderDTO.html":{},"classes/OrderDetails.html":{},"classes/OrderRepository.html":{},"injectables/OrderService.html":{},"injectables/SessionSerializer.html":{},"classes/UserDTO.html":{},"classes/UserRepository.html":{},"classes/Users.html":{},"injectables/UsersService.html":{},"guards/isStaff.html":{}}}],["delete",{"_index":356,"title":{},"body":{"controllers/DishController.html":{},"controllers/ExpenseController.html":{},"controllers/OrderController.html":{},"classes/UserRepository.html":{}}}],["delete('/:id",{"_index":396,"title":{},"body":{"controllers/DishController.html":{}}}],["delete('/:id')@useguards(new",{"_index":336,"title":{},"body":{"controllers/DishController.html":{}}}],["delete('/delete",{"_index":886,"title":{},"body":{"controllers/OrderController.html":{}}}],["delete('/delete/:id",{"_index":590,"title":{},"body":{"controllers/ExpenseController.html":{}}}],["delete('/delete/:id')@useguards(new",{"_index":561,"title":{},"body":{"controllers/ExpenseController.html":{}}}],["deletedish",{"_index":325,"title":{},"body":{"controllers/DishController.html":{},"classes/DishRepository.html":{},"injectables/DishService.html":{}}}],["deletedish(@param('id",{"_index":397,"title":{},"body":{"controllers/DishController.html":{}}}],["deletedish(id",{"_index":335,"title":{},"body":{"controllers/DishController.html":{},"classes/DishRepository.html":{},"injectables/DishService.html":{}}}],["deleteexpense",{"_index":552,"title":{},"body":{"controllers/ExpenseController.html":{},"classes/ExpenseRepository.html":{},"injectables/ExpenseService.html":{}}}],["deleteexpense(@param",{"_index":591,"title":{},"body":{"controllers/ExpenseController.html":{}}}],["deleteexpense(id",{"_index":560,"title":{},"body":{"controllers/ExpenseController.html":{},"classes/ExpenseRepository.html":{},"injectables/ExpenseService.html":{}}}],["deleteorder",{"_index":875,"title":{},"body":{"controllers/OrderController.html":{},"classes/OrderRepository.html":{},"injectables/OrderService.html":{}}}],["deleteorder(@body",{"_index":920,"title":{},"body":{"controllers/OrderController.html":{}}}],["deleteorder(orderdto",{"_index":885,"title":{},"body":{"controllers/OrderController.html":{},"classes/OrderRepository.html":{},"injectables/OrderService.html":{}}}],["dependencies",{"_index":87,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DishModule.html":{},"modules/ExpenseModule.html":{},"modules/InventoryModule.html":{},"modules/OrderModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":1215,"title":{},"body":{"index.html":{}}}],["deserializeuser",{"_index":1056,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["deserializeuser(payload",{"_index":1058,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["dest",{"_index":426,"title":{},"body":{"modules/DishModule.html":{}}}],["destination",{"_index":377,"title":{},"body":{"controllers/DishController.html":{}}}],["destinationpath",{"_index":684,"title":{},"body":{"classes/Helper.html":{}}}],["destinationpath(req",{"_index":688,"title":{},"body":{"classes/Helper.html":{}}}],["detail.entity",{"_index":867,"title":{},"body":{"classes/Order.html":{},"modules/OrderModule.html":{},"classes/OrderRepository.html":{}}}],["detail.entity.ts",{"_index":940,"title":{},"body":{"classes/OrderDetails.html":{},"coverage.html":{}}}],["detail.entity.ts:11",{"_index":947,"title":{},"body":{"classes/OrderDetails.html":{}}}],["detail.entity.ts:14",{"_index":944,"title":{},"body":{"classes/OrderDetails.html":{}}}],["detail.entity.ts:17",{"_index":945,"title":{},"body":{"classes/OrderDetails.html":{}}}],["detail.entity.ts:20",{"_index":948,"title":{},"body":{"classes/OrderDetails.html":{}}}],["detail.entity.ts:8",{"_index":946,"title":{},"body":{"classes/OrderDetails.html":{}}}],["development",{"_index":1223,"title":{},"body":{"index.html":{}}}],["discount",{"_index":254,"title":{},"body":{"classes/CheckOutDTO.html":{},"classes/Order.html":{},"classes/OrderDTO.html":{},"classes/OrderRepository.html":{}}}],["dish",{"_index":268,"title":{"classes/Dish.html":{}},"body":{"classes/Dish.html":{},"injectables/DishAlreadyExists.html":{},"controllers/DishController.html":{},"injectables/DishNameValidationPipe.html":{},"classes/DishRepository.html":{},"classes/Inventory.html":{},"classes/InventoryRepository.html":{},"classes/OrderRepository.html":{},"coverage.html":{}}}],["dish.delete(id",{"_index":493,"title":{},"body":{"classes/DishRepository.html":{}}}],["dish.entity",{"_index":724,"title":{},"body":{"classes/Inventory.html":{}}}],["dish.findandcount",{"_index":479,"title":{},"body":{"classes/DishRepository.html":{}}}],["dish.findbyids(dishes",{"_index":978,"title":{},"body":{"classes/OrderRepository.html":{}}}],["dish.findbyids(dishestoremove",{"_index":1017,"title":{},"body":{"classes/OrderRepository.html":{}}}],["dish.findone({id",{"_index":485,"title":{},"body":{"classes/DishRepository.html":{}}}],["dish.findone({where",{"_index":484,"title":{},"body":{"classes/DishRepository.html":{}}}],["dish.findoneorfail(id",{"_index":490,"title":{},"body":{"classes/DishRepository.html":{}}}],["dish.findoneorfail({where",{"_index":483,"title":{},"body":{"classes/DishRepository.html":{}}}],["dish.id",{"_index":725,"title":{},"body":{"classes/Inventory.html":{}}}],["dish.imagepath",{"_index":474,"title":{},"body":{"classes/DishRepository.html":{}}}],["dish.inventoryfactor",{"_index":472,"title":{},"body":{"classes/DishRepository.html":{}}}],["dish.inventoryitem",{"_index":475,"title":{},"body":{"classes/DishRepository.html":{}}}],["dish.name",{"_index":468,"title":{},"body":{"classes/DishRepository.html":{}}}],["dish.price",{"_index":470,"title":{},"body":{"classes/DishRepository.html":{}}}],["dish.save",{"_index":477,"title":{},"body":{"classes/DishRepository.html":{}}}],["dishalreadyexists",{"_index":303,"title":{"injectables/DishAlreadyExists.html":{}},"body":{"injectables/DishAlreadyExists.html":{},"controllers/DishController.html":{},"coverage.html":{}}}],["dishcontroller",{"_index":322,"title":{"controllers/DishController.html":{}},"body":{"controllers/DishController.html":{},"modules/DishModule.html":{},"coverage.html":{}}}],["dishdto",{"_index":309,"title":{"classes/DishDTO.html":{}},"body":{"injectables/DishAlreadyExists.html":{},"controllers/DishController.html":{},"classes/DishDTO.html":{},"injectables/DishNameValidationPipe.html":{},"classes/DishRepository.html":{},"injectables/DishService.html":{},"coverage.html":{}}}],["dishdto,@uploadedfile",{"_index":384,"title":{},"body":{"controllers/DishController.html":{}}}],["dishdto.imagepath",{"_index":386,"title":{},"body":{"controllers/DishController.html":{},"classes/DishRepository.html":{}}}],["dishdto.inventoryfactor",{"_index":473,"title":{},"body":{"classes/DishRepository.html":{}}}],["dishdto.inventoryitem",{"_index":476,"title":{},"body":{"classes/DishRepository.html":{}}}],["dishdto.name",{"_index":469,"title":{},"body":{"classes/DishRepository.html":{}}}],["dishdto.price",{"_index":471,"title":{},"body":{"classes/DishRepository.html":{}}}],["dishes",{"_index":478,"title":{},"body":{"classes/DishRepository.html":{},"classes/InventoryRepository.html":{},"classes/OrderDTO.html":{},"classes/OrderRepository.html":{}}}],["dishes.foreach(async",{"_index":991,"title":{},"body":{"classes/OrderRepository.html":{}}}],["dishes.length",{"_index":1024,"title":{},"body":{"classes/OrderRepository.html":{}}}],["dishes.reduce((acc",{"_index":980,"title":{},"body":{"classes/OrderRepository.html":{}}}],["dishes[0",{"_index":482,"title":{},"body":{"classes/DishRepository.html":{}}}],["dishes[1",{"_index":481,"title":{},"body":{"classes/DishRepository.html":{}}}],["dishes[index].id",{"_index":1030,"title":{},"body":{"classes/OrderRepository.html":{}}}],["dishes[index].quantity",{"_index":805,"title":{},"body":{"classes/InventoryRepository.html":{},"classes/OrderRepository.html":{}}}],["dishestoremove",{"_index":924,"title":{},"body":{"classes/OrderDTO.html":{},"classes/OrderRepository.html":{}}}],["dishestoremove.foreach(async",{"_index":1019,"title":{},"body":{"classes/OrderRepository.html":{}}}],["dishestoremove[index].quantity",{"_index":1023,"title":{},"body":{"classes/OrderRepository.html":{}}}],["dishid",{"_index":339,"title":{},"body":{"controllers/DishController.html":{},"classes/OrderDetails.html":{}}}],["dishmodule",{"_index":92,"title":{"modules/DishModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DishModule.html":{},"modules.html":{},"overview.html":{}}}],["dishnamevalidationpipe",{"_index":368,"title":{"injectables/DishNameValidationPipe.html":{}},"body":{"controllers/DishController.html":{},"injectables/DishNameValidationPipe.html":{},"coverage.html":{}}}],["dishquantity",{"_index":941,"title":{},"body":{"classes/OrderDetails.html":{}}}],["dishrepository",{"_index":306,"title":{"classes/DishRepository.html":{}},"body":{"injectables/DishAlreadyExists.html":{},"modules/DishModule.html":{},"classes/DishRepository.html":{},"injectables/DishService.html":{},"coverage.html":{}}}],["dishservice",{"_index":372,"title":{"injectables/DishService.html":{}},"body":{"controllers/DishController.html":{},"modules/DishModule.html":{},"injectables/DishService.html":{},"coverage.html":{},"overview.html":{}}}],["diskstorage",{"_index":364,"title":{},"body":{"controllers/DishController.html":{}}}],["dist/**/*.entity{.ts,.js",{"_index":1290,"title":{},"body":{"miscellaneous/variables.html":{}}}],["documentation",{"_index":1116,"title":{},"body":{"coverage.html":{}}}],["done",{"_index":1059,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["done(null",{"_index":1068,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["double",{"_index":288,"title":{},"body":{"classes/Dish.html":{},"classes/Expense.html":{},"classes/ExpenseDTO.html":{},"classes/Inventory.html":{},"classes/Order.html":{}}}],["dto",{"_index":160,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/DishAlreadyExists.html":{},"controllers/DishController.html":{},"injectables/DishNameValidationPipe.html":{},"classes/DishRepository.html":{},"injectables/DishService.html":{},"controllers/ExpenseController.html":{},"classes/ExpenseRepository.html":{},"injectables/ExpenseService.html":{},"injectables/ExpenseValidationPipe.html":{},"injectables/LocalStrategy.html":{},"controllers/OrderController.html":{},"classes/OrderRepository.html":{},"injectables/OrderService.html":{},"classes/UserRepository.html":{}}}],["dto.ts",{"_index":411,"title":{},"body":{"classes/DishDTO.html":{},"classes/ExpenseDTO.html":{},"classes/OrderDTO.html":{},"classes/UserDTO.html":{},"coverage.html":{}}}],["dto.ts:10",{"_index":595,"title":{},"body":{"classes/ExpenseDTO.html":{},"classes/OrderDTO.html":{}}}],["dto.ts:12",{"_index":936,"title":{},"body":{"classes/OrderDTO.html":{},"classes/UserDTO.html":{}}}],["dto.ts:14",{"_index":933,"title":{},"body":{"classes/OrderDTO.html":{}}}],["dto.ts:17",{"_index":935,"title":{},"body":{"classes/OrderDTO.html":{}}}],["dto.ts:20",{"_index":926,"title":{},"body":{"classes/OrderDTO.html":{}}}],["dto.ts:23",{"_index":927,"title":{},"body":{"classes/OrderDTO.html":{}}}],["dto.ts:26",{"_index":932,"title":{},"body":{"classes/OrderDTO.html":{}}}],["dto.ts:29",{"_index":931,"title":{},"body":{"classes/OrderDTO.html":{}}}],["dto.ts:32",{"_index":934,"title":{},"body":{"classes/OrderDTO.html":{}}}],["dto.ts:35",{"_index":930,"title":{},"body":{"classes/OrderDTO.html":{}}}],["dto.ts:37",{"_index":928,"title":{},"body":{"classes/OrderDTO.html":{}}}],["dto.ts:4",{"_index":412,"title":{},"body":{"classes/DishDTO.html":{}}}],["dto.ts:5",{"_index":416,"title":{},"body":{"classes/DishDTO.html":{},"classes/ExpenseDTO.html":{}}}],["dto.ts:6",{"_index":417,"title":{},"body":{"classes/DishDTO.html":{},"classes/ExpenseDTO.html":{}}}],["dto.ts:7",{"_index":414,"title":{},"body":{"classes/DishDTO.html":{},"classes/ExpenseDTO.html":{}}}],["dto.ts:8",{"_index":415,"title":{},"body":{"classes/DishDTO.html":{},"classes/ExpenseDTO.html":{},"classes/OrderDTO.html":{},"classes/UserDTO.html":{}}}],["dto.ts:9",{"_index":413,"title":{},"body":{"classes/DishDTO.html":{},"classes/ExpenseDTO.html":{}}}],["dto/dish",{"_index":463,"title":{},"body":{"classes/DishRepository.html":{},"injectables/DishService.html":{}}}],["e2e",{"_index":1233,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":1210,"title":{},"body":{"index.html":{}}}],["enter",{"_index":437,"title":{},"body":{"injectables/DishNameValidationPipe.html":{}}}],["entered",{"_index":641,"title":{},"body":{"classes/ExpenseRepository.html":{}}}],["entities",{"_index":1288,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entities/dish.entity",{"_index":462,"title":{},"body":{"classes/DishRepository.html":{}}}],["entity",{"_index":293,"title":{},"body":{"classes/Dish.html":{},"classes/Expense.html":{},"classes/ExpenseType.html":{},"classes/Inventory.html":{},"classes/Order.html":{},"classes/OrderDetails.html":{},"classes/Users.html":{}}}],["entityrepository",{"_index":461,"title":{},"body":{"classes/DishRepository.html":{},"classes/ExpenseRepository.html":{},"classes/InventoryRepository.html":{},"classes/OrderRepository.html":{},"classes/UserRepository.html":{}}}],["entityrepository(dish",{"_index":467,"title":{},"body":{"classes/DishRepository.html":{}}}],["entityrepository(expense",{"_index":618,"title":{},"body":{"classes/ExpenseRepository.html":{}}}],["entityrepository(inventory",{"_index":783,"title":{},"body":{"classes/InventoryRepository.html":{}}}],["entityrepository(order",{"_index":974,"title":{},"body":{"classes/OrderRepository.html":{}}}],["entityrepository(users",{"_index":1075,"title":{},"body":{"classes/UserRepository.html":{}}}],["entity{.ts,.js",{"_index":1289,"title":{},"body":{"miscellaneous/variables.html":{}}}],["err",{"_index":72,"title":{},"body":{"controllers/AppController.html":{},"injectables/SessionSerializer.html":{}}}],["error",{"_index":1067,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["error('only",{"_index":706,"title":{},"body":{"classes/Helper.html":{}}}],["error(`the",{"_index":710,"title":{},"body":{"classes/Helper.html":{}}}],["error,payload",{"_index":1060,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["error,user",{"_index":1065,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["eslint",{"_index":1170,"title":{},"body":{"dependencies.html":{}}}],["exclude",{"_index":865,"title":{},"body":{"classes/Order.html":{},"classes/UserDTO.html":{},"classes/Users.html":{}}}],["execute",{"_index":808,"title":{},"body":{"classes/InventoryRepository.html":{}}}],["executioncontext",{"_index":234,"title":{},"body":{"guards/AuthenticatedGuard.html":{},"guards/IsAdmin.html":{},"injectables/LocalAuthGuard.html":{},"guards/isStaff.html":{}}}],["exist",{"_index":496,"title":{},"body":{"classes/DishRepository.html":{}}}],["exists",{"_index":489,"title":{},"body":{"classes/DishRepository.html":{}}}],["exists,please",{"_index":320,"title":{},"body":{"injectables/DishAlreadyExists.html":{}}}],["expense",{"_index":518,"title":{"classes/Expense.html":{}},"body":{"classes/Expense.html":{},"controllers/ExpenseController.html":{},"classes/ExpenseRepository.html":{},"classes/ExpenseType.html":{},"coverage.html":{}}}],["expense.amount",{"_index":622,"title":{},"body":{"classes/ExpenseRepository.html":{}}}],["expense.category",{"_index":621,"title":{},"body":{"classes/ExpenseRepository.html":{}}}],["expense.createquerybuilder('expense').where({createdat",{"_index":628,"title":{},"body":{"classes/ExpenseRepository.html":{}}}],["expense.entity",{"_index":662,"title":{},"body":{"classes/ExpenseType.html":{}}}],["expense.findoneorfail(id",{"_index":636,"title":{},"body":{"classes/ExpenseRepository.html":{}}}],["expense.id",{"_index":664,"title":{},"body":{"classes/ExpenseType.html":{}}}],["expense.name",{"_index":619,"title":{},"body":{"classes/ExpenseRepository.html":{}}}],["expense.remove",{"_index":635,"title":{},"body":{"classes/ExpenseRepository.html":{}}}],["expense.save",{"_index":623,"title":{},"body":{"classes/ExpenseRepository.html":{}}}],["expense.type",{"_index":620,"title":{},"body":{"classes/ExpenseRepository.html":{}}}],["expense.updatedat",{"_index":634,"title":{},"body":{"classes/ExpenseRepository.html":{}}}],["expensecontroller",{"_index":549,"title":{"controllers/ExpenseController.html":{}},"body":{"controllers/ExpenseController.html":{},"modules/ExpenseModule.html":{},"coverage.html":{}}}],["expensecount",{"_index":630,"title":{},"body":{"classes/ExpenseRepository.html":{}}}],["expensedto",{"_index":557,"title":{"classes/ExpenseDTO.html":{}},"body":{"controllers/ExpenseController.html":{},"classes/ExpenseDTO.html":{},"classes/ExpenseRepository.html":{},"injectables/ExpenseService.html":{},"injectables/ExpenseValidationPipe.html":{},"coverage.html":{}}}],["expensemodule",{"_index":93,"title":{"modules/ExpenseModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ExpenseModule.html":{},"modules.html":{},"overview.html":{}}}],["expenserepository",{"_index":601,"title":{"classes/ExpenseRepository.html":{}},"body":{"modules/ExpenseModule.html":{},"classes/ExpenseRepository.html":{},"injectables/ExpenseService.html":{},"injectables/ExpenseValidationPipe.html":{},"coverage.html":{}}}],["expenses",{"_index":632,"title":{},"body":{"classes/ExpenseRepository.html":{}}}],["expenseservice",{"_index":575,"title":{"injectables/ExpenseService.html":{}},"body":{"controllers/ExpenseController.html":{},"modules/ExpenseModule.html":{},"injectables/ExpenseService.html":{},"coverage.html":{},"overview.html":{}}}],["expensetype",{"_index":537,"title":{"classes/ExpenseType.html":{}},"body":{"classes/Expense.html":{},"modules/ExpenseModule.html":{},"classes/ExpenseRepository.html":{},"classes/ExpenseType.html":{},"coverage.html":{}}}],["expensetype.findoneorfail({where",{"_index":639,"title":{},"body":{"classes/ExpenseRepository.html":{}}}],["expensevalidationpipe",{"_index":573,"title":{"injectables/ExpenseValidationPipe.html":{}},"body":{"controllers/ExpenseController.html":{},"injectables/ExpenseValidationPipe.html":{},"coverage.html":{}}}],["export",{"_index":51,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticatedGuard.html":{},"classes/CheckOutDTO.html":{},"classes/Dish.html":{},"injectables/DishAlreadyExists.html":{},"controllers/DishController.html":{},"classes/DishDTO.html":{},"modules/DishModule.html":{},"injectables/DishNameValidationPipe.html":{},"classes/DishRepository.html":{},"injectables/DishService.html":{},"classes/Expense.html":{},"controllers/ExpenseController.html":{},"classes/ExpenseDTO.html":{},"modules/ExpenseModule.html":{},"classes/ExpenseRepository.html":{},"injectables/ExpenseService.html":{},"classes/ExpenseType.html":{},"injectables/ExpenseValidationPipe.html":{},"classes/Helper.html":{},"classes/Inventory.html":{},"controllers/InventoryController.html":{},"classes/InventoryDTO.html":{},"modules/InventoryModule.html":{},"classes/InventoryRepository.html":{},"injectables/InventoryService.html":{},"guards/IsAdmin.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"classes/OrderDTO.html":{},"classes/OrderDetails.html":{},"modules/OrderModule.html":{},"classes/OrderRepository.html":{},"injectables/OrderService.html":{},"injectables/SessionSerializer.html":{},"classes/UserDTO.html":{},"classes/UserRepository.html":{},"classes/Users.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"guards/isStaff.html":{}}}],["exports",{"_index":1100,"title":{},"body":{"modules/UsersModule.html":{}}}],["expose",{"_index":1093,"title":{},"body":{"classes/Users.html":{}}}],["express",{"_index":361,"title":{},"body":{"controllers/DishController.html":{},"modules/DishModule.html":{},"classes/UserRepository.html":{},"dependencies.html":{}}}],["express.multer.file",{"_index":332,"title":{},"body":{"controllers/DishController.html":{}}}],["extends",{"_index":270,"title":{},"body":{"classes/Dish.html":{},"classes/DishRepository.html":{},"classes/Expense.html":{},"classes/ExpenseRepository.html":{},"classes/ExpenseType.html":{},"classes/Inventory.html":{},"classes/InventoryRepository.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Order.html":{},"classes/OrderDetails.html":{},"classes/OrderRepository.html":{},"injectables/SessionSerializer.html":{},"classes/UserRepository.html":{},"classes/Users.html":{}}}],["false",{"_index":704,"title":{},"body":{"classes/Helper.html":{},"classes/Order.html":{},"classes/OrderRepository.html":{},"injectables/UsersService.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticatedGuard.html":{},"classes/CheckOutDTO.html":{},"classes/Dish.html":{},"injectables/DishAlreadyExists.html":{},"controllers/DishController.html":{},"classes/DishDTO.html":{},"modules/DishModule.html":{},"injectables/DishNameValidationPipe.html":{},"classes/DishRepository.html":{},"injectables/DishService.html":{},"classes/Expense.html":{},"controllers/ExpenseController.html":{},"classes/ExpenseDTO.html":{},"modules/ExpenseModule.html":{},"classes/ExpenseRepository.html":{},"injectables/ExpenseService.html":{},"classes/ExpenseType.html":{},"injectables/ExpenseValidationPipe.html":{},"classes/Helper.html":{},"classes/Inventory.html":{},"controllers/InventoryController.html":{},"classes/InventoryDTO.html":{},"modules/InventoryModule.html":{},"classes/InventoryRepository.html":{},"injectables/InventoryService.html":{},"guards/IsAdmin.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"classes/OrderDTO.html":{},"classes/OrderDetails.html":{},"modules/OrderModule.html":{},"classes/OrderRepository.html":{},"injectables/OrderService.html":{},"injectables/SessionSerializer.html":{},"classes/UserDTO.html":{},"classes/UserRepository.html":{},"classes/Users.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"guards/isStaff.html":{}}}],["file.mimetype",{"_index":713,"title":{},"body":{"classes/Helper.html":{}}}],["file.originalname.split(\".\")[0",{"_index":699,"title":{},"body":{"classes/Helper.html":{}}}],["file.path",{"_index":387,"title":{},"body":{"controllers/DishController.html":{}}}],["file.pipe(res",{"_index":410,"title":{},"body":{"controllers/DishController.html":{}}}],["fileextension",{"_index":695,"title":{},"body":{"classes/Helper.html":{}}}],["fileinterceptor",{"_index":359,"title":{},"body":{"controllers/DishController.html":{}}}],["filename",{"_index":379,"title":{},"body":{"controllers/DishController.html":{}}}],["filesize",{"_index":429,"title":{},"body":{"modules/DishModule.html":{}}}],["fileupload",{"_index":326,"title":{},"body":{"controllers/DishController.html":{}}}],["fileupload(@uploadedfile",{"_index":401,"title":{},"body":{"controllers/DishController.html":{}}}],["fileupload(file",{"_index":338,"title":{},"body":{"controllers/DishController.html":{}}}],["findexpenseentity",{"_index":605,"title":{},"body":{"classes/ExpenseRepository.html":{}}}],["findexpenseentity(id",{"_index":609,"title":{},"body":{"classes/ExpenseRepository.html":{}}}],["findexpensetype",{"_index":606,"title":{},"body":{"classes/ExpenseRepository.html":{}}}],["findexpensetype(expensetype",{"_index":611,"title":{},"body":{"classes/ExpenseRepository.html":{}}}],["findinventory",{"_index":762,"title":{},"body":{"classes/InventoryRepository.html":{}}}],["findinventory(id",{"_index":769,"title":{},"body":{"classes/InventoryRepository.html":{}}}],["findone",{"_index":1103,"title":{},"body":{"injectables/UsersService.html":{}}}],["findone(username",{"_index":1104,"title":{},"body":{"injectables/UsersService.html":{}}}],["first",{"_index":244,"title":{},"body":{"guards/AuthenticatedGuard.html":{},"guards/IsAdmin.html":{},"guards/isStaff.html":{}}}],["format",{"_index":708,"title":{},"body":{"classes/Helper.html":{}}}],["found",{"_index":638,"title":{},"body":{"classes/ExpenseRepository.html":{},"classes/InventoryRepository.html":{},"injectables/LocalStrategy.html":{}}}],["framework",{"_index":1208,"title":{},"body":{"index.html":{}}}],["fs",{"_index":363,"title":{},"body":{"controllers/DishController.html":{},"classes/DishRepository.html":{},"dependencies.html":{}}}],["fsync",{"_index":466,"title":{},"body":{"classes/DishRepository.html":{}}}],["function",{"_index":1063,"title":{},"body":{"injectables/SessionSerializer.html":{},"coverage.html":{}}}],["functions",{"_index":1202,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get('/check",{"_index":175,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('/check')@useguards(new",{"_index":140,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('/getall",{"_index":733,"title":{},"body":{"controllers/InventoryController.html":{}}}],["get('/image/:id",{"_index":343,"title":{},"body":{"controllers/DishController.html":{}}}],["get('/logout",{"_index":69,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{}}}],["get('/logout')@useguards(new",{"_index":33,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{}}}],["get('/view/:id",{"_index":570,"title":{},"body":{"controllers/ExpenseController.html":{}}}],["get('/viewactiveorders",{"_index":893,"title":{},"body":{"controllers/OrderController.html":{}}}],["get('/viewalldishes",{"_index":348,"title":{},"body":{"controllers/DishController.html":{}}}],["get('/viewbydate",{"_index":567,"title":{},"body":{"controllers/ExpenseController.html":{}}}],["get('/viewdish/:id",{"_index":351,"title":{},"body":{"controllers/DishController.html":{}}}],["get('getone",{"_index":735,"title":{},"body":{"controllers/InventoryController.html":{}}}],["get('protected",{"_index":65,"title":{},"body":{"controllers/AppController.html":{}}}],["get('protected')@useguards(new",{"_index":16,"title":{},"body":{"controllers/AppController.html":{}}}],["getallitems",{"_index":729,"title":{},"body":{"controllers/InventoryController.html":{}}}],["getallorders",{"_index":876,"title":{},"body":{"controllers/OrderController.html":{},"classes/OrderRepository.html":{},"injectables/OrderService.html":{}}}],["getallorders(@body",{"_index":916,"title":{},"body":{"controllers/OrderController.html":{}}}],["getallorders(orderdto",{"_index":888,"title":{},"body":{"controllers/OrderController.html":{},"classes/OrderRepository.html":{},"injectables/OrderService.html":{}}}],["getcategories",{"_index":671,"title":{},"body":{"injectables/ExpenseValidationPipe.html":{}}}],["getcategories.findindex(getcategories",{"_index":676,"title":{},"body":{"injectables/ExpenseValidationPipe.html":{}}}],["getcategories.id",{"_index":674,"title":{},"body":{"injectables/ExpenseValidationPipe.html":{}}}],["getcategories.name",{"_index":677,"title":{},"body":{"injectables/ExpenseValidationPipe.html":{}}}],["getcurrenttime",{"_index":961,"title":{},"body":{"classes/OrderRepository.html":{}}}],["getdishbyname",{"_index":448,"title":{},"body":{"classes/DishRepository.html":{}}}],["getdishbyname(name",{"_index":452,"title":{},"body":{"classes/DishRepository.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["gethello(@request",{"_index":67,"title":{},"body":{"controllers/AppController.html":{}}}],["gethello(req",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["getimage",{"_index":327,"title":{},"body":{"controllers/DishController.html":{},"classes/DishRepository.html":{},"injectables/DishService.html":{}}}],["getimage(@res",{"_index":407,"title":{},"body":{"controllers/DishController.html":{}}}],["getimage(id",{"_index":454,"title":{},"body":{"classes/DishRepository.html":{},"injectables/DishService.html":{}}}],["getimage(res",{"_index":342,"title":{},"body":{"controllers/DishController.html":{}}}],["getone",{"_index":730,"title":{},"body":{"controllers/InventoryController.html":{}}}],["getoneorfail",{"_index":1002,"title":{},"body":{"classes/OrderRepository.html":{}}}],["getting",{"_index":1204,"title":{"index.html":{}},"body":{}}],["grow",{"_index":1240,"title":{},"body":{"index.html":{}}}],["guard",{"_index":229,"title":{"guards/AuthenticatedGuard.html":{},"guards/IsAdmin.html":{},"guards/isStaff.html":{}},"body":{"coverage.html":{}}}],["guards",{"_index":230,"title":{},"body":{"guards/AuthenticatedGuard.html":{},"guards/IsAdmin.html":{},"guards/isStaff.html":{},"overview.html":{}}}],["guards/authenticated.guard",{"_index":44,"title":{},"body":{"controllers/AppController.html":{},"controllers/DishController.html":{}}}],["guards/isadmin.guard",{"_index":46,"title":{},"body":{"controllers/AppController.html":{},"controllers/DishController.html":{}}}],["guards/isstaff.guard",{"_index":47,"title":{},"body":{"controllers/AppController.html":{}}}],["guards/local",{"_index":49,"title":{},"body":{"controllers/AppController.html":{}}}],["hello",{"_index":131,"title":{},"body":{"injectables/AppService.html":{}}}],["helper",{"_index":366,"title":{"classes/Helper.html":{}},"body":{"controllers/DishController.html":{},"classes/Helper.html":{},"coverage.html":{}}}],["helper.customfilename",{"_index":380,"title":{},"body":{"controllers/DishController.html":{}}}],["helper.destinationpath",{"_index":378,"title":{},"body":{"controllers/DishController.html":{}}}],["here",{"_index":1250,"title":{},"body":{"index.html":{}}}],["hey",{"_index":68,"title":{},"body":{"controllers/AppController.html":{}}}],["hh",{"_index":546,"title":{},"body":{"classes/Expense.html":{},"classes/ExpenseRepository.html":{},"classes/OrderRepository.html":{}}}],["hh:mm:ss",{"_index":543,"title":{},"body":{"classes/Expense.html":{},"classes/Order.html":{},"classes/OrderDTO.html":{},"classes/OrderRepository.html":{}}}],["high",{"_index":446,"title":{},"body":{"injectables/DishNameValidationPipe.html":{}}}],["home",{"_index":63,"title":{},"body":{"controllers/AppController.html":{}}}],["host",{"_index":1281,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpcode",{"_index":152,"title":{},"body":{"controllers/AuthController.html":{}}}],["https://nestjs.com",{"_index":1257,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":153,"title":{},"body":{"controllers/AuthController.html":{}}}],["id",{"_index":272,"title":{},"body":{"classes/Dish.html":{},"controllers/DishController.html":{},"classes/DishDTO.html":{},"injectables/DishNameValidationPipe.html":{},"classes/DishRepository.html":{},"injectables/DishService.html":{},"classes/Expense.html":{},"controllers/ExpenseController.html":{},"classes/ExpenseDTO.html":{},"classes/ExpenseRepository.html":{},"injectables/ExpenseService.html":{},"classes/ExpenseType.html":{},"classes/Inventory.html":{},"classes/InventoryDTO.html":{},"classes/InventoryRepository.html":{},"classes/Order.html":{},"classes/OrderDTO.html":{},"classes/OrderDetails.html":{},"classes/OrderRepository.html":{},"classes/Users.html":{},"injectables/UsersService.html":{}}}],["id\",{id",{"_index":807,"title":{},"body":{"classes/InventoryRepository.html":{}}}],["id\",{id}).execute",{"_index":1038,"title":{},"body":{"classes/OrderRepository.html":{}}}],["id,name,amount",{"_index":795,"title":{},"body":{"classes/InventoryRepository.html":{}}}],["identifier",{"_index":1117,"title":{},"body":{"coverage.html":{}}}],["if(!date",{"_index":626,"title":{},"body":{"classes/ExpenseRepository.html":{}}}],["if(!request.user.isadmin",{"_index":818,"title":{},"body":{"guards/IsAdmin.html":{}}}],["if(!request.user.isstaff",{"_index":1262,"title":{},"body":{"guards/isStaff.html":{}}}],["if(!user",{"_index":840,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["if(!value.id",{"_index":434,"title":{},"body":{"injectables/DishNameValidationPipe.html":{}}}],["if(!value.name===undefined",{"_index":439,"title":{},"body":{"injectables/DishNameValidationPipe.html":{}}}],["if(!value.price===undefined",{"_index":443,"title":{},"body":{"injectables/DishNameValidationPipe.html":{}}}],["if(await",{"_index":316,"title":{},"body":{"injectables/DishAlreadyExists.html":{}}}],["if(checkcategory",{"_index":678,"title":{},"body":{"injectables/ExpenseValidationPipe.html":{}}}],["if(dish===undefined",{"_index":486,"title":{},"body":{"classes/DishRepository.html":{}}}],["if(err",{"_index":73,"title":{},"body":{"controllers/AppController.html":{}}}],["if(file.mimetype.indexof(\"jpeg",{"_index":696,"title":{},"body":{"classes/Helper.html":{}}}],["if(file.mimetype.indexof(\"png",{"_index":702,"title":{},"body":{"classes/Helper.html":{}}}],["if(isnan(value.id",{"_index":435,"title":{},"body":{"injectables/DishNameValidationPipe.html":{}}}],["if(name",{"_index":796,"title":{},"body":{"classes/InventoryRepository.html":{}}}],["if(request.user===undefined",{"_index":240,"title":{},"body":{"guards/AuthenticatedGuard.html":{},"guards/IsAdmin.html":{},"guards/isStaff.html":{}}}],["if(user",{"_index":219,"title":{},"body":{"injectables/AuthService.html":{},"classes/UserRepository.html":{}}}],["if(value.category",{"_index":668,"title":{},"body":{"injectables/ExpenseValidationPipe.html":{}}}],["if(value.name.length>30",{"_index":440,"title":{},"body":{"injectables/DishNameValidationPipe.html":{}}}],["if(value.price>6000",{"_index":444,"title":{},"body":{"injectables/DishNameValidationPipe.html":{}}}],["imagepath",{"_index":273,"title":{},"body":{"classes/Dish.html":{},"classes/DishDTO.html":{}}}],["implements",{"_index":238,"title":{},"body":{"guards/AuthenticatedGuard.html":{},"injectables/DishAlreadyExists.html":{},"injectables/DishNameValidationPipe.html":{},"injectables/ExpenseValidationPipe.html":{},"guards/IsAdmin.html":{},"guards/isStaff.html":{}}}],["import",{"_index":36,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticatedGuard.html":{},"classes/CheckOutDTO.html":{},"classes/Dish.html":{},"injectables/DishAlreadyExists.html":{},"controllers/DishController.html":{},"classes/DishDTO.html":{},"modules/DishModule.html":{},"injectables/DishNameValidationPipe.html":{},"classes/DishRepository.html":{},"injectables/DishService.html":{},"classes/Expense.html":{},"controllers/ExpenseController.html":{},"classes/ExpenseDTO.html":{},"modules/ExpenseModule.html":{},"classes/ExpenseRepository.html":{},"injectables/ExpenseService.html":{},"classes/ExpenseType.html":{},"injectables/ExpenseValidationPipe.html":{},"classes/Inventory.html":{},"controllers/InventoryController.html":{},"classes/InventoryDTO.html":{},"modules/InventoryModule.html":{},"classes/InventoryRepository.html":{},"injectables/InventoryService.html":{},"guards/IsAdmin.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"classes/OrderDTO.html":{},"classes/OrderDetails.html":{},"modules/OrderModule.html":{},"classes/OrderRepository.html":{},"injectables/OrderService.html":{},"injectables/SessionSerializer.html":{},"classes/UserDTO.html":{},"classes/UserRepository.html":{},"classes/Users.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"guards/isStaff.html":{}}}],["imports",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DishModule.html":{},"modules/ExpenseModule.html":{},"modules/InventoryModule.html":{},"modules/OrderModule.html":{},"modules/UsersModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticatedGuard.html":{},"classes/CheckOutDTO.html":{},"classes/Dish.html":{},"injectables/DishAlreadyExists.html":{},"controllers/DishController.html":{},"classes/DishDTO.html":{},"injectables/DishNameValidationPipe.html":{},"classes/DishRepository.html":{},"injectables/DishService.html":{},"classes/Expense.html":{},"controllers/ExpenseController.html":{},"classes/ExpenseDTO.html":{},"classes/ExpenseRepository.html":{},"injectables/ExpenseService.html":{},"classes/ExpenseType.html":{},"injectables/ExpenseValidationPipe.html":{},"classes/Helper.html":{},"classes/Inventory.html":{},"controllers/InventoryController.html":{},"classes/InventoryDTO.html":{},"classes/InventoryRepository.html":{},"injectables/InventoryService.html":{},"guards/IsAdmin.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"classes/OrderDTO.html":{},"classes/OrderDetails.html":{},"classes/OrderRepository.html":{},"injectables/OrderService.html":{},"injectables/SessionSerializer.html":{},"classes/UserDTO.html":{},"classes/UserRepository.html":{},"classes/Users.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"guards/isStaff.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticatedGuard.html":{},"classes/CheckOutDTO.html":{},"classes/Dish.html":{},"injectables/DishAlreadyExists.html":{},"controllers/DishController.html":{},"classes/DishDTO.html":{},"modules/DishModule.html":{},"injectables/DishNameValidationPipe.html":{},"classes/DishRepository.html":{},"injectables/DishService.html":{},"classes/Expense.html":{},"controllers/ExpenseController.html":{},"classes/ExpenseDTO.html":{},"modules/ExpenseModule.html":{},"classes/ExpenseRepository.html":{},"injectables/ExpenseService.html":{},"classes/ExpenseType.html":{},"injectables/ExpenseValidationPipe.html":{},"classes/Helper.html":{},"classes/Inventory.html":{},"controllers/InventoryController.html":{},"classes/InventoryDTO.html":{},"modules/InventoryModule.html":{},"classes/InventoryRepository.html":{},"injectables/InventoryService.html":{},"guards/IsAdmin.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"classes/OrderDTO.html":{},"classes/OrderDetails.html":{},"modules/OrderModule.html":{},"classes/OrderRepository.html":{},"injectables/OrderService.html":{},"injectables/SessionSerializer.html":{},"classes/UserDTO.html":{},"classes/UserRepository.html":{},"classes/Users.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"guards/isStaff.html":{}}}],["injectable",{"_index":127,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/DishAlreadyExists.html":{},"injectables/DishNameValidationPipe.html":{},"injectables/DishService.html":{},"injectables/ExpenseService.html":{},"injectables/ExpenseValidationPipe.html":{},"injectables/InventoryService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/OrderService.html":{},"injectables/SessionSerializer.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"guards/AuthenticatedGuard.html":{},"injectables/DishAlreadyExists.html":{},"injectables/DishNameValidationPipe.html":{},"injectables/DishService.html":{},"injectables/ExpenseService.html":{},"injectables/ExpenseValidationPipe.html":{},"injectables/InventoryService.html":{},"guards/IsAdmin.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/OrderService.html":{},"injectables/SessionSerializer.html":{},"injectables/UsersService.html":{},"coverage.html":{},"guards/isStaff.html":{}}}],["injectables",{"_index":128,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/DishAlreadyExists.html":{},"injectables/DishNameValidationPipe.html":{},"injectables/DishService.html":{},"injectables/ExpenseService.html":{},"injectables/ExpenseValidationPipe.html":{},"injectables/InventoryService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/OrderService.html":{},"injectables/SessionSerializer.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injectrepository",{"_index":509,"title":{},"body":{"injectables/DishService.html":{},"injectables/ExpenseValidationPipe.html":{}}}],["inside",{"_index":77,"title":{},"body":{"controllers/AppController.html":{}}}],["installation",{"_index":1219,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":1221,"title":{},"body":{"index.html":{}}}],["integer",{"_index":861,"title":{},"body":{"classes/Order.html":{}}}],["inventory",{"_index":274,"title":{"classes/Inventory.html":{}},"body":{"classes/Dish.html":{},"classes/Inventory.html":{},"controllers/InventoryController.html":{},"classes/InventoryRepository.html":{},"classes/OrderRepository.html":{},"coverage.html":{}}}],["inventory.amount",{"_index":787,"title":{},"body":{"classes/InventoryRepository.html":{}}}],["inventory.category",{"_index":786,"title":{},"body":{"classes/InventoryRepository.html":{}}}],["inventory.createquerybuilder",{"_index":801,"title":{},"body":{"classes/InventoryRepository.html":{}}}],["inventory.entity",{"_index":298,"title":{},"body":{"classes/Dish.html":{}}}],["inventory.findandcount",{"_index":791,"title":{},"body":{"classes/InventoryRepository.html":{}}}],["inventory.findoneorfail(id",{"_index":809,"title":{},"body":{"classes/InventoryRepository.html":{}}}],["inventory.id",{"_index":301,"title":{},"body":{"classes/Dish.html":{}}}],["inventory.name",{"_index":785,"title":{},"body":{"classes/InventoryRepository.html":{}}}],["inventory.save",{"_index":789,"title":{},"body":{"classes/InventoryRepository.html":{}}}],["inventory.unit",{"_index":788,"title":{},"body":{"classes/InventoryRepository.html":{}}}],["inventory[0",{"_index":794,"title":{},"body":{"classes/InventoryRepository.html":{}}}],["inventory[1",{"_index":793,"title":{},"body":{"classes/InventoryRepository.html":{}}}],["inventorycontroller",{"_index":726,"title":{"controllers/InventoryController.html":{}},"body":{"controllers/InventoryController.html":{},"modules/InventoryModule.html":{},"coverage.html":{}}}],["inventorycount",{"_index":792,"title":{},"body":{"classes/InventoryRepository.html":{}}}],["inventorydto",{"_index":738,"title":{"classes/InventoryDTO.html":{}},"body":{"controllers/InventoryController.html":{},"classes/InventoryDTO.html":{},"classes/InventoryRepository.html":{},"injectables/InventoryService.html":{},"coverage.html":{}}}],["inventoryfactor",{"_index":275,"title":{},"body":{"classes/Dish.html":{},"classes/DishDTO.html":{}}}],["inventoryitem",{"_index":276,"title":{},"body":{"classes/Dish.html":{},"classes/DishDTO.html":{}}}],["inventorymodule",{"_index":94,"title":{"modules/InventoryModule.html":{}},"body":{"modules/AppModule.html":{},"modules/InventoryModule.html":{},"modules.html":{},"overview.html":{}}}],["inventoryrepository",{"_index":758,"title":{"classes/InventoryRepository.html":{}},"body":{"modules/InventoryModule.html":{},"classes/InventoryRepository.html":{},"injectables/InventoryService.html":{},"modules/OrderModule.html":{},"classes/OrderRepository.html":{},"coverage.html":{},"overview.html":{}}}],["inventoryservice",{"_index":741,"title":{"injectables/InventoryService.html":{}},"body":{"controllers/InventoryController.html":{},"modules/InventoryModule.html":{},"injectables/InventoryService.html":{},"coverage.html":{},"overview.html":{}}}],["isadmin",{"_index":45,"title":{"guards/IsAdmin.html":{}},"body":{"controllers/AppController.html":{},"controllers/DishController.html":{},"controllers/ExpenseController.html":{},"guards/IsAdmin.html":{},"classes/Users.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["isadmin())@useinterceptors(undefined)@post('/createdish')@usepipes(dishalreadyexists",{"_index":333,"title":{},"body":{"controllers/DishController.html":{}}}],["isint",{"_index":266,"title":{},"body":{"classes/CheckOutDTO.html":{}}}],["ismainthread",{"_index":972,"title":{},"body":{"classes/OrderRepository.html":{}}}],["isnotempty",{"_index":1070,"title":{},"body":{"classes/UserDTO.html":{}}}],["isnumber",{"_index":260,"title":{},"body":{"classes/CheckOutDTO.html":{},"classes/InventoryDTO.html":{},"classes/OrderDTO.html":{}}}],["isnumberstring",{"_index":257,"title":{},"body":{"classes/CheckOutDTO.html":{}}}],["isstaff",{"_index":18,"title":{"guards/isStaff.html":{}},"body":{"controllers/AppController.html":{},"classes/Users.html":{},"injectables/UsersService.html":{},"coverage.html":{},"guards/isStaff.html":{}}}],["isstring",{"_index":748,"title":{},"body":{"classes/InventoryDTO.html":{},"classes/UserDTO.html":{}}}],["isstring()@isnotempty",{"_index":1069,"title":{},"body":{"classes/UserDTO.html":{}}}],["item",{"_index":981,"title":{},"body":{"classes/OrderRepository.html":{}}}],["item.price",{"_index":982,"title":{},"body":{"classes/OrderRepository.html":{}}}],["items",{"_index":774,"title":{},"body":{"classes/InventoryRepository.html":{}}}],["items.foreach",{"_index":798,"title":{},"body":{"classes/InventoryRepository.html":{}}}],["join",{"_index":117,"title":{},"body":{"modules/AppModule.html":{},"classes/DishRepository.html":{},"index.html":{}}}],["join(__dirname",{"_index":124,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["joincolumn",{"_index":296,"title":{},"body":{"classes/Dish.html":{},"classes/Expense.html":{},"classes/ExpenseType.html":{},"classes/Inventory.html":{},"classes/Order.html":{},"classes/Users.html":{}}}],["jpeg",{"_index":707,"title":{},"body":{"classes/Helper.html":{}}}],["jpg",{"_index":697,"title":{},"body":{"classes/Helper.html":{}}}],["json.parse(moment().startof(\"day\").format('yyyy",{"_index":627,"title":{},"body":{"classes/ExpenseRepository.html":{}}}],["kamil",{"_index":1254,"title":{},"body":{"index.html":{}}}],["keepconnectionalive",{"_index":1295,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lessthanorequal",{"_index":970,"title":{},"body":{"classes/OrderRepository.html":{}}}],["license",{"_index":1260,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":1237,"title":{},"body":{"index.html":{}}}],["limits",{"_index":428,"title":{},"body":{"modules/DishModule.html":{}}}],["literal",{"_index":772,"title":{},"body":{"classes/InventoryRepository.html":{},"classes/OrderDTO.html":{},"miscellaneous/typealiases.html":{}}}],["local",{"_index":837,"title":{},"body":{"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["localauthguard",{"_index":48,"title":{"injectables/LocalAuthGuard.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["localauthguard(userdto",{"_index":169,"title":{},"body":{"controllers/AuthController.html":{}}}],["localhost",{"_index":1282,"title":{},"body":{"miscellaneous/variables.html":{}}}],["localstrategy",{"_index":187,"title":{"injectables/LocalStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["log",{"_index":243,"title":{},"body":{"guards/AuthenticatedGuard.html":{},"guards/IsAdmin.html":{},"guards/isStaff.html":{}}}],["logged",{"_index":61,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{}}}],["loggged",{"_index":172,"title":{},"body":{"controllers/AuthController.html":{}}}],["login",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/UserRepository.html":{}}}],["login(@body",{"_index":170,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(@request",{"_index":58,"title":{},"body":{"controllers/AppController.html":{}}}],["login(req",{"_index":27,"title":{},"body":{"controllers/AppController.html":{}}}],["login(userdto",{"_index":147,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/UserRepository.html":{}}}],["logout",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{}}}],["logout(@req",{"_index":70,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{}}}],["logout(req",{"_index":31,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{}}}],["long",{"_index":442,"title":{},"body":{"injectables/DishNameValidationPipe.html":{}}}],["mangal_oriental",{"_index":1287,"title":{},"body":{"miscellaneous/variables.html":{}}}],["manytoone",{"_index":295,"title":{},"body":{"classes/Dish.html":{},"classes/Expense.html":{},"classes/Order.html":{},"classes/OrderDetails.html":{}}}],["manytoone(type",{"_index":300,"title":{},"body":{"classes/Dish.html":{},"classes/Expense.html":{},"classes/Order.html":{},"classes/OrderDetails.html":{}}}],["manytoone(undefined",{"_index":282,"title":{},"body":{"classes/Dish.html":{},"classes/Expense.html":{},"classes/Order.html":{},"classes/OrderDetails.html":{}}}],["matching",{"_index":83,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticatedGuard.html":{},"classes/CheckOutDTO.html":{},"classes/Dish.html":{},"injectables/DishAlreadyExists.html":{},"controllers/DishController.html":{},"classes/DishDTO.html":{},"modules/DishModule.html":{},"injectables/DishNameValidationPipe.html":{},"classes/DishRepository.html":{},"injectables/DishService.html":{},"classes/Expense.html":{},"controllers/ExpenseController.html":{},"classes/ExpenseDTO.html":{},"modules/ExpenseModule.html":{},"classes/ExpenseRepository.html":{},"injectables/ExpenseService.html":{},"classes/ExpenseType.html":{},"injectables/ExpenseValidationPipe.html":{},"classes/Helper.html":{},"classes/Inventory.html":{},"controllers/InventoryController.html":{},"classes/InventoryDTO.html":{},"modules/InventoryModule.html":{},"classes/InventoryRepository.html":{},"injectables/InventoryService.html":{},"guards/IsAdmin.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"classes/OrderDTO.html":{},"classes/OrderDetails.html":{},"modules/OrderModule.html":{},"classes/OrderRepository.html":{},"injectables/OrderService.html":{},"injectables/SessionSerializer.html":{},"classes/UserDTO.html":{},"classes/UserRepository.html":{},"classes/Users.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"guards/isStaff.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.round(math.random",{"_index":693,"title":{},"body":{"classes/Helper.html":{}}}],["message",{"_index":60,"title":{},"body":{"controllers/AppController.html":{},"classes/OrderRepository.html":{}}}],["metadata",{"_index":1187,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticatedGuard.html":{},"injectables/DishAlreadyExists.html":{},"controllers/DishController.html":{},"injectables/DishNameValidationPipe.html":{},"classes/DishRepository.html":{},"injectables/DishService.html":{},"controllers/ExpenseController.html":{},"classes/ExpenseRepository.html":{},"injectables/ExpenseService.html":{},"injectables/ExpenseValidationPipe.html":{},"classes/Helper.html":{},"controllers/InventoryController.html":{},"classes/InventoryRepository.html":{},"injectables/InventoryService.html":{},"guards/IsAdmin.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/OrderController.html":{},"classes/OrderRepository.html":{},"injectables/OrderService.html":{},"injectables/SessionSerializer.html":{},"classes/UserRepository.html":{},"injectables/UsersService.html":{},"guards/isStaff.html":{}}}],["miscellaneous",{"_index":1201,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1236,"title":{},"body":{"index.html":{}}}],["mm",{"_index":541,"title":{},"body":{"classes/Expense.html":{},"classes/ExpenseRepository.html":{},"classes/Order.html":{},"classes/OrderDTO.html":{},"classes/OrderRepository.html":{}}}],["mode",{"_index":1227,"title":{},"body":{"index.html":{}}}],["module",{"_index":84,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DishModule.html":{},"modules/ExpenseModule.html":{},"modules/InventoryModule.html":{},"modules/OrderModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DishModule.html":{},"modules/ExpenseModule.html":{},"modules/InventoryModule.html":{},"modules/OrderModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["modules",{"_index":86,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DishModule.html":{},"modules/ExpenseModule.html":{},"modules/InventoryModule.html":{},"modules/OrderModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/auth.module",{"_index":105,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/dish.module",{"_index":110,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/expense.module",{"_index":113,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/inventory.module",{"_index":112,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/order.module",{"_index":111,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/users.module",{"_index":104,"title":{},"body":{"modules/AppModule.html":{}}}],["moment",{"_index":536,"title":{},"body":{"classes/Expense.html":{},"classes/ExpenseRepository.html":{},"classes/Order.html":{},"classes/OrderDTO.html":{},"classes/OrderRepository.html":{},"dependencies.html":{}}}],["moment().format(\"dd",{"_index":985,"title":{},"body":{"classes/OrderRepository.html":{}}}],["moment().format('dd",{"_index":1013,"title":{},"body":{"classes/OrderRepository.html":{}}}],["moment().format('yyyy",{"_index":544,"title":{},"body":{"classes/Expense.html":{},"classes/ExpenseRepository.html":{},"classes/OrderRepository.html":{}}}],["moment().startof('day').format('yyyy",{"_index":1010,"title":{},"body":{"classes/OrderRepository.html":{}}}],["moment(createdat).format('dd",{"_index":1008,"title":{},"body":{"classes/OrderRepository.html":{}}}],["moment(date1.value).format('dd",{"_index":540,"title":{},"body":{"classes/Expense.html":{},"classes/Order.html":{},"classes/OrderDTO.html":{}}}],["more",{"_index":1249,"title":{},"body":{"index.html":{}}}],["morethanorequal",{"_index":617,"title":{},"body":{"classes/ExpenseRepository.html":{},"classes/OrderRepository.html":{}}}],["morethanorequal(date)}).getmanyandcount",{"_index":629,"title":{},"body":{"classes/ExpenseRepository.html":{}}}],["multer",{"_index":365,"title":{},"body":{"controllers/DishController.html":{}}}],["multermodule",{"_index":423,"title":{},"body":{"modules/DishModule.html":{}}}],["multermodule.register",{"_index":425,"title":{},"body":{"modules/DishModule.html":{}}}],["mysql",{"_index":1280,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mysql2",{"_index":1181,"title":{},"body":{"dependencies.html":{}}}],["myśliwiec",{"_index":1255,"title":{},"body":{"index.html":{}}}],["n",{"_index":712,"title":{},"body":{"classes/Helper.html":{}}}],["name",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticatedGuard.html":{},"classes/Dish.html":{},"injectables/DishAlreadyExists.html":{},"controllers/DishController.html":{},"classes/DishDTO.html":{},"injectables/DishNameValidationPipe.html":{},"classes/DishRepository.html":{},"injectables/DishService.html":{},"classes/Expense.html":{},"controllers/ExpenseController.html":{},"classes/ExpenseDTO.html":{},"classes/ExpenseRepository.html":{},"injectables/ExpenseService.html":{},"classes/ExpenseType.html":{},"injectables/ExpenseValidationPipe.html":{},"classes/Helper.html":{},"classes/Inventory.html":{},"controllers/InventoryController.html":{},"classes/InventoryDTO.html":{},"classes/InventoryRepository.html":{},"injectables/InventoryService.html":{},"guards/IsAdmin.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/OrderController.html":{},"classes/OrderRepository.html":{},"injectables/OrderService.html":{},"injectables/SessionSerializer.html":{},"classes/UserRepository.html":{},"injectables/UsersService.html":{},"guards/isStaff.html":{}}}],["name,amount,unit,category",{"_index":784,"title":{},"body":{"classes/InventoryRepository.html":{}}}],["need",{"_index":242,"title":{},"body":{"guards/AuthenticatedGuard.html":{},"guards/IsAdmin.html":{},"guards/isStaff.html":{}}}],["nest",{"_index":1216,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":1259,"title":{},"body":{"index.html":{}}}],["nestjs/bull",{"_index":1138,"title":{},"body":{"dependencies.html":{}}}],["nestjs/common",{"_index":41,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticatedGuard.html":{},"injectables/DishAlreadyExists.html":{},"controllers/DishController.html":{},"classes/DishDTO.html":{},"modules/DishModule.html":{},"injectables/DishNameValidationPipe.html":{},"classes/DishRepository.html":{},"injectables/DishService.html":{},"controllers/ExpenseController.html":{},"modules/ExpenseModule.html":{},"classes/ExpenseRepository.html":{},"injectables/ExpenseService.html":{},"injectables/ExpenseValidationPipe.html":{},"controllers/InventoryController.html":{},"modules/InventoryModule.html":{},"classes/InventoryRepository.html":{},"injectables/InventoryService.html":{},"guards/IsAdmin.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"injectables/SessionSerializer.html":{},"classes/UserRepository.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{},"guards/isStaff.html":{}}}],["nestjs/core",{"_index":120,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":1141,"title":{},"body":{"dependencies.html":{}}}],["nestjs/passport",{"_index":156,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/SessionSerializer.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":360,"title":{},"body":{"controllers/DishController.html":{},"modules/DishModule.html":{},"dependencies.html":{}}}],["nestjs/serve",{"_index":115,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":902,"title":{},"body":{"controllers/OrderController.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DishModule.html":{},"injectables/DishService.html":{},"modules/ExpenseModule.html":{},"injectables/ExpenseValidationPipe.html":{},"modules/InventoryModule.html":{},"modules/OrderModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["new",{"_index":223,"title":{},"body":{"injectables/AuthService.html":{},"guards/AuthenticatedGuard.html":{},"injectables/DishAlreadyExists.html":{},"injectables/DishNameValidationPipe.html":{},"classes/DishRepository.html":{},"classes/ExpenseRepository.html":{},"injectables/ExpenseValidationPipe.html":{},"classes/InventoryRepository.html":{},"guards/IsAdmin.html":{},"injectables/LocalStrategy.html":{},"classes/OrderRepository.html":{},"classes/UserRepository.html":{},"coverage.html":{},"guards/isStaff.html":{}}}],["node.js",{"_index":1207,"title":{},"body":{"index.html":{}}}],["notfoundexception",{"_index":464,"title":{},"body":{"classes/DishRepository.html":{},"classes/ExpenseRepository.html":{},"classes/InventoryRepository.html":{}}}],["notfoundexception('inventory",{"_index":810,"title":{},"body":{"classes/InventoryRepository.html":{}}}],["notfoundexception('no",{"_index":487,"title":{},"body":{"classes/DishRepository.html":{}}}],["notfoundexception('requested",{"_index":637,"title":{},"body":{"classes/ExpenseRepository.html":{}}}],["notfoundexception('the",{"_index":640,"title":{},"body":{"classes/ExpenseRepository.html":{}}}],["notfoundexception('this",{"_index":495,"title":{},"body":{"classes/DishRepository.html":{}}}],["now",{"_index":1012,"title":{},"body":{"classes/OrderRepository.html":{}}}],["npm",{"_index":1220,"title":{},"body":{"index.html":{}}}],["nullable",{"_index":853,"title":{},"body":{"classes/Order.html":{}}}],["number",{"_index":256,"title":{},"body":{"classes/CheckOutDTO.html":{},"classes/Dish.html":{},"controllers/DishController.html":{},"classes/DishDTO.html":{},"classes/DishRepository.html":{},"injectables/DishService.html":{},"classes/Expense.html":{},"controllers/ExpenseController.html":{},"classes/ExpenseDTO.html":{},"classes/ExpenseRepository.html":{},"injectables/ExpenseService.html":{},"classes/ExpenseType.html":{},"classes/Inventory.html":{},"classes/InventoryDTO.html":{},"classes/InventoryRepository.html":{},"classes/Order.html":{},"classes/OrderDTO.html":{},"classes/OrderDetails.html":{},"classes/Users.html":{},"injectables/UsersService.html":{}}}],["number,quantity",{"_index":937,"title":{},"body":{"classes/OrderDTO.html":{}}}],["ondelete",{"_index":284,"title":{},"body":{"classes/Dish.html":{},"classes/Expense.html":{},"classes/ExpenseType.html":{},"classes/Inventory.html":{},"classes/Order.html":{},"classes/OrderDetails.html":{},"classes/Users.html":{}}}],["onetomany",{"_index":661,"title":{},"body":{"classes/ExpenseType.html":{},"classes/Inventory.html":{},"classes/Order.html":{},"classes/Users.html":{}}}],["onetomany(type",{"_index":663,"title":{},"body":{"classes/ExpenseType.html":{},"classes/Inventory.html":{},"classes/Order.html":{}}}],["onetomany(undefined",{"_index":656,"title":{},"body":{"classes/ExpenseType.html":{},"classes/Inventory.html":{},"classes/Order.html":{}}}],["onetoone",{"_index":866,"title":{},"body":{"classes/Order.html":{},"classes/Users.html":{}}}],["onetoone(type",{"_index":1094,"title":{},"body":{"classes/Users.html":{}}}],["onetoone(undefined",{"_index":1088,"title":{},"body":{"classes/Users.html":{}}}],["open",{"_index":1238,"title":{},"body":{"index.html":{}}}],["optional",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticatedGuard.html":{},"injectables/DishAlreadyExists.html":{},"controllers/DishController.html":{},"injectables/DishNameValidationPipe.html":{},"classes/DishRepository.html":{},"injectables/DishService.html":{},"controllers/ExpenseController.html":{},"classes/ExpenseRepository.html":{},"injectables/ExpenseService.html":{},"injectables/ExpenseValidationPipe.html":{},"classes/Helper.html":{},"controllers/InventoryController.html":{},"classes/InventoryRepository.html":{},"injectables/InventoryService.html":{},"guards/IsAdmin.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/OrderController.html":{},"classes/OrderRepository.html":{},"injectables/OrderService.html":{},"injectables/SessionSerializer.html":{},"classes/UserRepository.html":{},"injectables/UsersService.html":{},"guards/isStaff.html":{}}}],["order",{"_index":842,"title":{"classes/Order.html":{}},"body":{"classes/Order.html":{},"controllers/OrderController.html":{},"classes/OrderDetails.html":{},"classes/OrderRepository.html":{},"classes/Users.html":{},"coverage.html":{}}}],["order.bill",{"_index":983,"title":{},"body":{"classes/OrderRepository.html":{}}}],["order.bill_payed",{"_index":1004,"title":{},"body":{"classes/OrderRepository.html":{}}}],["order.checkedout",{"_index":986,"title":{},"body":{"classes/OrderRepository.html":{}}}],["order.checkedoutat",{"_index":1003,"title":{},"body":{"classes/OrderRepository.html":{}}}],["order.createdat",{"_index":984,"title":{},"body":{"classes/OrderRepository.html":{}}}],["order.createquerybuilder('order",{"_index":1001,"title":{},"body":{"classes/OrderRepository.html":{}}}],["order.custom_charges",{"_index":1006,"title":{},"body":{"classes/OrderRepository.html":{}}}],["order.delete(id",{"_index":1036,"title":{},"body":{"classes/OrderRepository.html":{}}}],["order.discount",{"_index":1005,"title":{},"body":{"classes/OrderRepository.html":{}}}],["order.entity",{"_index":949,"title":{},"body":{"classes/OrderDetails.html":{},"classes/Users.html":{}}}],["order.id",{"_index":1028,"title":{},"body":{"classes/OrderRepository.html":{}}}],["order.save",{"_index":990,"title":{},"body":{"classes/OrderRepository.html":{}}}],["order.service_charges",{"_index":1007,"title":{},"body":{"classes/OrderRepository.html":{}}}],["order.tablenumber",{"_index":987,"title":{},"body":{"classes/OrderRepository.html":{}}}],["order.user",{"_index":988,"title":{},"body":{"classes/OrderRepository.html":{}}}],["ordercontroller",{"_index":871,"title":{"controllers/OrderController.html":{}},"body":{"controllers/OrderController.html":{},"modules/OrderModule.html":{},"coverage.html":{}}}],["orderdeatils",{"_index":1026,"title":{},"body":{"classes/OrderRepository.html":{}}}],["orderdeatils.dishid",{"_index":1029,"title":{},"body":{"classes/OrderRepository.html":{}}}],["orderdeatils.dishquantity",{"_index":1031,"title":{},"body":{"classes/OrderRepository.html":{}}}],["orderdeatils.orderid",{"_index":1027,"title":{},"body":{"classes/OrderRepository.html":{}}}],["orderdeatils.orders",{"_index":1032,"title":{},"body":{"classes/OrderRepository.html":{}}}],["orderdeatils.save",{"_index":1034,"title":{},"body":{"classes/OrderRepository.html":{}}}],["orderdetail",{"_index":992,"title":{},"body":{"classes/OrderRepository.html":{}}}],["orderdetail.dishid",{"_index":995,"title":{},"body":{"classes/OrderRepository.html":{}}}],["orderdetail.dishquantity",{"_index":997,"title":{},"body":{"classes/OrderRepository.html":{}}}],["orderdetail.orderid",{"_index":993,"title":{},"body":{"classes/OrderRepository.html":{}}}],["orderdetail.orders",{"_index":998,"title":{},"body":{"classes/OrderRepository.html":{}}}],["orderdetail.save",{"_index":999,"title":{},"body":{"classes/OrderRepository.html":{}}}],["orderdetails",{"_index":848,"title":{"classes/OrderDetails.html":{}},"body":{"classes/Order.html":{},"classes/OrderDetails.html":{},"modules/OrderModule.html":{},"classes/OrderRepository.html":{},"coverage.html":{}}}],["orderdetails.createquerybuilder().delete().from(orderdetails).where(\"orderid",{"_index":1037,"title":{},"body":{"classes/OrderRepository.html":{}}}],["orderdetails.findoneorfail(acc.id",{"_index":1021,"title":{},"body":{"classes/OrderRepository.html":{}}}],["orderdetails.id",{"_index":870,"title":{},"body":{"classes/Order.html":{}}}],["orderdto",{"_index":882,"title":{"classes/OrderDTO.html":{}},"body":{"controllers/OrderController.html":{},"classes/OrderDTO.html":{},"classes/OrderRepository.html":{},"injectables/OrderService.html":{},"coverage.html":{}}}],["orderdto.userid",{"_index":905,"title":{},"body":{"controllers/OrderController.html":{}}}],["orderid",{"_index":942,"title":{},"body":{"classes/OrderDetails.html":{},"classes/OrderRepository.html":{}}}],["ordermodule",{"_index":95,"title":{"modules/OrderModule.html":{}},"body":{"modules/AppModule.html":{},"modules/OrderModule.html":{},"modules.html":{},"overview.html":{}}}],["orderrepository",{"_index":955,"title":{"classes/OrderRepository.html":{}},"body":{"modules/OrderModule.html":{},"classes/OrderRepository.html":{},"injectables/OrderService.html":{},"coverage.html":{}}}],["orders",{"_index":943,"title":{},"body":{"classes/OrderDetails.html":{},"classes/Users.html":{}}}],["orders.id",{"_index":950,"title":{},"body":{"classes/OrderDetails.html":{},"classes/Users.html":{}}}],["orderservice",{"_index":898,"title":{"injectables/OrderService.html":{}},"body":{"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"coverage.html":{},"overview.html":{}}}],["orderservice,orderrepository",{"_index":960,"title":{},"body":{"modules/OrderModule.html":{}}}],["originalname",{"_index":698,"title":{},"body":{"classes/Helper.html":{}}}],["os",{"_index":660,"title":{},"body":{"classes/ExpenseType.html":{}}}],["out",{"_index":76,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/DishModule.html":{},"modules/ExpenseModule.html":{},"modules/InventoryModule.html":{},"modules/OrderModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["out.dto",{"_index":896,"title":{},"body":{"controllers/OrderController.html":{},"classes/OrderRepository.html":{},"injectables/OrderService.html":{}}}],["out.dto.ts",{"_index":249,"title":{},"body":{"classes/CheckOutDTO.html":{},"coverage.html":{}}}],["out.dto.ts:10",{"_index":259,"title":{},"body":{"classes/CheckOutDTO.html":{}}}],["out.dto.ts:13",{"_index":262,"title":{},"body":{"classes/CheckOutDTO.html":{}}}],["out.dto.ts:16",{"_index":261,"title":{},"body":{"classes/CheckOutDTO.html":{}}}],["out.dto.ts:19",{"_index":263,"title":{},"body":{"classes/CheckOutDTO.html":{}}}],["out.dto.ts:7",{"_index":258,"title":{},"body":{"classes/CheckOutDTO.html":{}}}],["overview",{"_index":1266,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":1137,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":353,"title":{},"body":{"controllers/DishController.html":{},"controllers/ExpenseController.html":{}}}],["parameters",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticatedGuard.html":{},"injectables/DishAlreadyExists.html":{},"controllers/DishController.html":{},"injectables/DishNameValidationPipe.html":{},"classes/DishRepository.html":{},"injectables/DishService.html":{},"controllers/ExpenseController.html":{},"classes/ExpenseRepository.html":{},"injectables/ExpenseService.html":{},"injectables/ExpenseValidationPipe.html":{},"classes/Helper.html":{},"controllers/InventoryController.html":{},"classes/InventoryRepository.html":{},"injectables/InventoryService.html":{},"guards/IsAdmin.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/OrderController.html":{},"classes/OrderRepository.html":{},"injectables/OrderService.html":{},"injectables/SessionSerializer.html":{},"classes/UserRepository.html":{},"injectables/UsersService.html":{},"guards/isStaff.html":{}}}],["parseintpipe",{"_index":355,"title":{},"body":{"controllers/DishController.html":{},"classes/DishDTO.html":{},"controllers/ExpenseController.html":{}}}],["passport",{"_index":836,"title":{},"body":{"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":190,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportmodule.register",{"_index":199,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportserializer",{"_index":1055,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["passportstrategy",{"_index":834,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["passportstrategy(strategy",{"_index":838,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["password",{"_index":211,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"classes/UserDTO.html":{},"classes/UserRepository.html":{},"classes/Users.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["patch",{"_index":357,"title":{},"body":{"controllers/DishController.html":{},"controllers/ExpenseController.html":{},"controllers/InventoryController.html":{},"controllers/OrderController.html":{}}}],["patch('/update",{"_index":587,"title":{},"body":{"controllers/ExpenseController.html":{},"controllers/InventoryController.html":{},"controllers/OrderController.html":{}}}],["patch('/update')@usepipes(expensevalidationpipe)@useguards(new",{"_index":564,"title":{},"body":{"controllers/ExpenseController.html":{}}}],["patch('/updatedish",{"_index":392,"title":{},"body":{"controllers/DishController.html":{}}}],["patch('/updatedish')@useguards(new",{"_index":346,"title":{},"body":{"controllers/DishController.html":{}}}],["path",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"classes/DishRepository.html":{},"injectables/DishService.html":{},"dependencies.html":{}}}],["paths",{"_index":405,"title":{},"body":{"controllers/DishController.html":{},"dependencies.html":{}}}],["payload",{"_index":1062,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["pipetransform",{"_index":312,"title":{},"body":{"injectables/DishAlreadyExists.html":{},"injectables/DishNameValidationPipe.html":{},"injectables/ExpenseValidationPipe.html":{}}}],["please",{"_index":1247,"title":{},"body":{"index.html":{}}}],["plugin",{"_index":1175,"title":{},"body":{"dependencies.html":{}}}],["png",{"_index":703,"title":{},"body":{"classes/Helper.html":{}}}],["port",{"_index":1283,"title":{},"body":{"miscellaneous/variables.html":{}}}],["post",{"_index":37,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/DishController.html":{},"controllers/ExpenseController.html":{},"controllers/InventoryController.html":{},"controllers/OrderController.html":{}}}],["post('/checkout",{"_index":911,"title":{},"body":{"controllers/OrderController.html":{}}}],["post('/checkout')@usepipes(validationpipe",{"_index":879,"title":{},"body":{"controllers/OrderController.html":{}}}],["post('/create",{"_index":579,"title":{},"body":{"controllers/ExpenseController.html":{},"controllers/InventoryController.html":{}}}],["post('/create')@usepipes(expensevalidationpipe)@useguards(new",{"_index":558,"title":{},"body":{"controllers/ExpenseController.html":{}}}],["post('/createdish",{"_index":381,"title":{},"body":{"controllers/DishController.html":{}}}],["post('/createorder",{"_index":883,"title":{},"body":{"controllers/OrderController.html":{}}}],["post('/getorders",{"_index":889,"title":{},"body":{"controllers/OrderController.html":{}}}],["post('/login",{"_index":56,"title":{},"body":{"controllers/AppController.html":{}}}],["post('/signin",{"_index":168,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/signin')@useguards(new",{"_index":148,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/signup",{"_index":144,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/upload",{"_index":399,"title":{},"body":{"controllers/DishController.html":{}}}],["post('/upload')@useinterceptors(undefined",{"_index":340,"title":{},"body":{"controllers/DishController.html":{}}}],["prefix",{"_index":135,"title":{},"body":{"controllers/AuthController.html":{},"controllers/DishController.html":{},"controllers/ExpenseController.html":{},"controllers/InventoryController.html":{},"controllers/OrderController.html":{}}}],["prettier",{"_index":1173,"title":{},"body":{"dependencies.html":{}}}],["price",{"_index":277,"title":{},"body":{"classes/Dish.html":{},"classes/DishDTO.html":{}}}],["primarygeneratedcolumn",{"_index":278,"title":{},"body":{"classes/Dish.html":{},"classes/Expense.html":{},"classes/ExpenseType.html":{},"classes/Inventory.html":{},"classes/Order.html":{},"classes/OrderDetails.html":{},"classes/Users.html":{}}}],["private",{"_index":216,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DishService.html":{},"injectables/ExpenseValidationPipe.html":{},"injectables/UsersService.html":{}}}],["production",{"_index":1229,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":1206,"title":{},"body":{"index.html":{}}}],["project",{"_index":1239,"title":{},"body":{"index.html":{}}}],["promise",{"_index":214,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"injectables/SessionSerializer.html":{},"injectables/UsersService.html":{}}}],["properties",{"_index":250,"title":{},"body":{"classes/CheckOutDTO.html":{},"classes/Dish.html":{},"classes/DishDTO.html":{},"classes/Expense.html":{},"classes/ExpenseDTO.html":{},"classes/ExpenseType.html":{},"classes/Inventory.html":{},"classes/InventoryDTO.html":{},"classes/Order.html":{},"classes/OrderDTO.html":{},"classes/OrderDetails.html":{},"classes/UserDTO.html":{},"classes/Users.html":{},"injectables/UsersService.html":{}}}],["provide",{"_index":125,"title":{},"body":{"modules/AppModule.html":{}}}],["providers",{"_index":100,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DishModule.html":{},"modules/ExpenseModule.html":{},"modules/InventoryModule.html":{},"modules/OrderModule.html":{},"modules/UsersModule.html":{}}}],["quantity",{"_index":797,"title":{},"body":{"classes/InventoryRepository.html":{}}}],["read",{"_index":1248,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":54,"title":{},"body":{"controllers/AppController.html":{},"injectables/UsersService.html":{}}}],["readstream",{"_index":362,"title":{},"body":{"controllers/DishController.html":{}}}],["reflect",{"_index":1186,"title":{},"body":{"dependencies.html":{}}}],["reload",{"_index":908,"title":{},"body":{"controllers/OrderController.html":{}}}],["repositories/dish",{"_index":422,"title":{},"body":{"modules/DishModule.html":{},"injectables/DishService.html":{}}}],["repository",{"_index":315,"title":{},"body":{"injectables/DishAlreadyExists.html":{},"modules/DishModule.html":{},"classes/DishRepository.html":{},"injectables/DishService.html":{},"modules/ExpenseModule.html":{},"classes/ExpenseRepository.html":{},"injectables/ExpenseService.html":{},"injectables/ExpenseValidationPipe.html":{},"modules/InventoryModule.html":{},"classes/InventoryRepository.html":{},"injectables/InventoryService.html":{},"modules/OrderModule.html":{},"classes/OrderRepository.html":{},"injectables/OrderService.html":{},"classes/UserRepository.html":{},"index.html":{}}}],["repository.ts",{"_index":447,"title":{},"body":{"classes/DishRepository.html":{},"classes/ExpenseRepository.html":{},"classes/InventoryRepository.html":{},"classes/OrderRepository.html":{},"coverage.html":{}}}],["repository.ts:10",{"_index":768,"title":{},"body":{"classes/InventoryRepository.html":{}}}],["repository.ts:11",{"_index":607,"title":{},"body":{"classes/ExpenseRepository.html":{}}}],["repository.ts:12",{"_index":450,"title":{},"body":{"classes/DishRepository.html":{}}}],["repository.ts:133",{"_index":964,"title":{},"body":{"classes/OrderRepository.html":{}}}],["repository.ts:141",{"_index":966,"title":{},"body":{"classes/OrderRepository.html":{}}}],["repository.ts:18",{"_index":962,"title":{},"body":{"classes/OrderRepository.html":{}}}],["repository.ts:21",{"_index":780,"title":{},"body":{"classes/InventoryRepository.html":{}}}],["repository.ts:22",{"_index":615,"title":{},"body":{"classes/ExpenseRepository.html":{},"classes/OrderRepository.html":{}}}],["repository.ts:23",{"_index":459,"title":{},"body":{"classes/DishRepository.html":{}}}],["repository.ts:26",{"_index":778,"title":{},"body":{"classes/InventoryRepository.html":{}}}],["repository.ts:27",{"_index":614,"title":{},"body":{"classes/ExpenseRepository.html":{}}}],["repository.ts:28",{"_index":460,"title":{},"body":{"classes/DishRepository.html":{}}}],["repository.ts:32",{"_index":453,"title":{},"body":{"classes/DishRepository.html":{}}}],["repository.ts:33",{"_index":775,"title":{},"body":{"classes/InventoryRepository.html":{}}}],["repository.ts:37",{"_index":456,"title":{},"body":{"classes/DishRepository.html":{}}}],["repository.ts:38",{"_index":613,"title":{},"body":{"classes/ExpenseRepository.html":{}}}],["repository.ts:42",{"_index":777,"title":{},"body":{"classes/InventoryRepository.html":{}}}],["repository.ts:48",{"_index":963,"title":{},"body":{"classes/OrderRepository.html":{}}}],["repository.ts:49",{"_index":608,"title":{},"body":{"classes/ExpenseRepository.html":{}}}],["repository.ts:51",{"_index":458,"title":{},"body":{"classes/DishRepository.html":{}}}],["repository.ts:54",{"_index":773,"title":{},"body":{"classes/InventoryRepository.html":{}}}],["repository.ts:55",{"_index":610,"title":{},"body":{"classes/ExpenseRepository.html":{}}}],["repository.ts:59",{"_index":451,"title":{},"body":{"classes/DishRepository.html":{}}}],["repository.ts:65",{"_index":770,"title":{},"body":{"classes/InventoryRepository.html":{}}}],["repository.ts:67",{"_index":612,"title":{},"body":{"classes/ExpenseRepository.html":{}}}],["repository.ts:69",{"_index":455,"title":{},"body":{"classes/DishRepository.html":{}}}],["repository.ts:70",{"_index":965,"title":{},"body":{"classes/OrderRepository.html":{}}}],["repository.ts:91",{"_index":968,"title":{},"body":{"classes/OrderRepository.html":{}}}],["repository.ts:98",{"_index":967,"title":{},"body":{"classes/OrderRepository.html":{}}}],["req",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/DishController.html":{},"classes/Helper.html":{},"controllers/OrderController.html":{}}}],["req,@res",{"_index":177,"title":{},"body":{"controllers/AuthController.html":{}}}],["req.session",{"_index":81,"title":{},"body":{"controllers/AppController.html":{}}}],["req.session.destroy(function",{"_index":71,"title":{},"body":{"controllers/AppController.html":{}}}],["req.session.destroy(function(err",{"_index":178,"title":{},"body":{"controllers/AuthController.html":{}}}],["req.user.id",{"_index":906,"title":{},"body":{"controllers/OrderController.html":{}}}],["req.user.name.touppercase",{"_index":64,"title":{},"body":{"controllers/AppController.html":{}}}],["req.user.username.touppercase",{"_index":173,"title":{},"body":{"controllers/AuthController.html":{}}}],["request",{"_index":38,"title":{},"body":{"controllers/AppController.html":{},"guards/AuthenticatedGuard.html":{},"guards/IsAdmin.html":{},"injectables/LocalAuthGuard.html":{},"guards/isStaff.html":{}}}],["request.isauthenticated",{"_index":245,"title":{},"body":{"guards/AuthenticatedGuard.html":{}}}],["require('better",{"_index":1277,"title":{},"body":{"miscellaneous/variables.html":{}}}],["res",{"_index":32,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/DishController.html":{},"controllers/OrderController.html":{}}}],["res,@param('id",{"_index":408,"title":{},"body":{"controllers/DishController.html":{}}}],["res.clearcookie('connect.sid",{"_index":80,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{}}}],["res.clearcookie(this.cookie",{"_index":179,"title":{},"body":{"controllers/AuthController.html":{}}}],["res.send('hot",{"_index":907,"title":{},"body":{"controllers/OrderController.html":{}}}],["res.send('user",{"_index":75,"title":{},"body":{"controllers/AppController.html":{}}}],["res.send(response",{"_index":182,"title":{},"body":{"controllers/AuthController.html":{}}}],["res.sendfile(file.path",{"_index":403,"title":{},"body":{"controllers/DishController.html":{}}}],["res.status(httpstatus.ok).send",{"_index":174,"title":{},"body":{"controllers/AuthController.html":{}}}],["reset",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DishModule.html":{},"modules/ExpenseModule.html":{},"modules/InventoryModule.html":{},"modules/OrderModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["response",{"_index":181,"title":{},"body":{"controllers/AuthController.html":{},"classes/DishRepository.html":{},"classes/ExpenseRepository.html":{},"classes/InventoryRepository.html":{},"classes/OrderRepository.html":{},"classes/UserRepository.html":{}}}],["respository",{"_index":198,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/UsersModule.html":{}}}],["respository.ts",{"_index":1071,"title":{},"body":{"classes/UserRepository.html":{},"coverage.html":{}}}],["respository.ts:11",{"_index":1073,"title":{},"body":{"classes/UserRepository.html":{}}}],["respository.ts:28",{"_index":1072,"title":{},"body":{"classes/UserRepository.html":{}}}],["rest",{"_index":222,"title":{},"body":{"injectables/AuthService.html":{}}}],["restoreinventorybydishes",{"_index":763,"title":{},"body":{"classes/InventoryRepository.html":{}}}],["restoreinventorybydishes(items",{"_index":771,"title":{},"body":{"classes/InventoryRepository.html":{}}}],["result",{"_index":497,"title":{},"body":{"classes/DishRepository.html":{},"classes/ExpenseRepository.html":{},"injectables/LocalAuthGuard.html":{},"classes/OrderRepository.html":{}}}],["result[0",{"_index":633,"title":{},"body":{"classes/ExpenseRepository.html":{}}}],["result[1",{"_index":631,"title":{},"body":{"classes/ExpenseRepository.html":{}}}],["results",{"_index":82,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticatedGuard.html":{},"classes/CheckOutDTO.html":{},"classes/Dish.html":{},"injectables/DishAlreadyExists.html":{},"controllers/DishController.html":{},"classes/DishDTO.html":{},"modules/DishModule.html":{},"injectables/DishNameValidationPipe.html":{},"classes/DishRepository.html":{},"injectables/DishService.html":{},"classes/Expense.html":{},"controllers/ExpenseController.html":{},"classes/ExpenseDTO.html":{},"modules/ExpenseModule.html":{},"classes/ExpenseRepository.html":{},"injectables/ExpenseService.html":{},"classes/ExpenseType.html":{},"injectables/ExpenseValidationPipe.html":{},"classes/Helper.html":{},"classes/Inventory.html":{},"controllers/InventoryController.html":{},"classes/InventoryDTO.html":{},"modules/InventoryModule.html":{},"classes/InventoryRepository.html":{},"injectables/InventoryService.html":{},"guards/IsAdmin.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"classes/OrderDTO.html":{},"classes/OrderDetails.html":{},"modules/OrderModule.html":{},"classes/OrderRepository.html":{},"injectables/OrderService.html":{},"injectables/SessionSerializer.html":{},"classes/UserDTO.html":{},"classes/UserRepository.html":{},"classes/Users.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"guards/isStaff.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retryattempts",{"_index":1292,"title":{},"body":{"miscellaneous/variables.html":{}}}],["return",{"_index":59,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticatedGuard.html":{},"injectables/DishAlreadyExists.html":{},"controllers/DishController.html":{},"injectables/DishNameValidationPipe.html":{},"classes/DishRepository.html":{},"injectables/DishService.html":{},"controllers/ExpenseController.html":{},"classes/ExpenseRepository.html":{},"injectables/ExpenseService.html":{},"injectables/ExpenseValidationPipe.html":{},"classes/Helper.html":{},"controllers/InventoryController.html":{},"classes/InventoryRepository.html":{},"injectables/InventoryService.html":{},"guards/IsAdmin.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/OrderController.html":{},"classes/OrderRepository.html":{},"injectables/OrderService.html":{},"classes/UserRepository.html":{},"injectables/UsersService.html":{},"guards/isStaff.html":{}}}],["returns",{"_index":25,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticatedGuard.html":{},"injectables/DishAlreadyExists.html":{},"controllers/DishController.html":{},"injectables/DishNameValidationPipe.html":{},"classes/DishRepository.html":{},"injectables/DishService.html":{},"controllers/ExpenseController.html":{},"classes/ExpenseRepository.html":{},"injectables/ExpenseService.html":{},"injectables/ExpenseValidationPipe.html":{},"classes/Helper.html":{},"controllers/InventoryController.html":{},"classes/InventoryRepository.html":{},"injectables/InventoryService.html":{},"guards/IsAdmin.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/OrderController.html":{},"classes/OrderRepository.html":{},"injectables/OrderService.html":{},"injectables/SessionSerializer.html":{},"classes/UserRepository.html":{},"injectables/UsersService.html":{},"guards/isStaff.html":{}}}],["rimraf",{"_index":1189,"title":{},"body":{"dependencies.html":{}}}],["root",{"_index":1285,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rootpath",{"_index":123,"title":{},"body":{"modules/AppModule.html":{}}}],["run",{"_index":1224,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":1191,"title":{},"body":{"dependencies.html":{}}}],["savedorder",{"_index":989,"title":{},"body":{"classes/OrderRepository.html":{}}}],["savedorder.id",{"_index":994,"title":{},"body":{"classes/OrderRepository.html":{}}}],["scalable",{"_index":1211,"title":{},"body":{"index.html":{}}}],["security",{"_index":1179,"title":{},"body":{"dependencies.html":{}}}],["serializeuser",{"_index":1057,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["serializeuser(user",{"_index":1064,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["server",{"_index":1212,"title":{},"body":{"index.html":{}}}],["servestaticmodule",{"_index":114,"title":{},"body":{"modules/AppModule.html":{}}}],["service_charges",{"_index":255,"title":{},"body":{"classes/CheckOutDTO.html":{},"classes/Order.html":{},"classes/OrderDTO.html":{},"classes/OrderRepository.html":{}}}],["services/auth.service",{"_index":192,"title":{},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{}}}],["services/dish.service",{"_index":373,"title":{},"body":{"controllers/DishController.html":{},"modules/DishModule.html":{}}}],["services/expense.service",{"_index":599,"title":{},"body":{"modules/ExpenseModule.html":{}}}],["services/inventory.service",{"_index":756,"title":{},"body":{"modules/InventoryModule.html":{}}}],["services/order.service",{"_index":958,"title":{},"body":{"modules/OrderModule.html":{}}}],["services/users.service",{"_index":1101,"title":{},"body":{"modules/UsersModule.html":{}}}],["session",{"_index":39,"title":{},"body":{"controllers/AppController.html":{},"modules/AuthModule.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["session\\\\dist\\\\moduleuploads",{"_index":715,"title":{},"body":{"classes/Helper.html":{}}}],["sessionserializer",{"_index":188,"title":{"injectables/SessionSerializer.html":{}},"body":{"modules/AuthModule.html":{},"injectables/SessionSerializer.html":{},"coverage.html":{},"overview.html":{}}}],["set({amount",{"_index":803,"title":{},"body":{"classes/InventoryRepository.html":{}}}],["side",{"_index":1213,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticatedGuard.html":{},"classes/CheckOutDTO.html":{},"classes/Dish.html":{},"injectables/DishAlreadyExists.html":{},"controllers/DishController.html":{},"classes/DishDTO.html":{},"modules/DishModule.html":{},"injectables/DishNameValidationPipe.html":{},"classes/DishRepository.html":{},"injectables/DishService.html":{},"classes/Expense.html":{},"controllers/ExpenseController.html":{},"classes/ExpenseDTO.html":{},"modules/ExpenseModule.html":{},"classes/ExpenseRepository.html":{},"injectables/ExpenseService.html":{},"classes/ExpenseType.html":{},"injectables/ExpenseValidationPipe.html":{},"classes/Helper.html":{},"classes/Inventory.html":{},"controllers/InventoryController.html":{},"classes/InventoryDTO.html":{},"modules/InventoryModule.html":{},"classes/InventoryRepository.html":{},"injectables/InventoryService.html":{},"guards/IsAdmin.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"classes/OrderDTO.html":{},"classes/OrderDetails.html":{},"modules/OrderModule.html":{},"classes/OrderRepository.html":{},"injectables/OrderService.html":{},"injectables/SessionSerializer.html":{},"classes/UserDTO.html":{},"classes/UserRepository.html":{},"classes/Users.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"index.html":{},"guards/isStaff.html":{}}}],["sponsors",{"_index":1242,"title":{},"body":{"index.html":{}}}],["sqlite3",{"_index":1160,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["sqlitestore",{"_index":1134,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1203,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../typeorm.config.ts",{"_index":1276,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../users.service.ts",{"_index":1274,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app.module.ts",{"_index":99,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":129,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":130,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/local.strategy.ts",{"_index":828,"title":{},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["src/auth/local.strategy.ts:12",{"_index":833,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/auth/local.strategy.ts:9",{"_index":831,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/auth/session.serializer.ts",{"_index":1054,"title":{},"body":{"injectables/SessionSerializer.html":{},"coverage.html":{}}}],["src/auth/session.serializer.ts:12",{"_index":1061,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["src/auth/session.serializer.ts:7",{"_index":1066,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["src/config/typeorm.config.ts",{"_index":1129,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/controllers/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/controllers/app.controller.ts:15",{"_index":29,"title":{},"body":{"controllers/AppController.html":{}}}],["src/controllers/app.controller.ts:22",{"_index":20,"title":{},"body":{"controllers/AppController.html":{}}}],["src/controllers/app.controller.ts:28",{"_index":35,"title":{},"body":{"controllers/AppController.html":{}}}],["src/controllers/auth.controller.ts",{"_index":134,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/controllers/auth.controller.ts:15",{"_index":145,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/controllers/auth.controller.ts:22",{"_index":149,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/controllers/auth.controller.ts:32",{"_index":141,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/controllers/auth.controller.ts:39",{"_index":150,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/controllers/dish.controller.ts",{"_index":323,"title":{},"body":{"controllers/DishController.html":{},"coverage.html":{}}}],["src/controllers/dish.controller.ts:25",{"_index":334,"title":{},"body":{"controllers/DishController.html":{}}}],["src/controllers/dish.controller.ts:33",{"_index":349,"title":{},"body":{"controllers/DishController.html":{}}}],["src/controllers/dish.controller.ts:39",{"_index":352,"title":{},"body":{"controllers/DishController.html":{}}}],["src/controllers/dish.controller.ts:46",{"_index":347,"title":{},"body":{"controllers/DishController.html":{}}}],["src/controllers/dish.controller.ts:54",{"_index":337,"title":{},"body":{"controllers/DishController.html":{}}}],["src/controllers/dish.controller.ts:64",{"_index":341,"title":{},"body":{"controllers/DishController.html":{}}}],["src/controllers/dish.controller.ts:74",{"_index":344,"title":{},"body":{"controllers/DishController.html":{}}}],["src/controllers/expense.controller.ts",{"_index":550,"title":{},"body":{"controllers/ExpenseController.html":{},"coverage.html":{}}}],["src/controllers/expense.controller.ts:17",{"_index":559,"title":{},"body":{"controllers/ExpenseController.html":{}}}],["src/controllers/expense.controller.ts:23",{"_index":571,"title":{},"body":{"controllers/ExpenseController.html":{}}}],["src/controllers/expense.controller.ts:29",{"_index":568,"title":{},"body":{"controllers/ExpenseController.html":{}}}],["src/controllers/expense.controller.ts:37",{"_index":565,"title":{},"body":{"controllers/ExpenseController.html":{}}}],["src/controllers/expense.controller.ts:44",{"_index":562,"title":{},"body":{"controllers/ExpenseController.html":{}}}],["src/controllers/inventory.controller.ts",{"_index":727,"title":{},"body":{"controllers/InventoryController.html":{},"coverage.html":{}}}],["src/controllers/inventory.controller.ts:10",{"_index":732,"title":{},"body":{"controllers/InventoryController.html":{}}}],["src/controllers/inventory.controller.ts:16",{"_index":734,"title":{},"body":{"controllers/InventoryController.html":{}}}],["src/controllers/inventory.controller.ts:22",{"_index":736,"title":{},"body":{"controllers/InventoryController.html":{}}}],["src/controllers/inventory.controller.ts:28",{"_index":739,"title":{},"body":{"controllers/InventoryController.html":{}}}],["src/controllers/order.controller.ts",{"_index":872,"title":{},"body":{"controllers/OrderController.html":{},"coverage.html":{}}}],["src/controllers/order.controller.ts:15",{"_index":884,"title":{},"body":{"controllers/OrderController.html":{}}}],["src/controllers/order.controller.ts:24",{"_index":880,"title":{},"body":{"controllers/OrderController.html":{}}}],["src/controllers/order.controller.ts:30",{"_index":894,"title":{},"body":{"controllers/OrderController.html":{}}}],["src/controllers/order.controller.ts:35",{"_index":890,"title":{},"body":{"controllers/OrderController.html":{}}}],["src/controllers/order.controller.ts:41",{"_index":892,"title":{},"body":{"controllers/OrderController.html":{}}}],["src/controllers/order.controller.ts:47",{"_index":887,"title":{},"body":{"controllers/OrderController.html":{}}}],["src/dto/check",{"_index":248,"title":{},"body":{"classes/CheckOutDTO.html":{},"controllers/OrderController.html":{},"classes/OrderRepository.html":{},"injectables/OrderService.html":{},"coverage.html":{}}}],["src/dto/dish",{"_index":313,"title":{},"body":{"injectables/DishAlreadyExists.html":{},"controllers/DishController.html":{},"classes/DishDTO.html":{},"injectables/DishNameValidationPipe.html":{},"coverage.html":{}}}],["src/dto/expense",{"_index":572,"title":{},"body":{"controllers/ExpenseController.html":{},"classes/ExpenseDTO.html":{},"classes/ExpenseRepository.html":{},"injectables/ExpenseService.html":{},"injectables/ExpenseValidationPipe.html":{},"coverage.html":{}}}],["src/dto/inventory.dto",{"_index":740,"title":{},"body":{"controllers/InventoryController.html":{},"classes/InventoryRepository.html":{},"injectables/InventoryService.html":{}}}],["src/dto/inventory.dto.ts",{"_index":746,"title":{},"body":{"classes/InventoryDTO.html":{},"coverage.html":{}}}],["src/dto/inventory.dto.ts:11",{"_index":747,"title":{},"body":{"classes/InventoryDTO.html":{}}}],["src/dto/inventory.dto.ts:14",{"_index":749,"title":{},"body":{"classes/InventoryDTO.html":{}}}],["src/dto/inventory.dto.ts:17",{"_index":752,"title":{},"body":{"classes/InventoryDTO.html":{}}}],["src/dto/inventory.dto.ts:6",{"_index":750,"title":{},"body":{"classes/InventoryDTO.html":{}}}],["src/dto/inventory.dto.ts:9",{"_index":751,"title":{},"body":{"classes/InventoryDTO.html":{}}}],["src/dto/order",{"_index":897,"title":{},"body":{"controllers/OrderController.html":{},"classes/OrderDTO.html":{},"classes/OrderRepository.html":{},"injectables/OrderService.html":{},"coverage.html":{}}}],["src/dto/user",{"_index":159,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"classes/UserDTO.html":{},"classes/UserRepository.html":{},"coverage.html":{}}}],["src/entities/dish.entity",{"_index":781,"title":{},"body":{"classes/InventoryRepository.html":{},"classes/OrderRepository.html":{}}}],["src/entities/dish.entity.ts",{"_index":269,"title":{},"body":{"classes/Dish.html":{},"coverage.html":{}}}],["src/entities/dish.entity.ts:12",{"_index":291,"title":{},"body":{"classes/Dish.html":{}}}],["src/entities/dish.entity.ts:15",{"_index":292,"title":{},"body":{"classes/Dish.html":{}}}],["src/entities/dish.entity.ts:18",{"_index":289,"title":{},"body":{"classes/Dish.html":{}}}],["src/entities/dish.entity.ts:21",{"_index":281,"title":{},"body":{"classes/Dish.html":{}}}],["src/entities/dish.entity.ts:24",{"_index":290,"title":{},"body":{"classes/Dish.html":{}}}],["src/entities/dish.entity.ts:28",{"_index":286,"title":{},"body":{"classes/Dish.html":{}}}],["src/entities/dish.entity.ts:9",{"_index":279,"title":{},"body":{"classes/Dish.html":{}}}],["src/entities/expense",{"_index":603,"title":{},"body":{"modules/ExpenseModule.html":{},"classes/ExpenseRepository.html":{},"classes/ExpenseType.html":{},"coverage.html":{}}}],["src/entities/expense.entity",{"_index":616,"title":{},"body":{"classes/ExpenseRepository.html":{}}}],["src/entities/expense.entity.ts",{"_index":519,"title":{},"body":{"classes/Expense.html":{},"coverage.html":{}}}],["src/entities/expense.entity.ts:10",{"_index":530,"title":{},"body":{"classes/Expense.html":{}}}],["src/entities/expense.entity.ts:13",{"_index":531,"title":{},"body":{"classes/Expense.html":{}}}],["src/entities/expense.entity.ts:16",{"_index":524,"title":{},"body":{"classes/Expense.html":{}}}],["src/entities/expense.entity.ts:20",{"_index":529,"title":{},"body":{"classes/Expense.html":{}}}],["src/entities/expense.entity.ts:23",{"_index":532,"title":{},"body":{"classes/Expense.html":{}}}],["src/entities/expense.entity.ts:27",{"_index":535,"title":{},"body":{"classes/Expense.html":{}}}],["src/entities/expense.entity.ts:30",{"_index":525,"title":{},"body":{"classes/Expense.html":{}}}],["src/entities/inventory.entity",{"_index":782,"title":{},"body":{"classes/InventoryRepository.html":{}}}],["src/entities/inventory.entity.ts",{"_index":716,"title":{},"body":{"classes/Inventory.html":{},"coverage.html":{}}}],["src/entities/inventory.entity.ts:11",{"_index":722,"title":{},"body":{"classes/Inventory.html":{}}}],["src/entities/inventory.entity.ts:14",{"_index":719,"title":{},"body":{"classes/Inventory.html":{}}}],["src/entities/inventory.entity.ts:17",{"_index":718,"title":{},"body":{"classes/Inventory.html":{}}}],["src/entities/inventory.entity.ts:20",{"_index":723,"title":{},"body":{"classes/Inventory.html":{}}}],["src/entities/inventory.entity.ts:23",{"_index":720,"title":{},"body":{"classes/Inventory.html":{}}}],["src/entities/inventory.entity.ts:8",{"_index":721,"title":{},"body":{"classes/Inventory.html":{}}}],["src/entities/order",{"_index":939,"title":{},"body":{"classes/OrderDetails.html":{},"modules/OrderModule.html":{},"classes/OrderRepository.html":{},"coverage.html":{}}}],["src/entities/order.entity",{"_index":969,"title":{},"body":{"classes/OrderRepository.html":{}}}],["src/entities/order.entity.ts",{"_index":843,"title":{},"body":{"classes/Order.html":{},"coverage.html":{}}}],["src/entities/order.entity.ts:11",{"_index":858,"title":{},"body":{"classes/Order.html":{}}}],["src/entities/order.entity.ts:14",{"_index":862,"title":{},"body":{"classes/Order.html":{}}}],["src/entities/order.entity.ts:17",{"_index":850,"title":{},"body":{"classes/Order.html":{}}}],["src/entities/order.entity.ts:20",{"_index":851,"title":{},"body":{"classes/Order.html":{}}}],["src/entities/order.entity.ts:24",{"_index":864,"title":{},"body":{"classes/Order.html":{}}}],["src/entities/order.entity.ts:28",{"_index":859,"title":{},"body":{"classes/Order.html":{}}}],["src/entities/order.entity.ts:31",{"_index":857,"title":{},"body":{"classes/Order.html":{}}}],["src/entities/order.entity.ts:34",{"_index":856,"title":{},"body":{"classes/Order.html":{}}}],["src/entities/order.entity.ts:37",{"_index":860,"title":{},"body":{"classes/Order.html":{}}}],["src/entities/order.entity.ts:40",{"_index":852,"title":{},"body":{"classes/Order.html":{}}}],["src/entities/order.entity.ts:44",{"_index":855,"title":{},"body":{"classes/Order.html":{}}}],["src/entities/order.entity.ts:47",{"_index":854,"title":{},"body":{"classes/Order.html":{}}}],["src/entities/user.entity",{"_index":971,"title":{},"body":{"classes/OrderRepository.html":{},"classes/UserRepository.html":{}}}],["src/entities/user.entity.ts",{"_index":1083,"title":{},"body":{"classes/Users.html":{},"coverage.html":{}}}],["src/entities/user.entity.ts:10",{"_index":1084,"title":{},"body":{"classes/Users.html":{}}}],["src/entities/user.entity.ts:13",{"_index":1092,"title":{},"body":{"classes/Users.html":{}}}],["src/entities/user.entity.ts:16",{"_index":1089,"title":{},"body":{"classes/Users.html":{}}}],["src/entities/user.entity.ts:20",{"_index":1091,"title":{},"body":{"classes/Users.html":{}}}],["src/entities/user.entity.ts:24",{"_index":1086,"title":{},"body":{"classes/Users.html":{}}}],["src/entities/user.entity.ts:28",{"_index":1087,"title":{},"body":{"classes/Users.html":{}}}],["src/extras/helper",{"_index":367,"title":{},"body":{"controllers/DishController.html":{}}}],["src/extras/helper.ts",{"_index":682,"title":{},"body":{"classes/Helper.html":{},"coverage.html":{}}}],["src/extras/helper.ts:24",{"_index":689,"title":{},"body":{"classes/Helper.html":{}}}],["src/extras/helper.ts:3",{"_index":687,"title":{},"body":{"classes/Helper.html":{}}}],["src/guards/authenticated.guard",{"_index":157,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ExpenseController.html":{},"controllers/OrderController.html":{}}}],["src/guards/authenticated.guard.ts",{"_index":231,"title":{},"body":{"guards/AuthenticatedGuard.html":{},"coverage.html":{}}}],["src/guards/authenticated.guard.ts:7",{"_index":235,"title":{},"body":{"guards/AuthenticatedGuard.html":{}}}],["src/guards/isadmin.guard",{"_index":577,"title":{},"body":{"controllers/ExpenseController.html":{}}}],["src/guards/isadmin.guard.ts",{"_index":816,"title":{},"body":{"guards/IsAdmin.html":{},"coverage.html":{}}}],["src/guards/isadmin.guard.ts:7",{"_index":817,"title":{},"body":{"guards/IsAdmin.html":{}}}],["src/guards/isstaff.guard.ts",{"_index":1127,"title":{},"body":{"coverage.html":{},"guards/isStaff.html":{}}}],["src/guards/isstaff.guard.ts:7",{"_index":1261,"title":{},"body":{"guards/isStaff.html":{}}}],["src/guards/local",{"_index":158,"title":{},"body":{"controllers/AuthController.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["src/main.ts",{"_index":1132,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/modules/auth.module.ts",{"_index":189,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/modules/dish.module.ts",{"_index":420,"title":{},"body":{"modules/DishModule.html":{}}}],["src/modules/expense.module.ts",{"_index":598,"title":{},"body":{"modules/ExpenseModule.html":{}}}],["src/modules/inventory.module.ts",{"_index":755,"title":{},"body":{"modules/InventoryModule.html":{}}}],["src/modules/order.module.ts",{"_index":954,"title":{},"body":{"modules/OrderModule.html":{}}}],["src/modules/users.module.ts",{"_index":1099,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/pipes/dish",{"_index":369,"title":{},"body":{"controllers/DishController.html":{},"injectables/DishNameValidationPipe.html":{},"coverage.html":{}}}],["src/pipes/dishalreadyexists.pipe",{"_index":371,"title":{},"body":{"controllers/DishController.html":{}}}],["src/pipes/dishalreadyexists.pipe.ts",{"_index":304,"title":{},"body":{"injectables/DishAlreadyExists.html":{},"coverage.html":{}}}],["src/pipes/dishalreadyexists.pipe.ts:7",{"_index":307,"title":{},"body":{"injectables/DishAlreadyExists.html":{}}}],["src/pipes/dishalreadyexists.pipe.ts:9",{"_index":310,"title":{},"body":{"injectables/DishAlreadyExists.html":{}}}],["src/pipes/expense",{"_index":574,"title":{},"body":{"controllers/ExpenseController.html":{},"injectables/ExpenseValidationPipe.html":{},"coverage.html":{}}}],["src/repositories/dish",{"_index":314,"title":{},"body":{"injectables/DishAlreadyExists.html":{},"classes/DishRepository.html":{},"coverage.html":{}}}],["src/repositories/expense",{"_index":602,"title":{},"body":{"modules/ExpenseModule.html":{},"classes/ExpenseRepository.html":{},"injectables/ExpenseService.html":{},"injectables/ExpenseValidationPipe.html":{},"coverage.html":{}}}],["src/repositories/inventory",{"_index":759,"title":{},"body":{"modules/InventoryModule.html":{},"classes/InventoryRepository.html":{},"injectables/InventoryService.html":{},"modules/OrderModule.html":{},"coverage.html":{}}}],["src/repositories/order",{"_index":956,"title":{},"body":{"modules/OrderModule.html":{},"classes/OrderRepository.html":{},"injectables/OrderService.html":{},"coverage.html":{}}}],["src/repositories/user",{"_index":197,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/UserRepository.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["src/services/auth.service",{"_index":162,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/services/auth.service.ts",{"_index":202,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/services/auth.service.ts:10",{"_index":212,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/services/auth.service.ts:23",{"_index":209,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/services/auth.service.ts:28",{"_index":208,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/services/auth.service.ts:7",{"_index":206,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/services/dish.service.ts",{"_index":500,"title":{},"body":{"injectables/DishService.html":{},"coverage.html":{}}}],["src/services/dish.service.ts:10",{"_index":502,"title":{},"body":{"injectables/DishService.html":{}}}],["src/services/dish.service.ts:13",{"_index":507,"title":{},"body":{"injectables/DishService.html":{}}}],["src/services/dish.service.ts:16",{"_index":508,"title":{},"body":{"injectables/DishService.html":{}}}],["src/services/dish.service.ts:19",{"_index":505,"title":{},"body":{"injectables/DishService.html":{}}}],["src/services/dish.service.ts:22",{"_index":506,"title":{},"body":{"injectables/DishService.html":{}}}],["src/services/dish.service.ts:26",{"_index":503,"title":{},"body":{"injectables/DishService.html":{}}}],["src/services/dish.service.ts:29",{"_index":504,"title":{},"body":{"injectables/DishService.html":{}}}],["src/services/dish.service.ts:7",{"_index":501,"title":{},"body":{"injectables/DishService.html":{}}}],["src/services/expense.service",{"_index":576,"title":{},"body":{"controllers/ExpenseController.html":{}}}],["src/services/expense.service.ts",{"_index":642,"title":{},"body":{"injectables/ExpenseService.html":{},"coverage.html":{}}}],["src/services/expense.service.ts:13",{"_index":649,"title":{},"body":{"injectables/ExpenseService.html":{}}}],["src/services/expense.service.ts:17",{"_index":648,"title":{},"body":{"injectables/ExpenseService.html":{}}}],["src/services/expense.service.ts:21",{"_index":647,"title":{},"body":{"injectables/ExpenseService.html":{}}}],["src/services/expense.service.ts:25",{"_index":646,"title":{},"body":{"injectables/ExpenseService.html":{}}}],["src/services/expense.service.ts:6",{"_index":644,"title":{},"body":{"injectables/ExpenseService.html":{}}}],["src/services/expense.service.ts:9",{"_index":645,"title":{},"body":{"injectables/ExpenseService.html":{}}}],["src/services/inventory.service",{"_index":742,"title":{},"body":{"controllers/InventoryController.html":{}}}],["src/services/inventory.service.ts",{"_index":811,"title":{},"body":{"injectables/InventoryService.html":{},"coverage.html":{}}}],["src/services/inventory.service.ts:6",{"_index":813,"title":{},"body":{"injectables/InventoryService.html":{}}}],["src/services/inventory.service.ts:9",{"_index":814,"title":{},"body":{"injectables/InventoryService.html":{}}}],["src/services/order.service",{"_index":899,"title":{},"body":{"controllers/OrderController.html":{}}}],["src/services/order.service.ts",{"_index":1039,"title":{},"body":{"injectables/OrderService.html":{},"coverage.html":{}}}],["src/services/order.service.ts:10",{"_index":1043,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/services/order.service.ts:15",{"_index":1042,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/services/order.service.ts:19",{"_index":1047,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/services/order.service.ts:23",{"_index":1045,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/services/order.service.ts:27",{"_index":1046,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/services/order.service.ts:31",{"_index":1044,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/services/order.service.ts:7",{"_index":1041,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/services/users.service",{"_index":191,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["src/services/users.service.ts",{"_index":1102,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/services/users.service.ts:16",{"_index":1113,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/services/users.service.ts:37",{"_index":1105,"title":{},"body":{"injectables/UsersService.html":{}}}],["ss",{"_index":547,"title":{},"body":{"classes/Expense.html":{},"classes/ExpenseRepository.html":{},"classes/OrderRepository.html":{}}}],["start",{"_index":1225,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":1228,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":1230,"title":{},"body":{"index.html":{}}}],["started",{"_index":1205,"title":{"index.html":{}},"body":{}}],["starter",{"_index":1218,"title":{},"body":{"index.html":{}}}],["statements",{"_index":1118,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":116,"title":{},"body":{"modules/AppModule.html":{},"classes/Helper.html":{},"dependencies.html":{}}}],["stay",{"_index":1251,"title":{},"body":{"index.html":{}}}],["storage",{"_index":376,"title":{},"body":{"controllers/DishController.html":{}}}],["store",{"_index":1162,"title":{},"body":{"dependencies.html":{}}}],["store')(session",{"_index":1278,"title":{},"body":{"miscellaneous/variables.html":{}}}],["strategy",{"_index":835,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["string",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/Dish.html":{},"classes/DishDTO.html":{},"classes/DishRepository.html":{},"injectables/DishService.html":{},"classes/Expense.html":{},"classes/ExpenseDTO.html":{},"classes/ExpenseType.html":{},"classes/Inventory.html":{},"classes/InventoryDTO.html":{},"injectables/LocalStrategy.html":{},"classes/Order.html":{},"classes/OrderDTO.html":{},"injectables/SessionSerializer.html":{},"classes/UserDTO.html":{},"classes/Users.html":{},"injectables/UsersService.html":{}}}],["such",{"_index":488,"title":{},"body":{"classes/DishRepository.html":{}}}],["super",{"_index":975,"title":{},"body":{"classes/OrderRepository.html":{}}}],["super(new",{"_index":839,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["super.canactivate(context",{"_index":824,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["super.login(request",{"_index":827,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["supertest",{"_index":1193,"title":{},"body":{"dependencies.html":{}}}],["support",{"_index":1243,"title":{},"body":{"index.html":{},"modules.html":{}}}],["supported",{"_index":711,"title":{},"body":{"classes/Helper.html":{}}}],["svg",{"_index":1264,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":1195,"title":{},"body":{"dependencies.html":{}}}],["synchronize",{"_index":1294,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tabish",{"_index":1110,"title":{},"body":{"injectables/UsersService.html":{}}}],["tabishpassword",{"_index":1112,"title":{},"body":{"injectables/UsersService.html":{}}}],["table",{"_index":1136,"title":{},"body":{"coverage.html":{}}}],["tablenumber",{"_index":849,"title":{},"body":{"classes/Order.html":{},"classes/OrderDTO.html":{},"classes/OrderRepository.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1135,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":1232,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":1235,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":1234,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1231,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":1241,"title":{},"body":{"index.html":{}}}],["this.authservice.createuser(userdto",{"_index":167,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.login(userdto",{"_index":171,"title":{},"body":{"controllers/AuthController.html":{},"injectables/LocalStrategy.html":{}}}],["this.dishrepository.createdish(dishdto",{"_index":511,"title":{},"body":{"injectables/DishService.html":{}}}],["this.dishrepository.deletedish(id",{"_index":516,"title":{},"body":{"injectables/DishService.html":{}}}],["this.dishrepository.getdishbyname(value.name",{"_index":317,"title":{},"body":{"injectables/DishAlreadyExists.html":{}}}],["this.dishrepository.getimage(id",{"_index":517,"title":{},"body":{"injectables/DishService.html":{}}}],["this.dishrepository.updatedish(dishdto",{"_index":514,"title":{},"body":{"injectables/DishService.html":{}}}],["this.dishrepository.updatedishimage(id,path",{"_index":515,"title":{},"body":{"injectables/DishService.html":{}}}],["this.dishrepository.viewalldishes",{"_index":512,"title":{},"body":{"injectables/DishService.html":{}}}],["this.dishrepository.viewdish(id",{"_index":513,"title":{},"body":{"injectables/DishService.html":{}}}],["this.dishservice.createdish(dishdto",{"_index":388,"title":{},"body":{"controllers/DishController.html":{}}}],["this.dishservice.deletedish(id",{"_index":398,"title":{},"body":{"controllers/DishController.html":{}}}],["this.dishservice.getimage(id",{"_index":409,"title":{},"body":{"controllers/DishController.html":{}}}],["this.dishservice.updatedish(dishdto",{"_index":395,"title":{},"body":{"controllers/DishController.html":{}}}],["this.dishservice.updatedishimage(req.body.dishid,paths",{"_index":406,"title":{},"body":{"controllers/DishController.html":{}}}],["this.dishservice.viewalldishes",{"_index":389,"title":{},"body":{"controllers/DishController.html":{}}}],["this.dishservice.viewdish(id",{"_index":391,"title":{},"body":{"controllers/DishController.html":{}}}],["this.expenserepository.createexpense(expensedto",{"_index":650,"title":{},"body":{"injectables/ExpenseService.html":{}}}],["this.expenserepository.deleteexpense(id",{"_index":654,"title":{},"body":{"injectables/ExpenseService.html":{}}}],["this.expenserepository.findexpensetype(value.category",{"_index":672,"title":{},"body":{"injectables/ExpenseValidationPipe.html":{}}}],["this.expenserepository.updateexpense(expensedto",{"_index":653,"title":{},"body":{"injectables/ExpenseService.html":{}}}],["this.expenserepository.viewallexpenses(expensedto",{"_index":652,"title":{},"body":{"injectables/ExpenseService.html":{}}}],["this.expenserepository.viewexpense(id",{"_index":651,"title":{},"body":{"injectables/ExpenseService.html":{}}}],["this.expenseservice.createexpense(expensedto",{"_index":582,"title":{},"body":{"controllers/ExpenseController.html":{}}}],["this.expenseservice.deleteexpense(id",{"_index":592,"title":{},"body":{"controllers/ExpenseController.html":{}}}],["this.expenseservice.updateexpense(expensedto",{"_index":589,"title":{},"body":{"controllers/ExpenseController.html":{}}}],["this.expenseservice.viewallexpenses(expensedto",{"_index":586,"title":{},"body":{"controllers/ExpenseController.html":{}}}],["this.expenseservice.viewexpense(id",{"_index":584,"title":{},"body":{"controllers/ExpenseController.html":{}}}],["this.findexpenseentity(id",{"_index":624,"title":{},"body":{"classes/ExpenseRepository.html":{}}}],["this.findinventory(id",{"_index":790,"title":{},"body":{"classes/InventoryRepository.html":{}}}],["this.inventoryrepository.restoreinventorybydishes(dishestoremove",{"_index":1018,"title":{},"body":{"classes/OrderRepository.html":{}}}],["this.inventoryrepository.updateinventory(inventorydto",{"_index":815,"title":{},"body":{"injectables/InventoryService.html":{}}}],["this.inventoryrepository.updateinventorybydishes(dishes",{"_index":979,"title":{},"body":{"classes/OrderRepository.html":{}}}],["this.inventoryservice.updateinventory(inventorydto",{"_index":745,"title":{},"body":{"controllers/InventoryController.html":{}}}],["this.orderrepository.checkout(checkoutdto",{"_index":1049,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.orderrepository.createorder(orderdto",{"_index":1048,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.orderrepository.deleteorder(orderdto",{"_index":1053,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.orderrepository.getallorders(orderdto",{"_index":1051,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.orderrepository.update(orderdto",{"_index":1052,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.orderrepository.viewactiveorders",{"_index":1050,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.orderservice.checkout(checkoutdto",{"_index":914,"title":{},"body":{"controllers/OrderController.html":{}}}],["this.orderservice.createorder(orderdto",{"_index":910,"title":{},"body":{"controllers/OrderController.html":{}}}],["this.orderservice.deleteorder(orderdto",{"_index":922,"title":{},"body":{"controllers/OrderController.html":{}}}],["this.orderservice.getallorders(orderdto",{"_index":917,"title":{},"body":{"controllers/OrderController.html":{}}}],["this.orderservice.update(orderdto",{"_index":919,"title":{},"body":{"controllers/OrderController.html":{}}}],["this.orderservice.viewactiveorders",{"_index":915,"title":{},"body":{"controllers/OrderController.html":{}}}],["this.userrepository.createuser(userdto",{"_index":228,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userrepository.login(userdto",{"_index":227,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.users.find(user",{"_index":1114,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userservice.findone(username",{"_index":218,"title":{},"body":{"injectables/AuthService.html":{}}}],["throw",{"_index":74,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"guards/AuthenticatedGuard.html":{},"injectables/DishAlreadyExists.html":{},"injectables/DishNameValidationPipe.html":{},"classes/DishRepository.html":{},"classes/ExpenseRepository.html":{},"injectables/ExpenseValidationPipe.html":{},"classes/InventoryRepository.html":{},"guards/IsAdmin.html":{},"injectables/LocalStrategy.html":{},"classes/UserRepository.html":{},"guards/isStaff.html":{}}}],["time",{"_index":1015,"title":{},"body":{"classes/OrderRepository.html":{}}}],["timestamp",{"_index":527,"title":{},"body":{"classes/Expense.html":{},"classes/Order.html":{}}}],["tinyint",{"_index":1095,"title":{},"body":{"classes/Users.html":{}}}],["tinyint'})@exclude",{"_index":1085,"title":{},"body":{"classes/Users.html":{}}}],["totaldishes",{"_index":480,"title":{},"body":{"classes/DishRepository.html":{}}}],["totalprice",{"_index":976,"title":{},"body":{"classes/OrderRepository.html":{}}}],["touch",{"_index":1252,"title":{},"body":{"index.html":{}}}],["transform",{"_index":264,"title":{},"body":{"classes/CheckOutDTO.html":{},"injectables/DishAlreadyExists.html":{},"injectables/DishNameValidationPipe.html":{},"classes/Expense.html":{},"injectables/ExpenseValidationPipe.html":{},"classes/Order.html":{},"classes/OrderDTO.html":{}}}],["transform((date1",{"_index":539,"title":{},"body":{"classes/Expense.html":{},"classes/Order.html":{}}}],["transform(date1",{"_index":938,"title":{},"body":{"classes/OrderDTO.html":{}}}],["transform(undefined",{"_index":929,"title":{},"body":{"classes/OrderDTO.html":{}}}],["transform(undefined)@column({type",{"_index":526,"title":{},"body":{"classes/Expense.html":{},"classes/Order.html":{}}}],["transform(value",{"_index":308,"title":{},"body":{"injectables/DishAlreadyExists.html":{},"injectables/DishNameValidationPipe.html":{},"injectables/ExpenseValidationPipe.html":{}}}],["transformer",{"_index":265,"title":{},"body":{"classes/CheckOutDTO.html":{},"classes/Expense.html":{},"classes/Order.html":{},"classes/OrderDTO.html":{},"classes/UserDTO.html":{},"classes/Users.html":{},"dependencies.html":{}}}],["true",{"_index":200,"title":{},"body":{"modules/AuthModule.html":{},"guards/IsAdmin.html":{},"classes/Order.html":{},"classes/OrderRepository.html":{},"injectables/UsersService.html":{},"guards/isStaff.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":492,"title":{},"body":{"classes/DishRepository.html":{},"classes/ExpenseRepository.html":{},"classes/InventoryRepository.html":{}}}],["tsconfig",{"_index":1198,"title":{},"body":{"dependencies.html":{}}}],["twitter",{"_index":1258,"title":{},"body":{"index.html":{}}}],["type",{"_index":146,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticatedGuard.html":{},"classes/CheckOutDTO.html":{},"classes/Dish.html":{},"injectables/DishAlreadyExists.html":{},"controllers/DishController.html":{},"classes/DishDTO.html":{},"injectables/DishNameValidationPipe.html":{},"classes/DishRepository.html":{},"injectables/DishService.html":{},"classes/Expense.html":{},"controllers/ExpenseController.html":{},"classes/ExpenseDTO.html":{},"classes/ExpenseRepository.html":{},"injectables/ExpenseService.html":{},"classes/ExpenseType.html":{},"injectables/ExpenseValidationPipe.html":{},"classes/Helper.html":{},"classes/Inventory.html":{},"controllers/InventoryController.html":{},"classes/InventoryDTO.html":{},"classes/InventoryRepository.html":{},"injectables/InventoryService.html":{},"guards/IsAdmin.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"classes/OrderDTO.html":{},"classes/OrderDetails.html":{},"classes/OrderRepository.html":{},"injectables/OrderService.html":{},"injectables/SessionSerializer.html":{},"classes/UserDTO.html":{},"classes/UserRepository.html":{},"classes/Users.html":{},"injectables/UsersService.html":{},"coverage.html":{},"guards/isStaff.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1272,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeorm",{"_index":297,"title":{},"body":{"classes/Dish.html":{},"classes/DishRepository.html":{},"classes/Expense.html":{},"classes/ExpenseDTO.html":{},"classes/ExpenseRepository.html":{},"classes/ExpenseType.html":{},"classes/Inventory.html":{},"classes/InventoryRepository.html":{},"classes/Order.html":{},"classes/OrderDetails.html":{},"classes/OrderRepository.html":{},"classes/UserRepository.html":{},"classes/Users.html":{},"dependencies.html":{}}}],["typeormconfig",{"_index":108,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeormmodule",{"_index":106,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DishModule.html":{},"modules/ExpenseModule.html":{},"modules/InventoryModule.html":{},"modules/OrderModule.html":{},"modules/UsersModule.html":{}}}],["typeormmodule.forfeature([dishrepository",{"_index":424,"title":{},"body":{"modules/DishModule.html":{}}}],["typeormmodule.forfeature([expenserepository",{"_index":604,"title":{},"body":{"modules/ExpenseModule.html":{}}}],["typeormmodule.forfeature([inventoryrepository",{"_index":760,"title":{},"body":{"modules/InventoryModule.html":{}}}],["typeormmodule.forfeature([orderrepository",{"_index":959,"title":{},"body":{"modules/OrderModule.html":{}}}],["typeormmodule.forfeature([userrepository",{"_index":201,"title":{},"body":{"modules/AuthModule.html":{},"modules/UsersModule.html":{}}}],["typeormmodule.forroot(typeormconfig),servestaticmodule.forroot",{"_index":122,"title":{},"body":{"modules/AppModule.html":{}}}],["typeormmoduleoptions",{"_index":1279,"title":{},"body":{"miscellaneous/variables.html":{}}}],["types",{"_index":1142,"title":{},"body":{"dependencies.html":{}}}],["types.entity",{"_index":538,"title":{},"body":{"classes/Expense.html":{},"modules/ExpenseModule.html":{},"classes/ExpenseRepository.html":{}}}],["types.entity.ts",{"_index":655,"title":{},"body":{"classes/ExpenseType.html":{},"coverage.html":{}}}],["types.entity.ts:12",{"_index":659,"title":{},"body":{"classes/ExpenseType.html":{}}}],["types.entity.ts:16",{"_index":657,"title":{},"body":{"classes/ExpenseType.html":{}}}],["types.entity.ts:9",{"_index":658,"title":{},"body":{"classes/ExpenseType.html":{}}}],["types/bcrypt",{"_index":1147,"title":{},"body":{"dependencies.html":{}}}],["types/express",{"_index":1149,"title":{},"body":{"dependencies.html":{}}}],["types/jest",{"_index":1152,"title":{},"body":{"dependencies.html":{}}}],["types/passport",{"_index":1154,"title":{},"body":{"dependencies.html":{}}}],["types/supertest",{"_index":1156,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":1217,"title":{},"body":{"index.html":{}}}],["ui",{"_index":1196,"title":{},"body":{"dependencies.html":{}}}],["unauthorizedexception",{"_index":215,"title":{},"body":{"injectables/AuthService.html":{},"guards/IsAdmin.html":{},"injectables/LocalStrategy.html":{},"classes/UserRepository.html":{},"guards/isStaff.html":{}}}],["unauthorizedexception('user",{"_index":841,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["unauthorizedexception('wrong",{"_index":224,"title":{},"body":{"injectables/AuthService.html":{},"classes/UserRepository.html":{}}}],["unauthorizedexception('you",{"_index":819,"title":{},"body":{"guards/IsAdmin.html":{},"guards/isStaff.html":{}}}],["undefined",{"_index":283,"title":{},"body":{"classes/Dish.html":{},"injectables/DishNameValidationPipe.html":{},"classes/Expense.html":{},"classes/ExpenseType.html":{},"classes/Inventory.html":{},"classes/Order.html":{},"classes/OrderDetails.html":{},"classes/Users.html":{}}}],["unique",{"_index":294,"title":{},"body":{"classes/Dish.html":{}}}],["unique(['name",{"_index":299,"title":{},"body":{"classes/Dish.html":{}}}],["uniquesuffix",{"_index":691,"title":{},"body":{"classes/Helper.html":{}}}],["uniquesuffix+\".\"+fileextension",{"_index":701,"title":{},"body":{"classes/Helper.html":{}}}],["unit",{"_index":717,"title":{},"body":{"classes/Inventory.html":{},"classes/InventoryDTO.html":{},"classes/InventoryRepository.html":{},"index.html":{}}}],["unknown",{"_index":30,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticatedGuard.html":{},"injectables/DishAlreadyExists.html":{},"controllers/DishController.html":{},"injectables/DishNameValidationPipe.html":{},"classes/DishRepository.html":{},"injectables/DishService.html":{},"controllers/ExpenseController.html":{},"classes/ExpenseRepository.html":{},"injectables/ExpenseService.html":{},"injectables/ExpenseValidationPipe.html":{},"controllers/InventoryController.html":{},"classes/InventoryRepository.html":{},"injectables/InventoryService.html":{},"guards/IsAdmin.html":{},"injectables/LocalAuthGuard.html":{},"controllers/OrderController.html":{},"classes/OrderRepository.html":{},"injectables/OrderService.html":{},"classes/UserRepository.html":{},"injectables/UsersService.html":{},"guards/isStaff.html":{}}}],["update",{"_index":321,"title":{},"body":{"injectables/DishAlreadyExists.html":{},"controllers/OrderController.html":{},"classes/OrderRepository.html":{},"injectables/OrderService.html":{}}}],["update(@body",{"_index":918,"title":{},"body":{"controllers/OrderController.html":{}}}],["update(inventory",{"_index":802,"title":{},"body":{"classes/InventoryRepository.html":{}}}],["update(orderdto",{"_index":891,"title":{},"body":{"controllers/OrderController.html":{},"classes/OrderRepository.html":{},"injectables/OrderService.html":{}}}],["updated",{"_index":1035,"title":{},"body":{"classes/OrderRepository.html":{}}}],["updatedat",{"_index":523,"title":{},"body":{"classes/Expense.html":{}}}],["updatedish",{"_index":328,"title":{},"body":{"controllers/DishController.html":{},"classes/DishRepository.html":{},"injectables/DishService.html":{}}}],["updatedish(@body",{"_index":393,"title":{},"body":{"controllers/DishController.html":{}}}],["updatedish(dishdto",{"_index":345,"title":{},"body":{"controllers/DishController.html":{},"classes/DishRepository.html":{},"injectables/DishService.html":{}}}],["updatedishimage",{"_index":449,"title":{},"body":{"classes/DishRepository.html":{},"injectables/DishService.html":{}}}],["updatedishimage(id",{"_index":457,"title":{},"body":{"classes/DishRepository.html":{},"injectables/DishService.html":{}}}],["updateexpense",{"_index":553,"title":{},"body":{"controllers/ExpenseController.html":{},"classes/ExpenseRepository.html":{},"injectables/ExpenseService.html":{}}}],["updateexpense(@body",{"_index":588,"title":{},"body":{"controllers/ExpenseController.html":{}}}],["updateexpense(expensedto",{"_index":563,"title":{},"body":{"controllers/ExpenseController.html":{},"classes/ExpenseRepository.html":{},"injectables/ExpenseService.html":{}}}],["updateinventory",{"_index":731,"title":{},"body":{"controllers/InventoryController.html":{},"classes/InventoryRepository.html":{},"injectables/InventoryService.html":{}}}],["updateinventory(@body",{"_index":744,"title":{},"body":{"controllers/InventoryController.html":{}}}],["updateinventory(inventorydto",{"_index":737,"title":{},"body":{"controllers/InventoryController.html":{},"classes/InventoryRepository.html":{},"injectables/InventoryService.html":{}}}],["updateinventorybydishes",{"_index":764,"title":{},"body":{"classes/InventoryRepository.html":{}}}],["updateinventorybydishes(items",{"_index":776,"title":{},"body":{"classes/InventoryRepository.html":{}}}],["uploadedfile",{"_index":358,"title":{},"body":{"controllers/DishController.html":{}}}],["useclass",{"_index":126,"title":{},"body":{"modules/AppModule.html":{}}}],["useguards",{"_index":40,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/DishController.html":{},"controllers/ExpenseController.html":{},"controllers/OrderController.html":{}}}],["useguards(authenticatedguard",{"_index":55,"title":{},"body":{"controllers/AppController.html":{},"controllers/ExpenseController.html":{},"controllers/OrderController.html":{}}}],["useguards(authenticatedguard)@post('/login')@useguards(localauthguard",{"_index":28,"title":{},"body":{"controllers/AppController.html":{}}}],["useguards(localauthguard",{"_index":57,"title":{},"body":{"controllers/AppController.html":{}}}],["useguards(new",{"_index":66,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/DishController.html":{},"controllers/ExpenseController.html":{}}}],["useinterceptors",{"_index":154,"title":{},"body":{"controllers/AuthController.html":{},"controllers/DishController.html":{},"controllers/ExpenseController.html":{},"controllers/OrderController.html":{}}}],["useinterceptors(classserializerinterceptor",{"_index":164,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ExpenseController.html":{},"controllers/OrderController.html":{}}}],["useinterceptors(fileinterceptor('file",{"_index":400,"title":{},"body":{"controllers/DishController.html":{}}}],["useinterceptors(fileinterceptor('image",{"_index":375,"title":{},"body":{"controllers/DishController.html":{}}}],["usepipes",{"_index":354,"title":{},"body":{"controllers/DishController.html":{},"classes/DishDTO.html":{},"controllers/ExpenseController.html":{},"controllers/OrderController.html":{}}}],["usepipes(dishalreadyexists",{"_index":382,"title":{},"body":{"controllers/DishController.html":{}}}],["usepipes(expensevalidationpipe",{"_index":580,"title":{},"body":{"controllers/ExpenseController.html":{}}}],["usepipes(validationpipe",{"_index":912,"title":{},"body":{"controllers/OrderController.html":{}}}],["user",{"_index":217,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"classes/Order.html":{},"classes/OrderRepository.html":{},"injectables/SessionSerializer.html":{},"classes/UserRepository.html":{},"injectables/UsersService.html":{},"miscellaneous/typealiases.html":{}}}],["user.entity",{"_index":868,"title":{},"body":{"classes/Order.html":{}}}],["user.id",{"_index":869,"title":{},"body":{"classes/Order.html":{},"classes/OrderRepository.html":{}}}],["user.isadmin",{"_index":1078,"title":{},"body":{"classes/UserRepository.html":{}}}],["user.isstaff",{"_index":1079,"title":{},"body":{"classes/UserRepository.html":{}}}],["user.password",{"_index":220,"title":{},"body":{"injectables/AuthService.html":{},"classes/UserRepository.html":{}}}],["user.save",{"_index":1082,"title":{},"body":{"classes/UserRepository.html":{}}}],["user.username",{"_index":1080,"title":{},"body":{"classes/UserRepository.html":{},"injectables/UsersService.html":{}}}],["userdto",{"_index":143,"title":{"classes/UserDTO.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"classes/UserDTO.html":{},"classes/UserRepository.html":{},"coverage.html":{}}}],["userid",{"_index":925,"title":{},"body":{"classes/OrderDTO.html":{},"classes/OrderRepository.html":{}}}],["username",{"_index":213,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"classes/UserDTO.html":{},"classes/UserRepository.html":{},"classes/Users.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["username,password",{"_index":221,"title":{},"body":{"injectables/AuthService.html":{},"classes/UserRepository.html":{}}}],["userrepository",{"_index":196,"title":{"classes/UserRepository.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/UserRepository.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["users",{"_index":863,"title":{"classes/Users.html":{}},"body":{"classes/Order.html":{},"classes/OrderRepository.html":{},"classes/UserRepository.html":{},"classes/Users.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["users.findone({where",{"_index":1076,"title":{},"body":{"classes/UserRepository.html":{}}}],["userservice",{"_index":207,"title":{},"body":{"injectables/AuthService.html":{}}}],["usersmodule",{"_index":96,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":186,"title":{"injectables/UsersService.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["valid",{"_index":438,"title":{},"body":{"injectables/DishNameValidationPipe.html":{}}}],["validate",{"_index":829,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["validate(username",{"_index":832,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["validateuser",{"_index":203,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(username",{"_index":210,"title":{},"body":{"injectables/AuthService.html":{}}}],["validation.pipe",{"_index":370,"title":{},"body":{"controllers/DishController.html":{},"controllers/ExpenseController.html":{}}}],["validation.pipe.ts",{"_index":431,"title":{},"body":{"injectables/DishNameValidationPipe.html":{},"injectables/ExpenseValidationPipe.html":{},"coverage.html":{}}}],["validation.pipe.ts:8",{"_index":432,"title":{},"body":{"injectables/DishNameValidationPipe.html":{},"injectables/ExpenseValidationPipe.html":{}}}],["validation.pipe.ts:9",{"_index":665,"title":{},"body":{"injectables/ExpenseValidationPipe.html":{}}}],["validationpipe",{"_index":895,"title":{},"body":{"controllers/OrderController.html":{}}}],["validator",{"_index":267,"title":{},"body":{"classes/CheckOutDTO.html":{},"classes/InventoryDTO.html":{},"classes/OrderDTO.html":{},"classes/UserDTO.html":{},"dependencies.html":{}}}],["value",{"_index":311,"title":{},"body":{"injectables/DishAlreadyExists.html":{},"injectables/DishNameValidationPipe.html":{},"injectables/ExpenseValidationPipe.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["value.category",{"_index":669,"title":{},"body":{"injectables/ExpenseValidationPipe.html":{}}}],["value.category.touppercase",{"_index":670,"title":{},"body":{"injectables/ExpenseValidationPipe.html":{}}}],["value.categoryid",{"_index":673,"title":{},"body":{"injectables/ExpenseValidationPipe.html":{}}}],["var",{"_index":404,"title":{},"body":{"controllers/DishController.html":{},"classes/DishRepository.html":{},"classes/ExpenseRepository.html":{},"classes/OrderRepository.html":{},"classes/UserRepository.html":{}}}],["variable",{"_index":1130,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1275,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["viewactiveorders",{"_index":877,"title":{},"body":{"controllers/OrderController.html":{},"classes/OrderRepository.html":{},"injectables/OrderService.html":{}}}],["viewalldishes",{"_index":329,"title":{},"body":{"controllers/DishController.html":{},"classes/DishRepository.html":{},"injectables/DishService.html":{}}}],["viewallexpenses",{"_index":554,"title":{},"body":{"controllers/ExpenseController.html":{},"classes/ExpenseRepository.html":{},"injectables/ExpenseService.html":{}}}],["viewallexpenses(@body",{"_index":585,"title":{},"body":{"controllers/ExpenseController.html":{}}}],["viewallexpenses(expensedto",{"_index":566,"title":{},"body":{"controllers/ExpenseController.html":{},"classes/ExpenseRepository.html":{},"injectables/ExpenseService.html":{}}}],["viewallitems",{"_index":765,"title":{},"body":{"classes/InventoryRepository.html":{}}}],["viewdish",{"_index":330,"title":{},"body":{"controllers/DishController.html":{},"classes/DishRepository.html":{},"injectables/DishService.html":{}}}],["viewdish(@param('id",{"_index":390,"title":{},"body":{"controllers/DishController.html":{}}}],["viewdish(id",{"_index":350,"title":{},"body":{"controllers/DishController.html":{},"classes/DishRepository.html":{},"injectables/DishService.html":{}}}],["viewexpense",{"_index":555,"title":{},"body":{"controllers/ExpenseController.html":{},"classes/ExpenseRepository.html":{},"injectables/ExpenseService.html":{}}}],["viewexpense(@param('id",{"_index":583,"title":{},"body":{"controllers/ExpenseController.html":{}}}],["viewexpense(id",{"_index":569,"title":{},"body":{"controllers/ExpenseController.html":{},"classes/ExpenseRepository.html":{},"injectables/ExpenseService.html":{}}}],["viewitem",{"_index":766,"title":{},"body":{"classes/InventoryRepository.html":{}}}],["viewitem(id",{"_index":779,"title":{},"body":{"classes/InventoryRepository.html":{}}}],["void",{"_index":690,"title":{},"body":{"classes/Helper.html":{},"injectables/SessionSerializer.html":{}}}],["watch",{"_index":1226,"title":{},"body":{"index.html":{}}}],["website",{"_index":1256,"title":{},"body":{"index.html":{}}}],["welcome",{"_index":62,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{}}}],["where(\"id",{"_index":806,"title":{},"body":{"classes/InventoryRepository.html":{}}}],["worker_threads",{"_index":973,"title":{},"body":{"classes/OrderRepository.html":{}}}],["working",{"_index":909,"title":{},"body":{"controllers/OrderController.html":{}}}],["world",{"_index":132,"title":{},"body":{"injectables/AppService.html":{}}}],["you'd",{"_index":1246,"title":{},"body":{"index.html":{}}}],["yyyy",{"_index":542,"title":{},"body":{"classes/Expense.html":{},"classes/Order.html":{},"classes/OrderDTO.html":{},"classes/OrderRepository.html":{}}}],["zoom",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DishModule.html":{},"modules/ExpenseModule.html":{},"modules/InventoryModule.html":{},"modules/OrderModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Controllers/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('protected')@UseGuards(new AuthenticatedGuard())@UseGuards(new isStaff())\n                \n            \n\n            \n                \n                    Defined in src/Controllers/app.controller.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AuthenticatedGuard)@Post('/login')@UseGuards(LocalAuthGuard)\n                \n            \n\n            \n                \n                    Defined in src/Controllers/app.controller.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        logout\n                        \n                    \n                \n            \n            \n                \n                    \n                    logout(req, res)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/logout')@UseGuards(new AuthenticatedGuard())\n                \n            \n\n            \n                \n                    Defined in src/Controllers/app.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Req, Request, Res, Session, UseGuards } from '@nestjs/common';\nimport { AppService } from '../app.service';\nimport { AuthenticatedGuard } from '../Guards/authenticated.guard';\nimport { IsAdmin } from '../Guards/isAdmin.guard';\nimport { isStaff } from '../Guards/isStaff.guard';\nimport { LocalAuthGuard } from '../Guards/local-auth.guard';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @UseGuards(AuthenticatedGuard)\n  @Post('/login')\n  @UseGuards(LocalAuthGuard)\n  async login(@Request() req){\n    return {message: `Logged In..!!! Welcome Home ${req.user.name.toUpperCase()}...!!!!`};\n  }\n\n  @Get('protected')\n  @UseGuards(new AuthenticatedGuard)\n  @UseGuards(new isStaff)\n  getHello(@Request() req): string {\n    return `Hey ${req.user.name.toUpperCase()}...!!!`\n  }\n\n  @Get('/logout')\n  @UseGuards(new AuthenticatedGuard)\n  async logout(@Req() req, @Res() res)\n  {\n    req.session.destroy(function (err) {\n      if(err) throw err;\n      res.send('USER LOGGED OUT...!!!') //Inside a callback… bulletproof!\n     });\n    res.clearCookie('connect.sid');\n    return req.session;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nDishModule\n\nDishModule\n\nAppModule -->\n\nDishModule->AppModule\n\n\n\n\n\nExpenseModule\n\nExpenseModule\n\nAppModule -->\n\nExpenseModule->AppModule\n\n\n\n\n\nInventoryModule\n\nInventoryModule\n\nAppModule -->\n\nInventoryModule->AppModule\n\n\n\n\n\nOrderModule\n\nOrderModule\n\nAppModule -->\n\nOrderModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            DishModule\n                        \n                        \n                            ExpenseModule\n                        \n                        \n                            InventoryModule\n                        \n                        \n                            OrderModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { ClassSerializerInterceptor, Module } from '@nestjs/common';\nimport { AppController } from './Controllers/app.controller';\nimport { AppService } from './app.service';\nimport { UsersModule } from './modules/users.module';\nimport { AuthModule } from './modules/auth.module';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { typeormConfig } from './config/TypeOrm.config';\nimport { DishModule } from './modules/dish.module';\nimport { OrderModule } from './modules/order.module';\nimport { InventoryModule } from './modules/inventory.module';\nimport { ExpenseModule } from './modules/expense.module';\nimport { ServeStaticModule } from '@nestjs/serve-static';\nimport { join } from 'path';\nimport { APP_INTERCEPTOR } from '@nestjs/core';\n\n@Module({\n  imports: [UsersModule, AuthModule,DishModule, TypeOrmModule.forRoot(typeormConfig),ServeStaticModule.forRoot({\n    rootPath: join(__dirname),\n  }), OrderModule, InventoryModule, ExpenseModule],\n  controllers: [AppController],\n  providers: [AppService,  {provide: APP_INTERCEPTOR, useClass: ClassSerializerInterceptor}],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Controllers/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkuser\n                            \n                            \n                                    Async\n                                createUser\n                            \n                            \n                                    Async\n                                LogIn\n                            \n                            \n                                    Async\n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        checkuser\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkuser(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/check')@UseGuards(new AuthenticatedGuard())\n                \n            \n\n            \n                \n                    Defined in src/Controllers/auth.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    createUser(userDto: UserDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/signup')\n                \n            \n\n            \n                \n                    Defined in src/Controllers/auth.controller.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userDto\n                                    \n                                                UserDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        LogIn\n                        \n                    \n                \n            \n            \n                \n                    \n                    LogIn(userDTO: UserDTO, req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/signin')@UseGuards(new LocalAuthGuard())\n                \n            \n\n            \n                \n                    Defined in src/Controllers/auth.controller.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userDTO\n                                    \n                                                UserDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        logout\n                        \n                    \n                \n            \n            \n                \n                    \n                    logout(req, res)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/logout')@UseGuards(new AuthenticatedGuard())\n                \n            \n\n            \n                \n                    Defined in src/Controllers/auth.controller.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, ClassSerializerInterceptor, Controller, Get, HttpCode, HttpStatus, Post, Req, Res, UseGuards, UseInterceptors } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { AuthenticatedGuard } from 'src/Guards/authenticated.guard';\nimport { LocalAuthGuard } from 'src/Guards/local-auth.guard';\nimport { UserDTO } from 'src/DTO/User-DTO';\nimport { AuthService } from 'src/Services/auth.service';\n\n@Controller('auth')\n@UseInterceptors(ClassSerializerInterceptor)\nexport class AuthController \n{\n    constructor(private authService: AuthService){}\n\n    @Post('/signup')\n    async createUser(@Body() userDto: UserDTO)\n    {\n        return await this.authService.createUser(userDto);\n    }\n\n    @Post('/signin')\n    @UseGuards(new LocalAuthGuard(UserDTO))\n    async LogIn(@Body() userDTO: UserDTO, @Req() req)\n    {\n        // await this.authService.LogIn(userDTO);\n        // return 'LOGGGED IN '+req.user.username.toUpperCase()\n        //res.status(HttpStatus.OK).send( await this.authService.LogIn(userDTO));\n        return await this.authService.LogIn(userDTO);\n    }\n\n    @Get('/check')\n    @UseGuards(new AuthenticatedGuard)\n    async checkuser(@Req() req)\n    {\n        return 'WELCOME '+req.user.username.toUpperCase()+' !!!';\n    }\n\n    @Get('/logout')\n    @UseGuards(new AuthenticatedGuard)\n    async logout(@Req() req,@Res() res)\n    {\n        req.session.destroy(function(err)\n        {\n            //res.clearCookie(this.cookie, { path: '/' });\n            //res.clearCookie('connect.sid');\n            const response = { response: 'You Have Been Logged Out..!!'};\n            res.send(response);\n        })\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nUsersService\n\nUsersService\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUsersService->AuthModule\n\n\n\nAuthModule -->\n\nUsersService->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nSessionSerializer\n\nSessionSerializer\n\nAuthModule -->\n\nSessionSerializer->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            LocalStrategy\n                        \n                        \n                            SessionSerializer\n                        \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PassportModule } from '@nestjs/passport';\nimport { UsersService } from 'src/Services/users.service';\nimport { AuthService } from '../Services/auth.service';\nimport { LocalStrategy } from '../auth/local.strategy';\nimport { SessionSerializer } from '../auth/session.serializer';\nimport { AuthController } from '../Controllers/auth.controller';\nimport { UserRepository } from 'src/Repositories/User-Respository';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\n@Module({\n  imports: [UsersService, PassportModule.register({ session: true }), TypeOrmModule.forFeature([UserRepository])],\n  providers: [AuthService, UsersService, LocalStrategy, SessionSerializer, UserRepository],\n  controllers: [AuthController],\n})\nexport class AuthModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Services/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createUser\n                            \n                            \n                                    Async\n                                LogIn\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UsersService, userRepository: UserRepository)\n                    \n                \n                        \n                            \n                                Defined in src/Services/auth.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        UserRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    createUser(userDTO: UserDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/Services/auth.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userDTO\n                                    \n                                                UserDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        LogIn\n                        \n                    \n                \n            \n            \n                \n                    \n                    LogIn(userDTO: UserDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/Services/auth.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userDTO\n                                    \n                                                UserDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validateUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUser(username: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/Services/auth.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { UserDTO } from 'src/DTO/User-DTO';\nimport { UserRepository } from 'src/Repositories/User-Respository';\nimport { UsersService } from 'src/Services/users.service';\n\n@Injectable()\nexport class AuthService {\n    constructor(private userService: UsersService, private userRepository: UserRepository){}\n\n    async validateUser(username: string, password: string) : Promise\n    {\n        const user = await this.userService.findone(username);\n        if(user && user.password === password)\n        {\n            const {username,password, ...rest }= user;\n            return rest;\n        }\n        else \n        {\n            throw new UnauthorizedException('Wrong Credentials..!!!');\n        }\n    }\n    async LogIn(userDTO: UserDTO)\n    {\n       // console.log(userDTO);\n       return await this.userRepository.LogIn(userDTO);\n    }\n    async createUser(userDTO: UserDTO)\n    {\n        return await this.userRepository.createUser(userDTO);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthenticatedGuard.html":{"url":"guards/AuthenticatedGuard.html","title":"guard - AuthenticatedGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthenticatedGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/Guards/authenticated.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                    \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/Guards/authenticated.guard.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { BadRequestException, CanActivate, ExecutionContext, Injectable } from \"@nestjs/common\";\n\n \n@Injectable()\nexport class AuthenticatedGuard implements CanActivate\n{\n    async canActivate(context: ExecutionContext)\n    {\n        const request = context.switchToHttp().getRequest();\n        if(request.user===undefined)\n        {\n            throw new BadRequestException('You need to log in first...!!!');\n        }\n        return request.isAuthenticated()\n    }\n}\n        \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CheckOutDTO.html":{"url":"classes/CheckOutDTO.html","title":"class - CheckOutDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CheckOutDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/DTO/Check-Out.DTO.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                BillId\n                            \n                            \n                                BillPayed\n                            \n                            \n                                custom_charges\n                            \n                            \n                                discount\n                            \n                            \n                                service_charges\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        BillId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumberString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/DTO/Check-Out.DTO.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        BillPayed\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumberString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/DTO/Check-Out.DTO.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        custom_charges\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/DTO/Check-Out.DTO.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        discount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/DTO/Check-Out.DTO.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        service_charges\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/DTO/Check-Out.DTO.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Transform } from \"class-transformer\";\nimport { isInt, IsNumber,  IsNumberString } from \"class-validator\";\n\nexport class CheckOutDTO\n{\n    @IsNumberString()\n    BillId: number;\n\n    @IsNumberString()\n    BillPayed: number;\n\n    @IsNumber()\n    discount: number;\n\n    @IsNumber()\n    custom_charges: number;\n\n    @IsNumber()\n    service_charges: number;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Dish.html":{"url":"classes/Dish.html","title":"class - Dish","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Dish\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Entities/Dish.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                ImagePath\n                            \n                            \n                                inventory\n                            \n                            \n                                InventoryFactor\n                            \n                            \n                                InventoryItem\n                            \n                            \n                                name\n                            \n                            \n                                price\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Entities/Dish.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ImagePath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Entities/Dish.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        inventory\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, undefined, {onDelete: 'CASCADE'})@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Entities/Dish.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        InventoryFactor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'double'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Entities/Dish.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        InventoryItem\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Entities/Dish.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Entities/Dish.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Entities/Dish.entity.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BaseEntity, Entity, PrimaryGeneratedColumn, Column, Double, Unique, ManyToOne, JoinColumn } from \"typeorm\";\nimport { Inventory } from \"./Inventory.entity\";\n\n@Entity()\n@Unique(['name'])\nexport class Dish extends BaseEntity {\n\n    @PrimaryGeneratedColumn()\n    id: number\n\n    @Column()\n    name: string\n\n    @Column()\n    price: number\n\n    @Column({type: \"double\"})\n    InventoryFactor: number\n\n    @Column()\n    ImagePath: string\n\n    @Column()\n    InventoryItem: number\n\n    @ManyToOne(type => Inventory, inventory => inventory.id, {onDelete: 'CASCADE'})\n    @JoinColumn()\n    inventory: number\n\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DishAlreadyExists.html":{"url":"injectables/DishAlreadyExists.html","title":"injectable - DishAlreadyExists","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DishAlreadyExists\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Pipes/DishAlreadyExists.pipe.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dishRepository: DishRepository)\n                    \n                \n                        \n                            \n                                Defined in src/Pipes/DishAlreadyExists.pipe.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dishRepository\n                                                  \n                                                        \n                                                                        DishRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        transform\n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(value: DishDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/Pipes/DishAlreadyExists.pipe.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                DishDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable, PipeTransform } from \"@nestjs/common\";\nimport { DishDTO } from \"src/DTO/Dish-DTO\";\nimport { DishRepository } from \"src/Repositories/Dish-Repository\";\n\n@Injectable()\nexport class DishAlreadyExists implements PipeTransform\n{   constructor(private dishRepository: DishRepository){}\n\n    async transform(value: DishDTO)\n    {\nif(await this.dishRepository.GetDishByName(value.name)) throw new BadRequestException('This Dish Already Exists,Please Update It...!!')\n        return value;\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DishController.html":{"url":"controllers/DishController.html","title":"controller - DishController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DishController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Controllers/dish.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                dish\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                CreateDish\n                            \n                            \n                                    Async\n                                DeleteDish\n                            \n                            \n                                    Async\n                                FileUpload\n                            \n                            \n                                    Async\n                                GetImage\n                            \n                            \n                                    Async\n                                UpdateDish\n                            \n                            \n                                    Async\n                                ViewAllDishes\n                            \n                            \n                                    Async\n                                ViewDish\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        CreateDish\n                        \n                    \n                \n            \n            \n                \n                    \n                    CreateDish(dishDTO: DishDTO, file: Express.Multer.File)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(new IsAdmin())@UseInterceptors(undefined)@Post('/createdish')@UsePipes(DishAlreadyExists)\n                \n            \n\n            \n                \n                    Defined in src/Controllers/dish.controller.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dishDTO\n                                    \n                                                DishDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    file\n                                    \n                                            Express.Multer.File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        DeleteDish\n                        \n                    \n                \n            \n            \n                \n                    \n                    DeleteDish(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:id')@UseGuards(new IsAdmin())\n                \n            \n\n            \n                \n                    Defined in src/Controllers/dish.controller.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        FileUpload\n                        \n                    \n                \n            \n            \n                \n                    \n                    FileUpload(file: Express.Multer.File, res, req, dishid: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/upload')@UseInterceptors(undefined)\n                \n            \n\n            \n                \n                    Defined in src/Controllers/dish.controller.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                            Express.Multer.File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dishid\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        GetImage\n                        \n                    \n                \n            \n            \n                \n                    \n                    GetImage(res, id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/image/:id')\n                \n            \n\n            \n                \n                    Defined in src/Controllers/dish.controller.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        UpdateDish\n                        \n                    \n                \n            \n            \n                \n                    \n                    UpdateDish(dishDTO: DishDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('/UpdateDish')@UseGuards(new IsAdmin())\n                \n            \n\n            \n                \n                    Defined in src/Controllers/dish.controller.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dishDTO\n                                    \n                                                DishDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        ViewAllDishes\n                        \n                    \n                \n            \n            \n                \n                    \n                    ViewAllDishes()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/ViewAllDishes')\n                \n            \n\n            \n                \n                    Defined in src/Controllers/dish.controller.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        ViewDish\n                        \n                    \n                \n            \n            \n                \n                    \n                    ViewDish(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/ViewDish/:id')\n                \n            \n\n            \n                \n                    Defined in src/Controllers/dish.controller.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, UseGuards, Post, Body, Get, Param, UsePipes, ParseIntPipe, Delete, Patch, Res, UseInterceptors, UploadedFile, Req } from '@nestjs/common';\nimport { FileInterceptor } from '@nestjs/platform-express';\nimport { ReadStream } from 'fs';\nimport { diskStorage } from 'multer';\nimport { DishDTO } from 'src/DTO/Dish-DTO';\nimport { Helper } from 'src/extras/helper';\nimport { DishNameValidationPipe } from 'src/Pipes/Dish-Validation.pipe';\nimport { DishAlreadyExists } from 'src/Pipes/DishAlreadyExists.pipe';\nimport { AuthenticatedGuard } from '../Guards/authenticated.guard';\nimport { IsAdmin } from '../Guards/isAdmin.guard';\nimport { DishService } from '../Services/dish.service';\n\n@Controller('dish')\n@UseGuards(new AuthenticatedGuard())\nexport class DishController {\n    constructor(private dishService: DishService) { }\n\n    @UseGuards(new IsAdmin())\n    @UseInterceptors(FileInterceptor('image',\n    {storage: diskStorage({\n    destination: Helper.destinationPath,\n    filename: Helper.customFileName})}))\n    @Post('/createdish')\n    @UsePipes(DishAlreadyExists)\n    async CreateDish(@Body() dishDTO: DishDTO,@UploadedFile() file: Express.Multer.File) \n    {\n        console.log(file)\n        dishDTO.imagepath = file.path;\n        return await this.dishService.CreateDish(dishDTO);\n    }\n\n    @Get('/ViewAllDishes')\n    async ViewAllDishes() \n    {\n        return await this.dishService.ViewAllDishes();\n    }\n\n    @Get('/ViewDish/:id')\n    async ViewDish(@Param('id', ParseIntPipe) id: number) \n    {\n        return await this.dishService.ViewDish(id);\n    }\n\n    @Patch('/UpdateDish')\n    @UseGuards(new IsAdmin())\n    async UpdateDish(@Body() dishDTO: DishDTO) \n    {\n        console.log(dishDTO)\n        return await this.dishService.UpdateDish(dishDTO);\n    }\n\n    @Delete('/:id')\n    @UseGuards(new IsAdmin())\n    async DeleteDish(@Param('id', ParseIntPipe) id: number) \n    {\n        return await this.dishService.DeleteDish(id);\n    }\n\n    @Post('/upload')\n    @UseInterceptors(FileInterceptor('file',\n    {storage: diskStorage({\n    destination: Helper.destinationPath,\n    filename: Helper.customFileName})}))\n    async FileUpload(@UploadedFile() file: Express.Multer.File ,@Res() res, @Req() req, @Req() dishid: number)\n    {   \n        console.log(req.body.dishid);\n        res.sendFile(file.path);\n        var paths = file.path;\n        return await this.dishService.UpdateDishImage(req.body.dishid,paths);\n        \n    }\n\n    @Get('/image/:id')\n    async GetImage(@Res() res,@Param('id', ParseIntPipe) id: number)\n    {\n        const file : any = await this.dishService.GetImage(id);\n        return file.pipe(res);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DishDTO.html":{"url":"classes/DishDTO.html","title":"class - DishDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DishDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/DTO/Dish-DTO.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                imagepath\n                            \n                            \n                                InventoryFactor\n                            \n                            \n                                InventoryItem\n                            \n                            \n                                name\n                            \n                            \n                                price\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/DTO/Dish-DTO.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        imagepath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/DTO/Dish-DTO.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        InventoryFactor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/DTO/Dish-DTO.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        InventoryItem\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/DTO/Dish-DTO.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/DTO/Dish-DTO.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/DTO/Dish-DTO.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ParseIntPipe, UsePipes } from \"@nestjs/common\";\n\nexport class DishDTO {\n    id: number;\n    name: string;\n    price: number;\n    InventoryFactor: number;\n    InventoryItem: number;\n    imagepath: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DishModule.html":{"url":"modules/DishModule.html","title":"module - DishModule","body":"\n                   \n\n\n\n\n    Modules\n    DishModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_DishModule\n\n\n\ncluster_DishModule_providers\n\n\n\n\nDishService\n\nDishService\n\n\n\nDishModule\n\nDishModule\n\nDishModule -->\n\nDishService->DishModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/dish.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            DishService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            DishController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { DishController } from '../Controllers/dish.controller';\nimport { DishService } from '../Services/dish.service'\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { DishRepository } from '../Repositories/Dish-Repository';\nimport { MulterModule } from '@nestjs/platform-express';\n@Module({\n  imports: [TypeOrmModule.forFeature([DishRepository]),\n  MulterModule.register(\n    {dest: __dirname+'uploads',\n    limits: {fileSize: 5000000}}\n    )],\n  controllers: [DishController],\n  providers: [DishService]\n})\nexport class DishModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DishNameValidationPipe.html":{"url":"injectables/DishNameValidationPipe.html","title":"injectable - DishNameValidationPipe","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DishNameValidationPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Pipes/Dish-Validation.pipe.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        transform\n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(value: DishDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/Pipes/Dish-Validation.pipe.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                DishDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable, PipeTransform } from \"@nestjs/common\";\nimport { DishDTO } from \"src/DTO/Dish-DTO\";\n\n@Injectable()\nexport class DishNameValidationPipe implements PipeTransform\n{ \n\n    async transform(value: DishDTO)\n    {   console.log(value)\n        if(!value.id === undefined) \n        {\n        if(isNaN(value.id)) throw new BadRequestException('Please Enter Valid Id..!!!');\n        }\n        if(!value.name===undefined)\n        {\n        if(value.name.length>30) throw new BadRequestException('Name of Dish is too LONG...!!!');\n        }\n        if(!value.price===undefined)\n        {\n        if(value.price>6000) throw new BadRequestException('Price is too High...!!!');\n        }\n        return value;  \n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DishRepository.html":{"url":"classes/DishRepository.html","title":"class - DishRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DishRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Repositories/Dish-Repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Repository\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                CreateDish\n                            \n                            \n                                    Async\n                                DeleteDish\n                            \n                            \n                                    Async\n                                GetDishByName\n                            \n                            \n                                    Async\n                                GetImage\n                            \n                            \n                                    Async\n                                UpdateDish\n                            \n                            \n                                    Async\n                                UpdateDishImage\n                            \n                            \n                                    Async\n                                ViewAllDishes\n                            \n                            \n                                    Async\n                                ViewDish\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        CreateDish\n                        \n                    \n                \n            \n            \n                \n                    \n                    CreateDish(dishDTO: DishDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/Repositories/Dish-Repository.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dishDTO\n                                    \n                                                DishDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        DeleteDish\n                        \n                    \n                \n            \n            \n                \n                    \n                    DeleteDish(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/Repositories/Dish-Repository.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        GetDishByName\n                        \n                    \n                \n            \n            \n                \n                    \n                    GetDishByName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/Repositories/Dish-Repository.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        GetImage\n                        \n                    \n                \n            \n            \n                \n                    \n                    GetImage(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/Repositories/Dish-Repository.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        UpdateDish\n                        \n                    \n                \n            \n            \n                \n                    \n                    UpdateDish(dishDTO: DishDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/Repositories/Dish-Repository.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dishDTO\n                                    \n                                                DishDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        UpdateDishImage\n                        \n                    \n                \n            \n            \n                \n                    \n                    UpdateDishImage(id: number, path: string)\n                \n            \n\n\n            \n                \n                    Defined in src/Repositories/Dish-Repository.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        ViewAllDishes\n                        \n                    \n                \n            \n            \n                \n                    \n                    ViewAllDishes()\n                \n            \n\n\n            \n                \n                    Defined in src/Repositories/Dish-Repository.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        ViewDish\n                        \n                    \n                \n            \n            \n                \n                    \n                    ViewDish(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/Repositories/Dish-Repository.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EntityRepository, Repository } from \"typeorm\";\nimport { Dish } from \"../Entities/Dish.entity\";\nimport { DishDTO } from \"../DTO/Dish-DTO\";\nimport { NotFoundException } from \"@nestjs/common\";\nimport { createReadStream, fsync } from \"fs\";\nimport { join } from \"path\";\n\n\n@EntityRepository(Dish)\nexport class DishRepository extends Repository\n{\n    async CreateDish(dishDTO: DishDTO) \n    {\n        const dish = new Dish();\n        dish.name = dishDTO.name;\n        dish.price = dishDTO.price;\n        dish.InventoryFactor = dishDTO.InventoryFactor;\n        dish.ImagePath = dishDTO.imagepath;\n        dish.InventoryItem = dishDTO.InventoryItem;\n        return await dish.save();\n    }\n\n    async ViewAllDishes() {\n        const dishes = await Dish.findAndCount();\n        const response = {TotalDishes: dishes[1], Dishes: dishes[0]}\n        return {response};\n    }\n    async ViewDish(id: number) {\n         return await Dish.findOneOrFail({where: {id}});\n\n    }\n    async GetDishByName(name: string)\n    {\n        return await Dish.findOne({where: {name}});   \n    }\n\n    async UpdateDish(dishDTO: DishDTO) \n    {\n        console.log(dishDTO)\n        const {id} = dishDTO;\n        const dish = await Dish.findOne({id})\n        if(dish===undefined) throw new NotFoundException('No such dish exists..!!!');\n        console.log(dishDTO);\n        dish.name = dishDTO.name;\n        dish.price = dishDTO.price;\n        dish.InventoryFactor = dishDTO.InventoryFactor;\n        dish.InventoryItem = dishDTO.InventoryItem;\n        return await dish.save();\n    }\n\n    async UpdateDishImage(id: number, path: string)\n    {\n        var dish = await Dish.findOneOrFail(id);\n        console.log(path)\n        dish.ImagePath = path;\n        return await dish.save();\n    }\n\n    async DeleteDish(id: number) {\n        try{\n            return await Dish.delete(id);\n        }\n        catch(err)\n        {\n            throw new NotFoundException('This Dish Does not Exist...!!!');\n        }\n    }\n    \n    async GetImage(id: number)\n    {\n        try{\n        const result =  await Dish.findOneOrFail({where: {id}});\n        console.log(result);\n        return createReadStream(result.ImagePath);\n        }\n        catch(err)\n        {\n            throw new NotFoundException();\n        }\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DishService.html":{"url":"injectables/DishService.html","title":"injectable - DishService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DishService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Services/dish.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                CreateDish\n                            \n                            \n                                    Async\n                                DeleteDish\n                            \n                            \n                                    Async\n                                GetImage\n                            \n                            \n                                    Async\n                                UpdateDish\n                            \n                            \n                                    Async\n                                UpdateDishImage\n                            \n                            \n                                    Async\n                                ViewAllDishes\n                            \n                            \n                                    Async\n                                ViewDish\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dishRepository: DishRepository)\n                    \n                \n                        \n                            \n                                Defined in src/Services/dish.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dishRepository\n                                                  \n                                                        \n                                                                        DishRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        CreateDish\n                        \n                    \n                \n            \n            \n                \n                    \n                    CreateDish(dishDTO: DishDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/Services/dish.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dishDTO\n                                    \n                                                DishDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        DeleteDish\n                        \n                    \n                \n            \n            \n                \n                    \n                    DeleteDish(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/Services/dish.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        GetImage\n                        \n                    \n                \n            \n            \n                \n                    \n                    GetImage(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/Services/dish.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        UpdateDish\n                        \n                    \n                \n            \n            \n                \n                    \n                    UpdateDish(dishDTO: DishDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/Services/dish.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dishDTO\n                                    \n                                                DishDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        UpdateDishImage\n                        \n                    \n                \n            \n            \n                \n                    \n                    UpdateDishImage(id: number, path: string)\n                \n            \n\n\n            \n                \n                    Defined in src/Services/dish.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        ViewAllDishes\n                        \n                    \n                \n            \n            \n                \n                    \n                    ViewAllDishes()\n                \n            \n\n\n            \n                \n                    Defined in src/Services/dish.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        ViewDish\n                        \n                    \n                \n            \n            \n                \n                    \n                    ViewDish(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/Services/dish.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { DishRepository } from '../Repositories/Dish-Repository';\nimport { DishDTO } from '../DTO/Dish-DTO';\nimport { InjectRepository } from '@nestjs/typeorm';\n\n@Injectable()\nexport class DishService {\n    constructor(@InjectRepository(DishRepository) private dishRepository: DishRepository) { }\n\n    async CreateDish(dishDTO: DishDTO) {\n        return await this.dishRepository.CreateDish(dishDTO);\n    }\n    async ViewAllDishes() {\n        return await this.dishRepository.ViewAllDishes();\n    }\n    async ViewDish(id: number) {\n        return await this.dishRepository.ViewDish(id);\n    }\n    async UpdateDish(dishDTO: DishDTO) {\n        return await this.dishRepository.UpdateDish(dishDTO);\n    }\n    async UpdateDishImage(id: number, path: string)\n    {\n        return await this.dishRepository.UpdateDishImage(id,path);\n    }\n    async DeleteDish(id: number) {\n        return await this.dishRepository.DeleteDish(id);\n    }\n    async GetImage(id: number)\n    {\n        return await this.dishRepository.GetImage(id);\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Expense.html":{"url":"classes/Expense.html","title":"class - Expense","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Expense\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Entities/Expense.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                amount\n                            \n                            \n                                category\n                            \n                            \n                                CreatedAt\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                type\n                            \n                            \n                                UpdatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Double\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'double'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Entities/Expense.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, undefined, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Entities/Expense.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CreatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Transform(undefined)@Column({type: 'timestamp', default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Entities/Expense.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Entities/Expense.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Entities/Expense.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Entities/Expense.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UpdatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Transform(undefined)@Column({type: 'timestamp', default: '2021-01-01'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Entities/Expense.entity.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Transform } from \"class-transformer\";\nimport * as moment from \"moment\";\nimport { BaseEntity, Column, Double, Entity, JoinColumn, ManyToOne, PrimaryGeneratedColumn } from \"typeorm\";\nimport { ExpenseType } from \"./Expense-Types.entity\";\n\n@Entity()\nexport class Expense extends BaseEntity\n{\n    @PrimaryGeneratedColumn()\n    id: number;\n\n    @Column()\n    name: string;\n\n    @Column({type: \"double\"})\n    amount: Double;\n\n    @Transform((date1) => moment(date1.value).format('DD-MM-yyyy hh:mm:ss A'))\n    @Column({type: \"timestamp\", default: moment().format('YYYY-MM-DD hh-mm-ss')})\n    CreatedAt: string;\n\n    @Column()\n    type: string; \n\n    @Transform((date1) => moment(date1.value).format('DD-MM-yyyy hh:mm:ss A'))\n    @Column({type: \"timestamp\", default: '2021-01-01'})\n    UpdatedAt: string;\n\n    @ManyToOne(type => ExpenseType, category => category.id, {onDelete: 'CASCADE'})\n    category: number;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ExpenseController.html":{"url":"controllers/ExpenseController.html","title":"controller - ExpenseController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ExpenseController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Controllers/expense.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                expense\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                CreateExpense\n                            \n                            \n                                    Async\n                                DeleteExpense\n                            \n                            \n                                    Async\n                                UpdateExpense\n                            \n                            \n                                    Async\n                                ViewAllExpenses\n                            \n                            \n                                    Async\n                                ViewExpense\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        CreateExpense\n                        \n                    \n                \n            \n            \n                \n                    \n                    CreateExpense(expenseDTO: ExpenseDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/create')@UsePipes(ExpenseValidationPipe)@UseGuards(new IsAdmin())\n                \n            \n\n            \n                \n                    Defined in src/Controllers/expense.controller.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    expenseDTO\n                                    \n                                                ExpenseDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        DeleteExpense\n                        \n                    \n                \n            \n            \n                \n                    \n                    DeleteExpense(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/delete/:id')@UseGuards(new IsAdmin())\n                \n            \n\n            \n                \n                    Defined in src/Controllers/expense.controller.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        UpdateExpense\n                        \n                    \n                \n            \n            \n                \n                    \n                    UpdateExpense(expenseDTO: ExpenseDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('/update')@UsePipes(ExpenseValidationPipe)@UseGuards(new IsAdmin())\n                \n            \n\n            \n                \n                    Defined in src/Controllers/expense.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    expenseDTO\n                                    \n                                                ExpenseDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        ViewAllExpenses\n                        \n                    \n                \n            \n            \n                \n                    \n                    ViewAllExpenses(expenseDTO: ExpenseDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/viewbydate')\n                \n            \n\n            \n                \n                    Defined in src/Controllers/expense.controller.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    expenseDTO\n                                    \n                                                ExpenseDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        ViewExpense\n                        \n                    \n                \n            \n            \n                \n                    \n                    ViewExpense(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/view/:id')\n                \n            \n\n            \n                \n                    Defined in src/Controllers/expense.controller.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, ClassSerializerInterceptor, Controller, Delete, Get, Param, ParseIntPipe, Patch, Post, UseGuards, UseInterceptors, UsePipes } from '@nestjs/common';\nimport { AuthenticatedGuard } from 'src/Guards/authenticated.guard';\nimport { ExpenseDTO } from 'src/DTO/Expense-DTO';\nimport { ExpenseValidationPipe } from 'src/Pipes/Expense-Validation.pipe';\nimport { ExpenseService } from 'src/Services/expense.service';\nimport { IsAdmin } from 'src/Guards/isAdmin.guard';\n\n@Controller('expense')\n@UseGuards(AuthenticatedGuard)\n///@UseInterceptors(ClassSerializerInterceptor)\nexport class ExpenseController {\n    constructor(private expenseService: ExpenseService){}\n\n    @Post('/create')\n    @UsePipes(ExpenseValidationPipe)\n    @UseGuards(new IsAdmin())\n    async CreateExpense(@Body() expenseDTO: ExpenseDTO)\n    {\n        return await this.expenseService.CreateExpense(expenseDTO);\n    }\n\n    @Get('/view/:id')\n    async ViewExpense(@Param('id', ParseIntPipe) id: number)\n    {\n        return await this.expenseService.ViewExpense(id);\n    }\n\n    @Get('/viewbydate')\n    async ViewAllExpenses(@Body() expenseDTO: ExpenseDTO)\n    {\n        return await this.expenseService.ViewAllExpenses(expenseDTO);\n    }\n\n    @Patch('/update')\n    @UsePipes(ExpenseValidationPipe)\n    @UseGuards(new IsAdmin())\n    async UpdateExpense(@Body() expenseDTO: ExpenseDTO)\n    {\n        return await this.expenseService.UpdateExpense(expenseDTO);\n    }\n\n    @Delete('/delete/:id')\n    @UseGuards(new IsAdmin())\n    async DeleteExpense(@Param() id: number)\n    {\n        return await this.expenseService.DeleteExpense(id);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ExpenseDTO.html":{"url":"classes/ExpenseDTO.html","title":"class - ExpenseDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ExpenseDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/DTO/Expense-DTO.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                amount\n                            \n                            \n                                category\n                            \n                            \n                                categoryid\n                            \n                            \n                                date\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Double\n\n                    \n                \n                    \n                        \n                                Defined in src/DTO/Expense-DTO.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/DTO/Expense-DTO.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        categoryid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/DTO/Expense-DTO.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/DTO/Expense-DTO.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/DTO/Expense-DTO.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/DTO/Expense-DTO.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Double } from \"typeorm\";\n\nexport class ExpenseDTO\n{\n    id: number;\n    name: string;\n    category: string;\n    date: Date;\n    amount: Double;\n    categoryid: number;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ExpenseModule.html":{"url":"modules/ExpenseModule.html","title":"module - ExpenseModule","body":"\n                   \n\n\n\n\n    Modules\n    ExpenseModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ExpenseModule\n\n\n\ncluster_ExpenseModule_providers\n\n\n\n\nExpenseService\n\nExpenseService\n\n\n\nExpenseModule\n\nExpenseModule\n\nExpenseModule -->\n\nExpenseService->ExpenseModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/expense.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ExpenseService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ExpenseController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ExpenseService } from '../Services/expense.service';\nimport { ExpenseController } from '../Controllers/expense.controller';\nimport { ExpenseRepository } from 'src/Repositories/Expense-Repository';\nimport { ExpenseType } from 'src/Entities/Expense-Types.entity';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([ExpenseRepository, ExpenseType])],\n  providers: [ExpenseService, ExpenseRepository, ExpenseType],\n  controllers: [ExpenseController]\n})\nexport class ExpenseModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ExpenseRepository.html":{"url":"classes/ExpenseRepository.html","title":"class - ExpenseRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ExpenseRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Repositories/Expense-Repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Repository\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                CreateExpense\n                            \n                            \n                                    Async\n                                DeleteExpense\n                            \n                            \n                                    Async\n                                FindExpenseEntity\n                            \n                            \n                                    Async\n                                FindExpenseType\n                            \n                            \n                                    Async\n                                UpdateExpense\n                            \n                            \n                                    Async\n                                ViewAllExpenses\n                            \n                            \n                                    Async\n                                ViewExpense\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        CreateExpense\n                        \n                    \n                \n            \n            \n                \n                    \n                    CreateExpense(expenseDTO: ExpenseDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/Repositories/Expense-Repository.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    expenseDTO\n                                    \n                                                ExpenseDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        DeleteExpense\n                        \n                    \n                \n            \n            \n                \n                    \n                    DeleteExpense(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/Repositories/Expense-Repository.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        FindExpenseEntity\n                        \n                    \n                \n            \n            \n                \n                    \n                    FindExpenseEntity(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/Repositories/Expense-Repository.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        FindExpenseType\n                        \n                    \n                \n            \n            \n                \n                    \n                    FindExpenseType(expensetype)\n                \n            \n\n\n            \n                \n                    Defined in src/Repositories/Expense-Repository.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    expensetype\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        UpdateExpense\n                        \n                    \n                \n            \n            \n                \n                    \n                    UpdateExpense(expenseDTO: ExpenseDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/Repositories/Expense-Repository.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    expenseDTO\n                                    \n                                                ExpenseDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        ViewAllExpenses\n                        \n                    \n                \n            \n            \n                \n                    \n                    ViewAllExpenses(expenseDTO: ExpenseDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/Repositories/Expense-Repository.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    expenseDTO\n                                    \n                                                ExpenseDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        ViewExpense\n                        \n                    \n                \n            \n            \n                \n                    \n                    ViewExpense(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/Repositories/Expense-Repository.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { NotFoundException } from \"@nestjs/common\";\nimport * as moment from \"moment\";\nimport { ExpenseDTO } from \"src/DTO/Expense-DTO\";\nimport { ExpenseType } from \"src/Entities/Expense-Types.entity\";\nimport { Expense } from \"src/Entities/Expense.entity\";\nimport { EntityRepository, MoreThanOrEqual, Repository } from \"typeorm\";\n\n@EntityRepository(Expense)\nexport class ExpenseRepository extends Repository\n{\n    async CreateExpense(expenseDTO: ExpenseDTO)\n    {\n        const {name, category, amount, categoryid} = expenseDTO;\n        const expense = new Expense();\n        expense.name = name;\n        expense.type = category;\n        expense.category = categoryid;\n        expense.amount = amount;\n        return await expense.save();\n    }\n\n    async ViewExpense(id: number)\n    {\n        return await this.FindExpenseEntity(id);\n    }\n\n    async ViewAllExpenses(expenseDTO: ExpenseDTO)\n    {\n        var {date} = expenseDTO;\n        console.log(date)\n        if(!date) date = JSON.parse(moment().startOf(\"day\").format('YYYY-MM-DD hh-mm-ss'));\n        console.log(date);\n        const result = await Expense.createQueryBuilder('Expense').where({CreatedAt: MoreThanOrEqual(date)}).getManyAndCount();\n        const response = {ExpenseCount: result[1], Expenses: result[0]};\n        return response;\n    }\n\n    async UpdateExpense(expenseDTO: ExpenseDTO)\n    {\n        const {id, name, categoryid, amount} = expenseDTO;\n        const expense = await this.FindExpenseEntity(id);\n        expense.name = name;\n        expense.category = categoryid;\n        expense.UpdatedAt = moment().format('YYYY-MM-DD hh-mm-ss');\n        expense.amount = amount;\n        return await expense.save(); \n    }\n\n    async DeleteExpense(id: number)\n    {\n        const expense = await this.FindExpenseEntity(id);\n        return await expense.remove();\n    }\n\n    async FindExpenseEntity(id: number)\n    {\n        try\n        {\n            return await Expense.findOneOrFail(id);\n        }\n        catch(err)\n        {\n            throw new NotFoundException('Requested Expense NOT FOUND!!!')\n        }\n    }\n\n    async FindExpenseType(expensetype)\n    {\n        try\n        {\n        return await ExpenseType.findOneOrFail({where: {name: expensetype}});\n        }\n        catch(err)\n        {\n        throw new NotFoundException('The Entered Category was NOT FOUND...!!!!');\n        }\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ExpenseService.html":{"url":"injectables/ExpenseService.html","title":"injectable - ExpenseService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ExpenseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Services/expense.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                CreateExpense\n                            \n                            \n                                    Async\n                                DeleteExpense\n                            \n                            \n                                    Async\n                                UpdateExpense\n                            \n                            \n                                    Async\n                                ViewAllExpenses\n                            \n                            \n                                    Async\n                                ViewExpense\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(expenseRepository: ExpenseRepository)\n                    \n                \n                        \n                            \n                                Defined in src/Services/expense.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        expenseRepository\n                                                  \n                                                        \n                                                                        ExpenseRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        CreateExpense\n                        \n                    \n                \n            \n            \n                \n                    \n                    CreateExpense(expenseDTO: ExpenseDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/Services/expense.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    expenseDTO\n                                    \n                                                ExpenseDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        DeleteExpense\n                        \n                    \n                \n            \n            \n                \n                    \n                    DeleteExpense(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/Services/expense.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        UpdateExpense\n                        \n                    \n                \n            \n            \n                \n                    \n                    UpdateExpense(expenseDTO: ExpenseDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/Services/expense.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    expenseDTO\n                                    \n                                                ExpenseDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        ViewAllExpenses\n                        \n                    \n                \n            \n            \n                \n                    \n                    ViewAllExpenses(expenseDTO: ExpenseDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/Services/expense.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    expenseDTO\n                                    \n                                                ExpenseDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        ViewExpense\n                        \n                    \n                \n            \n            \n                \n                    \n                    ViewExpense(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/Services/expense.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ExpenseDTO } from 'src/DTO/Expense-DTO';\nimport { ExpenseRepository } from 'src/Repositories/Expense-Repository';\n\n@Injectable()\nexport class ExpenseService {\n    constructor(private expenseRepository: ExpenseRepository){}\n\n    async CreateExpense(expenseDTO: ExpenseDTO)\n    {\n        return await this.expenseRepository.CreateExpense(expenseDTO);\n    }\n    async ViewExpense(id: number)\n    {\n        return await this.expenseRepository.ViewExpense(id);\n    } \n    async ViewAllExpenses(expenseDTO: ExpenseDTO)\n    {\n        return await this.expenseRepository.ViewAllExpenses(expenseDTO);\n    }\n    async UpdateExpense(expenseDTO: ExpenseDTO)\n    {\n        return await this.expenseRepository.UpdateExpense(expenseDTO);\n    }\n    async DeleteExpense(id: number)\n    {\n        return await this.expenseRepository.DeleteExpense(id);\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ExpenseType.html":{"url":"classes/ExpenseType.html","title":"class - ExpenseType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ExpenseType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Entities/Expense-Types.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                expense\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        expense\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, undefined, {onDelete: 'CASCADE'})@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Entities/Expense-Types.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Entities/Expense-Types.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Entities/Expense-Types.entity.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { type } from \"os\";\nimport { BaseEntity, Column, Entity, JoinColumn, OneToMany, PrimaryGeneratedColumn } from \"typeorm\";\nimport { Expense } from \"./Expense.entity\";\n\n@Entity()\nexport class ExpenseType extends BaseEntity\n{\n    @PrimaryGeneratedColumn()\n    id: number;\n\n    @Column()\n    name: string;\n\n    @OneToMany(type => Expense, expense => expense.id, {onDelete: \"CASCADE\"})\n    @JoinColumn()\n    expense: number;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ExpenseValidationPipe.html":{"url":"injectables/ExpenseValidationPipe.html","title":"injectable - ExpenseValidationPipe","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ExpenseValidationPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Pipes/Expense-Validation.pipe.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(expenseRepository: ExpenseRepository)\n                    \n                \n                        \n                            \n                                Defined in src/Pipes/Expense-Validation.pipe.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        expenseRepository\n                                                  \n                                                        \n                                                                        ExpenseRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        transform\n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(value: ExpenseDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/Pipes/Expense-Validation.pipe.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                ExpenseDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable, PipeTransform } from \"@nestjs/common\";\nimport { InjectRepository } from \"@nestjs/typeorm\";\nimport { ExpenseDTO } from \"src/DTO/Expense-DTO\";\nimport { ExpenseRepository } from \"src/Repositories/Expense-Repository\";\n\n@Injectable()\nexport class ExpenseValidationPipe implements PipeTransform\n{   constructor(@InjectRepository(ExpenseRepository) private expenseRepository: ExpenseRepository){}\n    async transform(value: ExpenseDTO)\n    {\n        console.log(value.category)\n        if(value.category) value.category = value.category.toUpperCase();\n        const getCategories = await this.expenseRepository.FindExpenseType(value.category);\n        value.categoryid = getCategories.id;\n        // const checkcategory = getCategories.findIndex(getCategories => getCategories.name === value.category);\n        // if(checkcategory===-1) throw new BadRequestException('Invalid Category..!!!');\n        // value.categoryid = checkcategory+1;\n        return value;\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Helper.html":{"url":"classes/Helper.html","title":"class - Helper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Helper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/extras/helper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                customFileName\n                            \n                            \n                                    Static\n                                destinationPath\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        customFileName\n                        \n                    \n                \n            \n            \n                \n                    \n                    customFileName(req, file, cb)\n                \n            \n\n\n            \n                \n                    Defined in src/extras/helper.ts:3\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    file\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cb\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        destinationPath\n                        \n                    \n                \n            \n            \n                \n                    \n                    destinationPath(req, file, cb)\n                \n            \n\n\n            \n                \n                    Defined in src/extras/helper.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    file\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cb\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class Helper {\n    static customFileName(req, file, cb) {\n      const uniqueSuffix = Date.now() + '-' + Math.round(Math.random() * 1e9);\n      let fileExtension = \"\";\n       if(file.mimetype.indexOf(\"jpeg\") > -1){\n          fileExtension = \"jpg\"\n          const originalName = file.originalname.split(\".\")[0];\n      cb(null, originalName + '-' + uniqueSuffix+\".\"+fileExtension);\n       }\n      else if(file.mimetype.indexOf(\"png\") > -1){\n          fileExtension = \"png\";\n          const originalName = file.originalname.split(\".\")[0];\n      cb(null, originalName + '-' + uniqueSuffix+\".\"+fileExtension);\n      }\n      else\n      {\n        //cb(null, false);\n        return cb(new Error('Only .png, .jpg and .jpeg format allowed!'));\n        //cb(new Error(`The File Type is not supported \\n File Type: ${file.mimetype}`));\n      }\n      }\n    \n    static destinationPath(req, file, cb) {\n      cb(null, \"C:\\\\Users\\\\afaq\\\\Documents\\\\youtube-session\\\\dist\\\\moduleuploads\")\n    }\n  }\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Inventory.html":{"url":"classes/Inventory.html","title":"class - Inventory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Inventory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Entities/Inventory.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                amount\n                            \n                            \n                                category\n                            \n                            \n                                dish\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                unit\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'double'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Entities/Inventory.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Entities/Inventory.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dish\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Dish\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, undefined, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Entities/Inventory.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Entities/Inventory.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Entities/Inventory.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Entities/Inventory.entity.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BaseEntity, Column, Double, Entity, JoinColumn, OneToMany, PrimaryGeneratedColumn } from \"typeorm\";\nimport { Dish } from \"./Dish.entity\";\n\n@Entity()\nexport class Inventory extends BaseEntity\n{\n    @PrimaryGeneratedColumn()\n    id: number\n\n    @Column()\n    name: string\n\n    @Column()\n    category: string\n\n    @Column({type: 'double'})\n    amount: number;\n\n    @Column()\n    unit: string\n\n    @OneToMany(type => Dish, dish => dish.id , {onDelete: 'CASCADE'})\n    dish: Dish\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/InventoryController.html":{"url":"controllers/InventoryController.html","title":"controller - InventoryController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  InventoryController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Controllers/inventory.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                inventory\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                Create\n                            \n                            \n                                    Async\n                                GetAllItems\n                            \n                            \n                                    Async\n                                GetOne\n                            \n                            \n                                    Async\n                                UpdateInventory\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        Create\n                        \n                    \n                \n            \n            \n                \n                    \n                    Create()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/create')\n                \n            \n\n            \n                \n                    Defined in src/Controllers/inventory.controller.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        GetAllItems\n                        \n                    \n                \n            \n            \n                \n                    \n                    GetAllItems()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/getall')\n                \n            \n\n            \n                \n                    Defined in src/Controllers/inventory.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        GetOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    GetOne()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('getone')\n                \n            \n\n            \n                \n                    Defined in src/Controllers/inventory.controller.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        UpdateInventory\n                        \n                    \n                \n            \n            \n                \n                    \n                    UpdateInventory(inventoryDTO: InventoryDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('/update')\n                \n            \n\n            \n                \n                    Defined in src/Controllers/inventory.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    inventoryDTO\n                                    \n                                                InventoryDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Patch, Post } from '@nestjs/common';\nimport { InventoryDTO } from 'src/DTO/Inventory.DTO';\nimport { InventoryService } from 'src/Services/inventory.service';\n\n@Controller('inventory')\nexport class InventoryController {\n    constructor(private inventoryService: InventoryService){}\n\n    @Post('/create')\n    async Create()\n    {\n\n    }\n\n    @Get('/getall')\n    async GetAllItems()\n    {\n\n    }\n\n    @Get('getone')\n    async GetOne()\n    {\n\n    }\n    \n    @Patch('/update')\n    async UpdateInventory(@Body() inventoryDTO: InventoryDTO)\n    {\n        return await this.inventoryService.UpdateInventory(inventoryDTO);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InventoryDTO.html":{"url":"classes/InventoryDTO.html","title":"class - InventoryDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InventoryDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/DTO/Inventory.DTO.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                amount\n                            \n                            \n                                category\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                Unit\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/DTO/Inventory.DTO.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/DTO/Inventory.DTO.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/DTO/Inventory.DTO.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/DTO/Inventory.DTO.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Unit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/DTO/Inventory.DTO.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNumber, IsString } from \"class-validator\";\n\nexport class InventoryDTO\n{\n    @IsNumber()\n    id: number;\n\n    @IsString()\n    name: string;\n\n    amount: number;\n\n    @IsString()\n    category: string;\n\n    @IsString()\n    Unit: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/InventoryModule.html":{"url":"modules/InventoryModule.html","title":"module - InventoryModule","body":"\n                   \n\n\n\n\n    Modules\n    InventoryModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_InventoryModule\n\n\n\ncluster_InventoryModule_providers\n\n\n\n\nInventoryService\n\nInventoryService\n\n\n\nInventoryModule\n\nInventoryModule\n\nInventoryModule -->\n\nInventoryService->InventoryModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/inventory.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            InventoryService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            InventoryController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { InventoryService } from '../Services/inventory.service';\nimport { InventoryController } from '../Controllers/inventory.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { InventoryRepository } from 'src/Repositories/Inventory-Repository';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([InventoryRepository])],\n  providers: [InventoryService],\n  controllers: [InventoryController]\n})\nexport class InventoryModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InventoryRepository.html":{"url":"classes/InventoryRepository.html","title":"class - InventoryRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InventoryRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Repositories/Inventory-Repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Repository\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                CreateItem\n                            \n                            \n                                    Async\n                                FindInventory\n                            \n                            \n                                    Async\n                                RestoreInventoryByDishes\n                            \n                            \n                                    Async\n                                UpdateInventory\n                            \n                            \n                                    Async\n                                UpdateInventoryByDishes\n                            \n                            \n                                    Async\n                                ViewAllItems\n                            \n                            \n                                    Async\n                                ViewItem\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        CreateItem\n                        \n                    \n                \n            \n            \n                \n                    \n                    CreateItem(inventoryDTO: InventoryDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/Repositories/Inventory-Repository.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    inventoryDTO\n                                    \n                                                InventoryDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        FindInventory\n                        \n                    \n                \n            \n            \n                \n                    \n                    FindInventory(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/Repositories/Inventory-Repository.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        RestoreInventoryByDishes\n                        \n                    \n                \n            \n            \n                \n                    \n                    RestoreInventoryByDishes(items: Dish[], dishes: [literal type])\n                \n            \n\n\n            \n                \n                    Defined in src/Repositories/Inventory-Repository.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    items\n                                    \n                                                Dish[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dishes\n                                    \n                                            [literal type]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        UpdateInventory\n                        \n                    \n                \n            \n            \n                \n                    \n                    UpdateInventory(inventoryDTO: InventoryDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/Repositories/Inventory-Repository.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    inventoryDTO\n                                    \n                                                InventoryDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        UpdateInventoryByDishes\n                        \n                    \n                \n            \n            \n                \n                    \n                    UpdateInventoryByDishes(items: Dish[], dishes: [literal type])\n                \n            \n\n\n            \n                \n                    Defined in src/Repositories/Inventory-Repository.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    items\n                                    \n                                                Dish[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dishes\n                                    \n                                            [literal type]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        ViewAllItems\n                        \n                    \n                \n            \n            \n                \n                    \n                    ViewAllItems()\n                \n            \n\n\n            \n                \n                    Defined in src/Repositories/Inventory-Repository.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        ViewItem\n                        \n                    \n                \n            \n            \n                \n                    \n                    ViewItem(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/Repositories/Inventory-Repository.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { NotFoundException } from \"@nestjs/common\";\nimport { InventoryDTO } from \"src/DTO/Inventory.DTO\";\nimport { Dish } from \"src/Entities/Dish.entity\";\nimport { Inventory } from \"src/Entities/Inventory.entity\";\nimport { EntityRepository, Repository } from \"typeorm\";\n\n@EntityRepository(Inventory)\nexport class InventoryRepository extends Repository\n{\n    async CreateItem(inventoryDTO: InventoryDTO)\n    {\n        const {name,amount,Unit,category} = inventoryDTO;\n        const inventory = new Inventory();\n        inventory.name = name;\n        inventory.category = category;\n        inventory.amount = amount;\n        inventory.unit = Unit;\n        return await inventory.save();\n    }\n\n    async ViewItem(id: number)\n    {\n        return await this.FindInventory(id);\n    }\n\n    async ViewAllItems()\n    {\n        const inventory = await Inventory.findAndCount();\n        const response = {InventoryCount: inventory[1], Items: inventory[0]};\n        return response;\n    }\n\n    async UpdateInventory(inventoryDTO: InventoryDTO)\n    {\n        const {id,name,amount} = inventoryDTO;\n        const inventory = await this.FindInventory(id);\n        if(name) inventory.name = name;\n        inventory.amount -= amount;\n        return await inventory.save();\n    }\n\n    async UpdateInventoryByDishes(items: Dish[], dishes: [{id: number, quantity: number}] )\n    {\n        items.forEach( async (acc, index) => {\n            const id = acc.InventoryItem;\n            await Inventory.createQueryBuilder()\n            .update(Inventory)\n            .set({amount: () => `amount - ${acc.InventoryFactor * dishes[index].quantity}`})\n            .where(\"id = :id\",{id})\n            .execute();\n        });\n    }\n\n    async RestoreInventoryByDishes(items: Dish[], dishes: [{id: number, quantity: number}] )\n    {\n        items.forEach( async (acc, index) => {\n            const id = acc.InventoryItem;\n            await Inventory.createQueryBuilder()\n            .update(Inventory)\n            .set({amount: () => `amount + ${acc.InventoryFactor * dishes[index].quantity}`})\n            .where(\"id = :id\",{id})\n            .execute();\n        });\n    }\n    async FindInventory(id: number)\n    {\n        try\n        {\n            return await Inventory.findOneOrFail(id);\n        }\n        catch(err)\n        {\n            throw new NotFoundException('Inventory NOT Found....!!!!');\n        }\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/InventoryService.html":{"url":"injectables/InventoryService.html","title":"injectable - InventoryService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  InventoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Services/inventory.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                UpdateInventory\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(inventoryRepository: InventoryRepository)\n                    \n                \n                        \n                            \n                                Defined in src/Services/inventory.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        inventoryRepository\n                                                  \n                                                        \n                                                                        InventoryRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        UpdateInventory\n                        \n                    \n                \n            \n            \n                \n                    \n                    UpdateInventory(inventoryDTO: InventoryDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/Services/inventory.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    inventoryDTO\n                                    \n                                                InventoryDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InventoryDTO } from 'src/DTO/Inventory.DTO';\nimport { InventoryRepository } from 'src/Repositories/Inventory-Repository';\n\n@Injectable()\nexport class InventoryService {\n    constructor(private inventoryRepository: InventoryRepository) {}\n\n    async UpdateInventory(inventoryDTO: InventoryDTO)\n    {\n        return await this.inventoryRepository.UpdateInventory(inventoryDTO);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/IsAdmin.html":{"url":"guards/IsAdmin.html","title":"guard - IsAdmin","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    IsAdmin\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/Guards/isAdmin.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                    \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/Guards/isAdmin.guard.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { BadRequestException, CanActivate, ExecutionContext, Injectable, UnauthorizedException } from \"@nestjs/common\";\n\n\n@Injectable()\nexport class IsAdmin implements CanActivate\n{ \n    async canActivate(context: ExecutionContext)\n    {\n        const request = context.switchToHttp().getRequest();\n        if(request.user===undefined) \n        {\n            throw new BadRequestException('You need to Log In first...!!!');\n        }\n        if(!request.user.isAdmin === true)\n        {\n            throw new UnauthorizedException('You are not authorized for this request...!!!');\n        }\n        return true;\n    }\n}\n        \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalAuthGuard.html":{"url":"injectables/LocalAuthGuard.html","title":"injectable - LocalAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LocalAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Guards/local-auth.guard.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                    \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/Guards/local-auth.guard.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExecutionContext, Injectable } from \"@nestjs/common\";\nimport { AuthGuard } from \"@nestjs/passport\";\n\n@Injectable()\nexport class LocalAuthGuard extends AuthGuard('local')\n{\n    async canActivate(context: ExecutionContext)\n    {\n        const result = (await super.canActivate(context)) as boolean;\n        const request = context.switchToHttp().getRequest();\n        //console.log(request.user);\n        await super.logIn(request);\n        return result;\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/local.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/local.strategy.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(username: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/local.strategy.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Body, Injectable, UnauthorizedException } from \"@nestjs/common\";\nimport { PassportStrategy } from \"@nestjs/passport\";\nimport {Strategy} from 'passport-local'\nimport { UserDTO } from \"src/DTO/User-DTO\";\nimport { AuthService } from \"../Services/auth.service\";\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy)\n{\n    constructor(private authService: AuthService) {super(new UserDTO)}\n\n    async validate(username: string, password: string) : Promise\n    {\n        const userDTO = {username: username, password: password};\n        const user = await this.authService.LogIn(userDTO);\n        if(!user) throw new UnauthorizedException('user not found...!!!');\n        return user;\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Order.html":{"url":"classes/Order.html","title":"class - Order","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Order\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Entities/Order.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                Bill\n                            \n                            \n                                Bill_Payed\n                            \n                            \n                                CheckedOut\n                            \n                            \n                                CheckedOutAt\n                            \n                            \n                                CreatedAt\n                            \n                            \n                                custom_charges\n                            \n                            \n                                discount\n                            \n                            \n                                id\n                            \n                            \n                                orderdetails\n                            \n                            \n                                service_charges\n                            \n                            \n                                TableNumber\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        Bill\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'double'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Entities/Order.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Bill_Payed\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'double'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Entities/Order.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CheckedOut\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'boolean', default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Entities/Order.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CheckedOutAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Entities/Order.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CreatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Transform(undefined)@Column({type: 'timestamp'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Entities/Order.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        custom_charges\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Entities/Order.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        discount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Entities/Order.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Entities/Order.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        orderdetails\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, undefined, {onDelete: 'CASCADE'})@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Entities/Order.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        service_charges\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Entities/Order.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TableNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'integer'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Entities/Order.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Users\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, undefined, {onDelete: 'CASCADE'})@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Entities/Order.entity.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Exclude, Transform } from \"class-transformer\";\nimport * as moment from \"moment\";\nimport { BaseEntity, Column, Entity, JoinColumn, ManyToOne, OneToMany, OneToOne, PrimaryGeneratedColumn} from \"typeorm\";\nimport { OrderDetails } from \"./Order-Detail.entity\";\nimport { Users } from \"./User.entity\";\n\n@Entity()\nexport class Order extends BaseEntity\n{\n    @PrimaryGeneratedColumn()\n    id: number\n\n    @Column({type: \"integer\"})\n    TableNumber: number\n\n    @Column({type: \"double\"})\n    Bill: number\n\n    @Column({type: \"double\"})\n    Bill_Payed: number\n\n    @ManyToOne(type => Users, user => user.id, {onDelete: \"CASCADE\"})\n    @JoinColumn()\n    user: Users\n\n    @OneToMany(type => OrderDetails, orderdetails => orderdetails.id, {onDelete: \"CASCADE\"})\n    @JoinColumn()\n    orderdetails: number;\n\n    @Column()\n    discount: number\n\n    @Column()\n    custom_charges: number\n\n    @Column()\n    service_charges: number\n\n    @Column({type: 'boolean', default: false})\n    CheckedOut: boolean\n\n    @Transform((date1) => moment(date1.value).format('DD-MM-yyyy hh:mm:ss A'))\n    @Column({type: \"timestamp\"})\n    CreatedAt: string;\n\n    @Column({type: \"timestamp\", nullable: true})\n    CheckedOutAt: string\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/OrderController.html":{"url":"controllers/OrderController.html","title":"controller - OrderController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  OrderController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Controllers/order.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                order\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                CheckOut\n                            \n                            \n                                    Async\n                                CreateOrder\n                            \n                            \n                                    Async\n                                DeleteOrder\n                            \n                            \n                                    Async\n                                GetAllOrders\n                            \n                            \n                                    Async\n                                Update\n                            \n                            \n                                    Async\n                                ViewActiveOrders\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        CheckOut\n                        \n                    \n                \n            \n            \n                \n                    \n                    CheckOut(checkOutDTO: CheckOutDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/checkout')@UsePipes(ValidationPipe)\n                \n            \n\n            \n                \n                    Defined in src/Controllers/order.controller.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    checkOutDTO\n                                    \n                                                CheckOutDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        CreateOrder\n                        \n                    \n                \n            \n            \n                \n                    \n                    CreateOrder(orderDTO: OrderDTO, req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/createorder')\n                \n            \n\n            \n                \n                    Defined in src/Controllers/order.controller.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    orderDTO\n                                    \n                                                OrderDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        DeleteOrder\n                        \n                    \n                \n            \n            \n                \n                    \n                    DeleteOrder(orderDTO: OrderDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/delete')\n                \n            \n\n            \n                \n                    Defined in src/Controllers/order.controller.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    orderDTO\n                                    \n                                                OrderDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        GetAllOrders\n                        \n                    \n                \n            \n            \n                \n                    \n                    GetAllOrders(orderDTO: OrderDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/GetOrders')\n                \n            \n\n            \n                \n                    Defined in src/Controllers/order.controller.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    orderDTO\n                                    \n                                                OrderDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        Update\n                        \n                    \n                \n            \n            \n                \n                    \n                    Update(orderDTO: OrderDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('/update')\n                \n            \n\n            \n                \n                    Defined in src/Controllers/order.controller.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    orderDTO\n                                    \n                                                OrderDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        ViewActiveOrders\n                        \n                    \n                \n            \n            \n                \n                    \n                    ViewActiveOrders()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/viewactiveorders')\n                \n            \n\n            \n                \n                    Defined in src/Controllers/order.controller.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, ClassSerializerInterceptor, Controller, Delete, Get, Patch, Post, Req, Res, UseGuards, UseInterceptors, UsePipes, ValidationPipe } from '@nestjs/common';\nimport { AuthenticatedGuard } from 'src/Guards/authenticated.guard';\nimport { CheckOutDTO } from 'src/DTO/Check-Out.DTO';\nimport { OrderDTO } from 'src/DTO/Order-DTO';\nimport { OrderService } from 'src/Services/order.service';\nimport { ApiAcceptedResponse, ApiResponse } from '@nestjs/swagger';\n\n@Controller('order')\n@UseGuards(AuthenticatedGuard)\n//@UseInterceptors(ClassSerializerInterceptor)\nexport class OrderController {\n    constructor(private orderService: OrderService){}\n\n    @Post('/createorder')\n    async CreateOrder(@Body() orderDTO: OrderDTO, @Req() req)\n    {\n        orderDTO.userid = req.user.id;\n       //res.send('Hot Reload Working')\n        return await this.orderService.CreateOrder(orderDTO);\n    }\n\n    @Post('/checkout')\n    @UsePipes(ValidationPipe)\n    async CheckOut(@Body() checkOutDTO: CheckOutDTO)\n    {\n        return await this.orderService.CheckOut(checkOutDTO);\n    }\n\n    @Get('/viewactiveorders')\n    async ViewActiveOrders()\n    {\n        return await this.orderService.ViewActiveOrders();\n    }\n    @Post('/GetOrders')\n    async GetAllOrders(@Body() orderDTO: OrderDTO)\n    {\n        return await this.orderService.GetAllOrders(orderDTO);\n    }\n\n    @Patch('/update')\n    async Update(@Body() orderDTO: OrderDTO)\n    {\n        return await this.orderService.Update(orderDTO);\n    }\n\n    @Delete('/delete')\n    async DeleteOrder(@Body() orderDTO: OrderDTO)\n    {\n        console.log(orderDTO)\n        return await this.orderService.DeleteOrder(orderDTO);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OrderDTO.html":{"url":"classes/OrderDTO.html","title":"class - OrderDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OrderDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/DTO/Order-DTO.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                Bill\n                            \n                            \n                                Bill_Payed\n                            \n                            \n                                CheckOutAt\n                            \n                            \n                                CreatedAt\n                            \n                            \n                                custom_charges\n                            \n                            \n                                discount\n                            \n                            \n                                dishes\n                            \n                            \n                                dishestoremove\n                            \n                            \n                                id\n                            \n                            \n                                service_charges\n                            \n                            \n                                TableNumber\n                            \n                            \n                                userid\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        Bill\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/DTO/Order-DTO.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Bill_Payed\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/DTO/Order-DTO.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CheckOutAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/DTO/Order-DTO.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CreatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Transform(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/DTO/Order-DTO.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        custom_charges\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/DTO/Order-DTO.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        discount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/DTO/Order-DTO.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dishes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     [literal type]\n\n                    \n                \n                    \n                        \n                                Defined in src/DTO/Order-DTO.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dishestoremove\n                        \n                    \n                \n            \n                \n                    \n                        Type :     [literal type]\n\n                    \n                \n                    \n                        \n                                Defined in src/DTO/Order-DTO.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/DTO/Order-DTO.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        service_charges\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/DTO/Order-DTO.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TableNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/DTO/Order-DTO.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/DTO/Order-DTO.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Transform } from \"class-transformer\";\nimport { IsNumber } from \"class-validator\";\nimport * as moment from \"moment\";\n\nexport class OrderDTO\n{\n    @IsNumber()\n    id: number;\n\n    dishes: [{id: number,quantity: number}];\n\n    userid: number;\n\n    dishestoremove: [{id: number,quantity: number}];\n\n    @IsNumber()\n    TableNumber: number;\n\n    @IsNumber()\n    Bill: number;\n\n    @IsNumber()\n    Bill_Payed: number;\n\n    @IsNumber()\n    discount: number;\n\n    @IsNumber()\n    custom_charges: number;\n\n    @IsNumber()\n    service_charges: number;\n\n    @Transform(date1 => moment(date1.value).format('DD-MM-yyyy hh:mm:ss A'))\n    CreatedAt: string;\n\n    CheckOutAt: Date;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OrderDetails.html":{"url":"classes/OrderDetails.html","title":"class - OrderDetails","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OrderDetails\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Entities/Order-Detail.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dishid\n                            \n                            \n                                dishquantity\n                            \n                            \n                                id\n                            \n                            \n                                OrderId\n                            \n                            \n                                orders\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        dishid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Entities/Order-Detail.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dishquantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Entities/Order-Detail.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Entities/Order-Detail.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        OrderId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Entities/Order-Detail.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        orders\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Order\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, undefined, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Entities/Order-Detail.entity.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BaseEntity, Column, Entity, ManyToOne, PrimaryGeneratedColumn } from \"typeorm\";\nimport { Order } from \"./Order.entity\";\n\n@Entity()\nexport class OrderDetails extends BaseEntity\n{\n    @PrimaryGeneratedColumn()\n    id: number\n\n    @Column()\n    OrderId: number;\n\n    @Column()\n    dishid: number;\n\n    @Column()\n    dishquantity: number;\n\n    @ManyToOne(type => Order, orders => orders.id, {onDelete: \"CASCADE\"})\n    orders: Order;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OrderModule.html":{"url":"modules/OrderModule.html","title":"module - OrderModule","body":"\n                   \n\n\n\n\n    Modules\n    OrderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_OrderModule\n\n\n\ncluster_OrderModule_imports\n\n\n\ncluster_OrderModule_providers\n\n\n\n\nInventoryRepository\n\nInventoryRepository\n\n\n\nOrderModule\n\nOrderModule\n\nOrderModule -->\n\nInventoryRepository->OrderModule\n\n\n\n\n\nOrderService\n\nOrderService\n\nOrderModule -->\n\nOrderService->OrderModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/order.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            OrderService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            OrderController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            InventoryRepository\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { OrderDetails } from 'src/Entities/Order-Detail.entity';\nimport { InventoryRepository } from 'src/Repositories/Inventory-Repository';\nimport { OrderRepository } from 'src/Repositories/Order-Repository';\nimport { OrderController } from '../Controllers/order.controller';\nimport { OrderService } from '../Services/order.service';\n\n@Module({\n  imports: [InventoryRepository, TypeOrmModule.forFeature([OrderRepository, OrderDetails])],\n  controllers: [OrderController],\n  providers: [OrderService,OrderRepository, InventoryRepository]\n})\nexport class OrderModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OrderRepository.html":{"url":"classes/OrderRepository.html","title":"class - OrderRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OrderRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Repositories/Order-Repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Repository\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                CheckOut\n                            \n                            \n                                    Async\n                                CreateOrder\n                            \n                            \n                                    Async\n                                DeleteOrder\n                            \n                            \n                                    Async\n                                GetAllOrders\n                            \n                            \n                                    Async\n                                Getcurrenttime\n                            \n                            \n                                    Async\n                                Update\n                            \n                            \n                                    Async\n                                ViewActiveOrders\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(inventoryRepository: InventoryRepository)\n                    \n                \n                        \n                            \n                                Defined in src/Repositories/Order-Repository.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        inventoryRepository\n                                                  \n                                                        \n                                                                        InventoryRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        CheckOut\n                        \n                    \n                \n            \n            \n                \n                    \n                    CheckOut(checkOutDTO: CheckOutDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/Repositories/Order-Repository.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    checkOutDTO\n                                    \n                                                CheckOutDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        CreateOrder\n                        \n                    \n                \n            \n            \n                \n                    \n                    CreateOrder(orderDTO: OrderDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/Repositories/Order-Repository.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    orderDTO\n                                    \n                                                OrderDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        DeleteOrder\n                        \n                    \n                \n            \n            \n                \n                    \n                    DeleteOrder(orderDTO: OrderDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/Repositories/Order-Repository.ts:133\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    orderDTO\n                                    \n                                                OrderDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        GetAllOrders\n                        \n                    \n                \n            \n            \n                \n                    \n                    GetAllOrders(orderDTO: OrderDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/Repositories/Order-Repository.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    orderDTO\n                                    \n                                                OrderDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        Getcurrenttime\n                        \n                    \n                \n            \n            \n                \n                    \n                    Getcurrenttime()\n                \n            \n\n\n            \n                \n                    Defined in src/Repositories/Order-Repository.ts:141\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        Update\n                        \n                    \n                \n            \n            \n                \n                    \n                    Update(orderDTO: OrderDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/Repositories/Order-Repository.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    orderDTO\n                                    \n                                                OrderDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        ViewActiveOrders\n                        \n                    \n                \n            \n            \n                \n                    \n                    ViewActiveOrders()\n                \n            \n\n\n            \n                \n                    Defined in src/Repositories/Order-Repository.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { OrderDTO } from 'src/DTO/Order-DTO';\nimport { Dish } from 'src/Entities/Dish.entity';\nimport { OrderDetails } from 'src/Entities/Order-Detail.entity';\nimport { Order } from 'src/Entities/Order.entity';\nimport {\n  EntityRepository,\n  LessThanOrEqual,\n  MoreThanOrEqual,\n  Repository,\n} from 'typeorm';\nimport * as moment from 'moment';\nimport { CheckOutDTO } from 'src/DTO/Check-Out.DTO';\nimport { Users } from 'src/Entities/User.entity';\nimport { InventoryRepository } from './Inventory-Repository';\nimport { isMainThread } from 'worker_threads';\n\n@EntityRepository(Order)\nexport class OrderRepository extends Repository {\n  constructor(private inventoryRepository: InventoryRepository) {\n    super();\n  }\n  async CreateOrder(orderDTO: OrderDTO) {\n    const { dishes, TableNumber, userid } = orderDTO;   const order = new Order();  var TotalPrice = 0;\n    const Dishes = await Dish.findByIds(dishes);\n    await this.inventoryRepository.UpdateInventoryByDishes(Dishes, dishes);\n    TotalPrice = Dishes.reduce((acc, item, index) => {\n      return acc + item.price * dishes[index].quantity;\n    }, 0);\n    order.Bill = TotalPrice;\n    //order.CreatedAt = moment().format(\"DD-MM-YYYY hh:mm:ss A\");\n    order.CheckedOut = false;\n    order.TableNumber = TableNumber;\n    const user = new Users();\n    user.id = userid;\n    order.user = user;\n    const savedorder = await order.save();\n    Dishes.forEach(async (acc, index) => {\n      const orderdetail = new OrderDetails();\n      orderdetail.OrderId = savedorder.id;\n      orderdetail.dishid = acc.id;\n      orderdetail.dishquantity = dishes[index].quantity;\n      orderdetail.orders = savedorder;\n      await orderdetail.save();\n    });\n    const response = { message: 'Order Created!', OrderDetails: savedorder };\n    return { response };\n  }\n  async CheckOut(checkOutDTO: CheckOutDTO) {\n    const { BillId, BillPayed, custom_charges, service_charges, discount } = checkOutDTO;\n    const order = await Order.createQueryBuilder('order')\n      .where({ id: BillId })\n      .getOneOrFail();\n    order.CheckedOut = true;\n    order.CheckedOutAt = moment().format('YYYY-MM-DD hh-mm-ss');\n    order.Bill_Payed = BillPayed;\n    order.discount = discount;\n    order.custom_charges = custom_charges;\n    order.service_charges = service_charges;\n    order.Bill += custom_charges + service_charges;\n    await order.save();\n    const response = {\n      OrderId: BillId,\n      Bill: order.Bill,\n      BillPayed: BillPayed-discount,\n      Discount: discount\n    };\n    return response;\n  }\n\n  async GetAllOrders(orderDTO: OrderDTO)\n   {\n    var { CreatedAt } = orderDTO;\n    //CreatedAt = moment(CreatedAt).format('DD-MM-YYYY hh-mm-ss A');\n    console.log(CreatedAt);\n    if (!CreatedAt){ CreatedAt = moment().startOf('day').format('YYYY-MM-DD HH-mm-ss');}\n    console.log('Created AT : ' + CreatedAt);\n    const now = moment().format('DD-MM-YYYY hh-mm-ss A');\n    console.log('Now Time : ' + now);\n    console.log(CreatedAt.toString()  0) {\n      var DishesToRemove = await Dish.findByIds(dishestoremove);\n      await this.inventoryRepository.RestoreInventoryByDishes(DishesToRemove, dishestoremove);\n      DishesToRemove.forEach(async (acc, index) => {\n        const checkdish = await OrderDetails.findOneOrFail(acc.id);\n        if (checkdish) {\n          order.Bill -= acc.price * dishestoremove[index].quantity;\n          await order.save();\n        }\n      });\n    }\n    if (dishes.length > 0) {\n      await this.inventoryRepository.UpdateInventoryByDishes(Dishes, dishes);\n      Dishes.forEach(async (acc, index) => {\n        console.log(acc);\n        order.Bill += acc.price;\n      });\n      await order.save();\n      dishes.forEach(async (acc, index) => {\n        var orderdeatils = new OrderDetails();\n        orderdeatils.OrderId = order.id;\n        orderdeatils.dishid = dishes[index].id;\n        orderdeatils.dishquantity = dishes[index].quantity;\n        orderdeatils.orders = order;\n        console.log(index);\n        await orderdeatils.save();\n      });\n    }\n    return 'Order Updated...!!!!';\n  }\n\n  async DeleteOrder(orderDTO: OrderDTO) {\n    const { id } = orderDTO;\n    const result = await Order.delete(id);\n    //const orderdeatils = await OrderDetails.createQueryBuilder().delete().from(OrderDetails).where(\"OrderId= :id\",{id}).execute();\n    //return orderdeatils;\n    return result;\n  }\n\n  async Getcurrenttime() {\n    return moment().format('YYYY-MM-DD hh-mm-ss');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OrderService.html":{"url":"injectables/OrderService.html","title":"injectable - OrderService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  OrderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Services/order.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                CheckOut\n                            \n                            \n                                    Async\n                                CreateOrder\n                            \n                            \n                                    Async\n                                DeleteOrder\n                            \n                            \n                                    Async\n                                GetAllOrders\n                            \n                            \n                                    Async\n                                Update\n                            \n                            \n                                    Async\n                                ViewActiveOrders\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(orderRepository: OrderRepository)\n                    \n                \n                        \n                            \n                                Defined in src/Services/order.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        orderRepository\n                                                  \n                                                        \n                                                                        OrderRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        CheckOut\n                        \n                    \n                \n            \n            \n                \n                    \n                    CheckOut(checkOutDTO: CheckOutDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/Services/order.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    checkOutDTO\n                                    \n                                                CheckOutDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        CreateOrder\n                        \n                    \n                \n            \n            \n                \n                    \n                    CreateOrder(orderDTO: OrderDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/Services/order.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    orderDTO\n                                    \n                                                OrderDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        DeleteOrder\n                        \n                    \n                \n            \n            \n                \n                    \n                    DeleteOrder(orderDTO: OrderDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/Services/order.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    orderDTO\n                                    \n                                                OrderDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        GetAllOrders\n                        \n                    \n                \n            \n            \n                \n                    \n                    GetAllOrders(orderDTO: OrderDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/Services/order.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    orderDTO\n                                    \n                                                OrderDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        Update\n                        \n                    \n                \n            \n            \n                \n                    \n                    Update(orderDTO: OrderDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/Services/order.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    orderDTO\n                                    \n                                                OrderDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        ViewActiveOrders\n                        \n                    \n                \n            \n            \n                \n                    \n                    ViewActiveOrders()\n                \n            \n\n\n            \n                \n                    Defined in src/Services/order.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CheckOutDTO } from 'src/DTO/Check-Out.DTO';\nimport { OrderDTO } from 'src/DTO/Order-DTO';\nimport { OrderRepository } from 'src/Repositories/Order-Repository';\n\n@Injectable()\nexport class OrderService {\n    constructor(private orderRepository: OrderRepository){}\n\n    async CreateOrder(orderDTO: OrderDTO)\n    {\n        return await this.orderRepository.CreateOrder(orderDTO);\n    }\n\n    async CheckOut(checkOutDTO: CheckOutDTO)\n    {\n        return await this.orderRepository.CheckOut(checkOutDTO);\n    }\n    async ViewActiveOrders()\n    {\n        return await this.orderRepository.ViewActiveOrders();\n    }\n    async GetAllOrders(orderDTO: OrderDTO)\n    {\n        return await this.orderRepository.GetAllOrders(orderDTO);\n    }\n    async Update(orderDTO: OrderDTO)\n    {\n        return await this.orderRepository.Update(orderDTO);\n    }\n    async DeleteOrder(orderDTO: OrderDTO)\n    {\n        return await this.orderRepository.DeleteOrder(orderDTO);\n        \n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SessionSerializer.html":{"url":"injectables/SessionSerializer.html","title":"injectable - SessionSerializer","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SessionSerializer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/session.serializer.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    PassportSerializer\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                deserializeUser\n                            \n                            \n                                    Async\n                                serializeUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deserializeUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    deserializeUser(payload: any, done: (err: Error,payload: string) => void)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/session.serializer.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    done\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        serializeUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    serializeUser(user: any, done: (err: Error,user: any) => void)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/session.serializer.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    done\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { PassportSerializer } from \"@nestjs/passport\";\n\n@Injectable()\nexport class SessionSerializer extends PassportSerializer\n{\n    async serializeUser(user: any, done: (err: Error, user: any) => void): Promise\n    {\n        done(null, user)\n    }\n\n    async deserializeUser(payload: any, done: (err: Error, payload: string) => void)\n    {\n        done(null, payload)\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserDTO.html":{"url":"classes/UserDTO.html","title":"class - UserDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/DTO/User-DTO.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/DTO/User-DTO.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/DTO/User-DTO.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Exclude } from \"class-transformer\";\nimport { IsNotEmpty, IsString } from \"class-validator\";\n\nexport class UserDTO\n{\n    @IsString()\n    @IsNotEmpty()\n    username: string;\n\n    @IsString()\n    @IsNotEmpty()\n    password: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserRepository.html":{"url":"classes/UserRepository.html","title":"class - UserRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Repositories/User-Respository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Repository\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createUser\n                            \n                            \n                                    Async\n                                LogIn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    createUser(userDTO: UserDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/Repositories/User-Respository.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userDTO\n                                    \n                                                UserDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        LogIn\n                        \n                    \n                \n            \n            \n                \n                    \n                    LogIn(userDTO: UserDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/Repositories/User-Respository.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userDTO\n                                    \n                                                UserDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { UnauthorizedException } from \"@nestjs/common\";\nimport { UserDTO } from \"src/DTO/User-DTO\";\nimport { Users } from \"src/Entities/User.entity\";\nimport { EntityRepository, Repository } from \"typeorm\";\nimport * as bcrypt from \"bcrypt\"\nimport { response } from \"express\";\n\n@EntityRepository(Users)\nexport class UserRepository extends Repository\n{ \n    async LogIn(userDTO: UserDTO)\n    {\n        var {username, password} = userDTO; \n        const user = await Users.findOne({where: {username}})\n        if(user) \n        {\n            if( await bcrypt.compare(password,user.password))\n            {\n                //delete user.password;\n                // delete user.isAdmin;\n                // delete user.isStaff;\n                return user;\n            }\n            throw new UnauthorizedException('Wrong Credentials...!!!');\n        }\n        throw new UnauthorizedException('Wrong Credentials...!!!');\n    }\n    async createUser(userDTO: UserDTO)\n    {\n        const {username,password} = userDTO;\n        const user = new Users();\n        user.username = username;\n        user.password = await bcrypt.hash(password,10);\n        return await user.save();\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Users.html":{"url":"classes/Users.html","title":"class - Users","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Users\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Entities/User.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                isAdmin\n                            \n                            \n                                isStaff\n                            \n                            \n                                orders\n                            \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Entities/User.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAdmin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'tinyint'})@Exclude()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Entities/User.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isStaff\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'tinyint'})@Exclude()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Entities/User.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        orders\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Order\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, undefined, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Entities/User.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@Exclude()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Entities/User.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Entities/User.entity.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Exclude, Expose } from \"class-transformer\";\nimport { BaseEntity, Column, Entity, JoinColumn, OneToMany, OneToOne, PrimaryGeneratedColumn } from \"typeorm\";\nimport { Order } from \"./Order.entity\";\n\n\n@Entity()\nexport class Users extends BaseEntity\n{\n    @PrimaryGeneratedColumn()\n    id: number\n\n    @Column()\n    username: string\n\n    @OneToOne(type => Order, orders => orders.id, {onDelete: \"CASCADE\"})\n    orders: Order;\n\n    @Column()\n    @Exclude()\n    password: string\n\n    @Column({type: 'tinyint'})\n    @Exclude()\n    isAdmin: boolean\n\n    @Column({type: 'tinyint'})\n    @Exclude()\n    isStaff: boolean\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUsersService \n\nUsersService \n\n\n\nUsersModule\n\nUsersModule\n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { UserRepository } from 'src/Repositories/User-Respository';\nimport { UsersService } from '../Services/users.service';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([UserRepository])],\n  providers: [UsersService],\n  exports: [UsersService]\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Services/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findone\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findone\n                        \n                    \n                \n            \n            \n                \n                    \n                    findone(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/Services/users.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                \n                    \n                        Default value : [\n        {\n            id: 1,\n            name: 'afaq',\n            username: 'alsoafaq',\n            password: 'afaqpassword',\n            isAdmin: true,\n            isStaff: false\n        },\n        {\n            id: 2,\n            name: 'tabish',\n            username: 'alsotabish',\n            password: 'tabishpassword',\n            isAdmin: false,\n            isStaff: true\n        }\n    ]\n                    \n                \n                    \n                        \n                                Defined in src/Services/users.service.ts:16\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\nexport type User = \n{\nid: number;\nname: string;\nusername: string;\npassword: string;\nisAdmin: boolean;\nisStaff: boolean;\n}\n \n@Injectable()\nexport class UsersService \n{\n    private readonly users: User[] = \n    [\n        {\n            id: 1,\n            name: 'afaq',\n            username: 'alsoafaq',\n            password: 'afaqpassword',\n            isAdmin: true,\n            isStaff: false\n        },\n        {\n            id: 2,\n            name: 'tabish',\n            username: 'alsotabish',\n            password: 'tabishpassword',\n            isAdmin: false,\n            isStaff: true\n        }\n    ];\n\n\n    async findone(username: string)//: Promise\n    {\n        return this.users.find(user => user.username === username)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/Controllers/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/Controllers/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/Controllers/dish.controller.ts\n            \n            controller\n            DishController\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/Controllers/expense.controller.ts\n            \n            controller\n            ExpenseController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/Controllers/inventory.controller.ts\n            \n            controller\n            InventoryController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/Controllers/order.controller.ts\n            \n            controller\n            OrderController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/DTO/Check-Out.DTO.ts\n            \n            class\n            CheckOutDTO\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/DTO/Dish-DTO.ts\n            \n            class\n            DishDTO\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/DTO/Expense-DTO.ts\n            \n            class\n            ExpenseDTO\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/DTO/Inventory.DTO.ts\n            \n            class\n            InventoryDTO\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/DTO/Order-DTO.ts\n            \n            class\n            OrderDTO\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/DTO/User-DTO.ts\n            \n            class\n            UserDTO\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/Entities/Dish.entity.ts\n            \n            class\n            Dish\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/Entities/Expense-Types.entity.ts\n            \n            class\n            ExpenseType\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/Entities/Expense.entity.ts\n            \n            class\n            Expense\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/Entities/Inventory.entity.ts\n            \n            class\n            Inventory\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/Entities/Order-Detail.entity.ts\n            \n            class\n            OrderDetails\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/Entities/Order.entity.ts\n            \n            class\n            Order\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/Entities/User.entity.ts\n            \n            class\n            Users\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/Guards/authenticated.guard.ts\n            \n            guard\n            AuthenticatedGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/Guards/isAdmin.guard.ts\n            \n            guard\n            IsAdmin\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/Guards/isStaff.guard.ts\n            \n            guard\n            isStaff\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/Guards/local-auth.guard.ts\n            \n            injectable\n            LocalAuthGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/Pipes/Dish-Validation.pipe.ts\n            \n            injectable\n            DishNameValidationPipe\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/Pipes/DishAlreadyExists.pipe.ts\n            \n            injectable\n            DishAlreadyExists\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/Pipes/Expense-Validation.pipe.ts\n            \n            injectable\n            ExpenseValidationPipe\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/Repositories/Dish-Repository.ts\n            \n            class\n            DishRepository\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/Repositories/Expense-Repository.ts\n            \n            class\n            ExpenseRepository\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/Repositories/Inventory-Repository.ts\n            \n            class\n            InventoryRepository\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/Repositories/Order-Repository.ts\n            \n            class\n            OrderRepository\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/Repositories/User-Respository.ts\n            \n            class\n            UserRepository\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/Services/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/Services/dish.service.ts\n            \n            injectable\n            DishService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/Services/expense.service.ts\n            \n            injectable\n            ExpenseService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/Services/inventory.service.ts\n            \n            injectable\n            InventoryService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/Services/order.service.ts\n            \n            injectable\n            OrderService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/Services/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/local.strategy.ts\n            \n            injectable\n            LocalStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/session.serializer.ts\n            \n            injectable\n            SessionSerializer\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/config/TypeOrm.config.ts\n            \n            variable\n            typeormConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/extras/helper.ts\n            \n            class\n            Helper\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            variable\n            module\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            variable\n            SqliteStore\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/bull : ^0.4.2\n        \n            @nestjs/common : ^8.2.0\n        \n            @nestjs/core : ^8.2.0\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/passport : ^8.0.1\n        \n            @nestjs/platform-express : ^8.2.0\n        \n            @nestjs/serve-static : ^2.2.2\n        \n            @nestjs/swagger : ^5.1.4\n        \n            @nestjs/typeorm : ^8.0.2\n        \n            @types/bcrypt : ^5.0.0\n        \n            @types/express : ^4.17.13\n        \n            @types/express-session : ^1.17.4\n        \n            @types/jest : ^26.0.24\n        \n            @types/passport-local : ^1.0.34\n        \n            @types/supertest : ^2.0.11\n        \n            bcrypt : ^5.0.1\n        \n            better-sqlite3 : ^7.4.4\n        \n            better-sqlite3-session-store : 0.0.2\n        \n            bull : ^4.1.0\n        \n            class-transformer : ^0.4.0\n        \n            class-validator : ^0.13.1\n        \n            csurf : ^1.11.0\n        \n            eslint : ^7.30.0\n        \n            eslint-config-prettier : ^8.3.0\n        \n            eslint-plugin-prettier : ^3.4.0\n        \n            express-session : ^1.17.2\n        \n            fs : 0.0.1-security\n        \n            moment : ^2.29.1\n        \n            mysql2 : ^2.3.2\n        \n            passport : ^0.4.1\n        \n            passport-local : ^1.0.0\n        \n            path : ^0.12.7\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.4.0\n        \n            supertest : ^6.1.3\n        \n            swagger-ui-express : ^4.1.6\n        \n            tsconfig-paths : ^3.10.1\n        \n            typeorm : ^0.2.40\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/isStaff.html":{"url":"guards/isStaff.html","title":"guard - isStaff","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    isStaff\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/Guards/isStaff.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                    \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/Guards/isStaff.guard.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { BadRequestException, CanActivate, ExecutionContext, Injectable, UnauthorizedException } from \"@nestjs/common\";\n\n\n@Injectable()\nexport class isStaff implements CanActivate\n{ \n    async canActivate(context: ExecutionContext)\n    {\n        const request = context.switchToHttp().getRequest();\n        if(request.user===undefined) \n        {\n            throw new BadRequestException('You need to Log In first...!!!');\n        }\n        if(!request.user.isStaff === true)\n        {\n            throw new UnauthorizedException('You are not authorized for this request...!!!');\n        }\n        return true;\n    }\n}\n        \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DishModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ExpenseModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        InventoryModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OrderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_DishModule\n\n\n\ncluster_DishModule_providers\n\n\n\ncluster_ExpenseModule\n\n\n\ncluster_ExpenseModule_providers\n\n\n\ncluster_InventoryModule\n\n\n\ncluster_InventoryModule_providers\n\n\n\ncluster_OrderModule\n\n\n\ncluster_OrderModule_imports\n\n\n\ncluster_OrderModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nDishModule\n\nDishModule\n\nAppModule -->\n\nDishModule->AppModule\n\n\n\n\n\nExpenseModule\n\nExpenseModule\n\nAppModule -->\n\nExpenseModule->AppModule\n\n\n\n\n\nInventoryModule\n\nInventoryModule\n\nAppModule -->\n\nInventoryModule->AppModule\n\n\n\n\n\nOrderModule\n\nOrderModule\n\nAppModule -->\n\nOrderModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nAuthModule -->\n\nUsersService->AuthModule\n\n\n\nAuthModule -->\n\nUsersService->AuthModule\n\n\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nSessionSerializer\n\nSessionSerializer\n\nAuthModule -->\n\nSessionSerializer->AuthModule\n\n\n\n\n\nDishService\n\nDishService\n\nDishModule -->\n\nDishService->DishModule\n\n\n\n\n\nExpenseService\n\nExpenseService\n\nExpenseModule -->\n\nExpenseService->ExpenseModule\n\n\n\n\n\nInventoryService\n\nInventoryService\n\nInventoryModule -->\n\nInventoryService->InventoryModule\n\n\n\n\n\nInventoryRepository\n\nInventoryRepository\n\nOrderModule -->\n\nInventoryRepository->OrderModule\n\n\n\n\n\nOrderService\n\nOrderService\n\nOrderModule -->\n\nOrderService->OrderModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        7 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    6 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    13 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    19 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    3 Guards\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            User   (src/.../users.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/Services/users.service.ts\n    \n    \n        \n            \n                \n                    \n                    User\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            module   (src/.../main.ts)\n                        \n                        \n                            SqliteStore   (src/.../main.ts)\n                        \n                        \n                            typeormConfig   (src/.../TypeOrm.config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SqliteStore\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require('better-sqlite3-session-store')(session)\n                    \n                \n\n\n        \n    \n\n    src/config/TypeOrm.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        typeormConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TypeOrmModuleOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n    type: \"mysql\",\n    host: 'localhost',\n    port: 3306,\n    username: 'root',\n    password: '',\n    database: \"mangal_oriental\",\n    //entities: [join(__dirname + '/../**/*.entity{.ts,.js}')],\n    entities: [join(__dirname + 'dist/**/*.entity{.ts,.js}')],\n    autoLoadEntities: true,\n    retryAttempts: 3,\n    dateStrings: true,\n    synchronize: true,\n    keepConnectionAlive: true\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
